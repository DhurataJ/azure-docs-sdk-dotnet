<Type Name="PurviewScanningServiceClient" FullName="Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient">
  <TypeSignature Language="C#" Value="public class PurviewScanningServiceClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewScanningServiceClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewScanningServiceClient" />
  <TypeSignature Language="F#" Value="type PurviewScanningServiceClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewScanningService service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewScanningServiceClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewScanningServiceClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PurviewScanningServiceClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As PurviewScanningServiceClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions -&gt; Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient" Usage="new Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Purview.Scanning.PurviewScanningServiceClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The scanning endpoint of your purview account. Example: https://{accountName}.scan.purview.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of PurviewScanningServiceClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateKeyVaultReference">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateKeyVaultReference (string azureKeyVaultName, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateKeyVaultReference(string azureKeyVaultName, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateKeyVaultReference(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateKeyVaultReference (azureKeyVaultName As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateKeyVaultReference : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdateKeyVaultReference : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.CreateOrUpdateKeyVaultReference (azureKeyVaultName, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates an instance of a azureKeyVault. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateKeyVaultReferenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateKeyVaultReferenceAsync (string azureKeyVaultName, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateKeyVaultReferenceAsync(string azureKeyVaultName, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateKeyVaultReferenceAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateKeyVaultReferenceAsync (azureKeyVaultName As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateKeyVaultReferenceAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateKeyVaultReferenceAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.CreateOrUpdateKeyVaultReferenceAsync (azureKeyVaultName, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates an instance of a azureKeyVault. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateScanRuelset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdateScanRuelset (string scanRulesetName, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdateScanRuelset(string scanRulesetName, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateScanRuelset(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateScanRuelset (scanRulesetName As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateScanRuelset : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateOrUpdateScanRuelset : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.CreateOrUpdateScanRuelset (scanRulesetName, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates or Updates a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI" (required)
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateScanRuelsetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateScanRuelsetAsync (string scanRulesetName, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateScanRuelsetAsync(string scanRulesetName, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.CreateOrUpdateScanRuelsetAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateScanRuelsetAsync (scanRulesetName As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateScanRuelsetAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateScanRuelsetAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.CreateOrUpdateScanRuelsetAsync (scanRulesetName, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Creates or Updates a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI" (required)
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteKeyVaultReference">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteKeyVaultReference (string azureKeyVaultName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteKeyVaultReference(string azureKeyVaultName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteKeyVaultReference(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteKeyVaultReference (azureKeyVaultName As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteKeyVaultReference : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteKeyVaultReference : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.DeleteKeyVaultReference (azureKeyVaultName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Deletes the azureKeyVault associated with the account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteKeyVaultReferenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteKeyVaultReferenceAsync (string azureKeyVaultName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteKeyVaultReferenceAsync(string azureKeyVaultName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteKeyVaultReferenceAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteKeyVaultReferenceAsync (azureKeyVaultName As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteKeyVaultReferenceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteKeyVaultReferenceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.DeleteKeyVaultReferenceAsync (azureKeyVaultName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Deletes the azureKeyVault associated with the account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteScanRuleset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteScanRuleset (string scanRulesetName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteScanRuleset(string scanRulesetName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteScanRuleset(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteScanRuleset (scanRulesetName As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteScanRuleset : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteScanRuleset : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.DeleteScanRuleset (scanRulesetName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Deletes a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteScanRulesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteScanRulesetAsync (string scanRulesetName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteScanRulesetAsync(string scanRulesetName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.DeleteScanRulesetAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteScanRulesetAsync (scanRulesetName As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteScanRulesetAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteScanRulesetAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.DeleteScanRulesetAsync (scanRulesetName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Deletes a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationRuleClient">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient GetClassificationRuleClient (string classificationRuleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient GetClassificationRuleClient(string classificationRuleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRuleClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClassificationRuleClient (classificationRuleName As String) As PurviewClassificationRuleClient" />
      <MemberSignature Language="F#" Value="member this.GetClassificationRuleClient : string -&gt; Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient" Usage="purviewScanningServiceClient.GetClassificationRuleClient classificationRuleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Scanning.PurviewClassificationRuleClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classificationRuleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classificationRuleName">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationRules">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetClassificationRules (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetClassificationRules(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRules(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationRules (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationRules : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetClassificationRules : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetClassificationRules options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List classification rules in Account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "System" | "Custom"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationRulesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetClassificationRulesAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetClassificationRulesAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetClassificationRulesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationRulesAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationRulesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetClassificationRulesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetClassificationRulesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List classification rules in Account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "System" | "Custom"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourceClient">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Scanning.PurviewDataSourceClient GetDataSourceClient (string dataSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Azure.Analytics.Purview.Scanning.PurviewDataSourceClient GetDataSourceClient(string dataSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSourceClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataSourceClient (dataSourceName As String) As PurviewDataSourceClient" />
      <MemberSignature Language="F#" Value="member this.GetDataSourceClient : string -&gt; Azure.Analytics.Purview.Scanning.PurviewDataSourceClient" Usage="purviewScanningServiceClient.GetDataSourceClient dataSourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Scanning.PurviewDataSourceClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSourceName">To be added.</param>
        <summary />
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSources">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetDataSources (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetDataSources(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSources(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSources (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetDataSources : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetDataSources : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetDataSources options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List data sources in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: "Custom" | "System",
                          scanLevelType: "Full" | "Incremental",
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataSourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetDataSourcesAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetDataSourcesAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetDataSourcesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataSourcesAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetDataSourcesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetDataSourcesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetDataSourcesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List data sources in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: "Custom" | "System",
                          scanLevelType: "Full" | "Incremental",
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultReference">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetKeyVaultReference (string azureKeyVaultName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetKeyVaultReference(string azureKeyVaultName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReference(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultReference (azureKeyVaultName As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultReference : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetKeyVaultReference : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetKeyVaultReference (azureKeyVaultName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Gets azureKeyVault information. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultReferenceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetKeyVaultReferenceAsync (string azureKeyVaultName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetKeyVaultReferenceAsync(string azureKeyVaultName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferenceAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultReferenceAsync (azureKeyVaultName As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultReferenceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetKeyVaultReferenceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetKeyVaultReferenceAsync (azureKeyVaultName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="azureKeyVaultName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="azureKeyVaultName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Gets azureKeyVault information. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              name: string,
              properties: {
                baseUrl: string,
                description: string
              }
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultReferences">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetKeyVaultReferences (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetKeyVaultReferences(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferences(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultReferences (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultReferences : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetKeyVaultReferences : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetKeyVaultReferences options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List azureKeyVaults in account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  properties: {
                    baseUrl: string,
                    description: string
                  }
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyVaultReferencesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetKeyVaultReferencesAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetKeyVaultReferencesAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetKeyVaultReferencesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyVaultReferencesAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyVaultReferencesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetKeyVaultReferencesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetKeyVaultReferencesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List azureKeyVaults in account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  properties: {
                    baseUrl: string,
                    description: string
                  }
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestSystemRulestes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetLatestSystemRulestes (string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetLatestSystemRulestes(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetLatestSystemRulestes(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLatestSystemRulestes (Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetLatestSystemRulestes : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetLatestSystemRulestes : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetLatestSystemRulestes (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get the latest version of a system scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestSystemRulestesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetLatestSystemRulestesAsync (string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetLatestSystemRulestesAsync(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetLatestSystemRulestesAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLatestSystemRulestesAsync (Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetLatestSystemRulestesAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetLatestSystemRulestesAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetLatestSystemRulestesAsync (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get the latest version of a system scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScanRuleset">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetScanRuleset (string scanRulesetName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetScanRuleset(string scanRulesetName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRuleset(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScanRuleset (scanRulesetName As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetScanRuleset : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetScanRuleset : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetScanRuleset (scanRulesetName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScanRulesetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetScanRulesetAsync (string scanRulesetName, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetScanRulesetAsync(string scanRulesetName, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesetAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScanRulesetAsync (scanRulesetName As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetScanRulesetAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetScanRulesetAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetScanRulesetAsync (scanRulesetName, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scanRulesetName" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="scanRulesetName"> The String to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a scan ruleset. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScanRulesets">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetScanRulesets (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetScanRulesets(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesets(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScanRulesets (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetScanRulesets : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetScanRulesets : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetScanRulesets options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List scan rulesets in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScanRulesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetScanRulesetsAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetScanRulesetsAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetScanRulesetsAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScanRulesetsAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetScanRulesetsAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetScanRulesetsAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetScanRulesetsAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List scan rulesets in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesets">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSystemRulesets (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSystemRulesets(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesets(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesets (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesets : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetSystemRulesets : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetSystemRulesets options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List all system scan rulesets for an account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSystemRulesetsAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSystemRulesetsAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSystemRulesetsAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetSystemRulesetsAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List all system scan rulesets for an account. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsForDataSource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSystemRulesetsForDataSource (string dataSourceType, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSystemRulesetsForDataSource(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForDataSource(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsForDataSource (dataSourceType As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsForDataSource : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetSystemRulesetsForDataSource : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetSystemRulesetsForDataSource (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a system scan ruleset for a data source. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsForDataSourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSystemRulesetsForDataSourceAsync (string dataSourceType, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSystemRulesetsForDataSourceAsync(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForDataSourceAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsForDataSourceAsync (dataSourceType As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsForDataSourceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSystemRulesetsForDataSourceAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetSystemRulesetsForDataSourceAsync (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a system scan ruleset for a data source. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsForVersion">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSystemRulesetsForVersion (int version, string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSystemRulesetsForVersion(int32 version, string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForVersion(System.Int32,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsForVersion (version As Integer, Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsForVersion : int * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetSystemRulesetsForVersion : int * string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetSystemRulesetsForVersion (version, dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="version"> The Integer to use. </param>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a scan ruleset by version. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsForVersionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSystemRulesetsForVersionAsync (int version, string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSystemRulesetsForVersionAsync(int32 version, string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsForVersionAsync(System.Int32,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsForVersionAsync (version As Integer, Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsForVersionAsync : int * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSystemRulesetsForVersionAsync : int * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetSystemRulesetsForVersionAsync (version, dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Int32" />
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="version"> The Integer to use. </param>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> Get a scan ruleset by version. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              scanRulesetType: "Custom" | "System",
              status: "Enabled" | "Disabled",
              version: number,
              id: string,
              name: string,
              kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsVersions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetSystemRulesetsVersions (string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetSystemRulesetsVersions(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsVersions(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsVersions (Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsVersions : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetSystemRulesetsVersions : string * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetSystemRulesetsVersions (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> List system scan ruleset versions in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemRulesetsVersionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetSystemRulesetsVersionsAsync (string dataSourceType = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetSystemRulesetsVersionsAsync(string dataSourceType, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetSystemRulesetsVersionsAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSystemRulesetsVersionsAsync (Optional dataSourceType As String = Nothing, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetSystemRulesetsVersionsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetSystemRulesetsVersionsAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetSystemRulesetsVersionsAsync (dataSourceType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSourceType" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="dataSourceType"> The DataSourceType to use. </param>
        <param name="options"> The request options. </param>
        <summary> List system scan ruleset versions in Data catalog. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  scanRulesetType: "Custom" | "System",
                  status: "Enabled" | "Disabled",
                  version: number,
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnparentedDataSources">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetUnparentedDataSources (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetUnparentedDataSources(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetUnparentedDataSources(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnparentedDataSources (Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetUnparentedDataSources : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetUnparentedDataSources : Azure.RequestOptions -&gt; Azure.Response" Usage="purviewScanningServiceClient.GetUnparentedDataSources options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Lists the data sources in the account that do not belong to any collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: "Custom" | "System",
                          scanLevelType: "Full" | "Incremental",
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnparentedDataSourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetUnparentedDataSourcesAsync (Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetUnparentedDataSourcesAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.GetUnparentedDataSourcesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUnparentedDataSourcesAsync (Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetUnparentedDataSourcesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetUnparentedDataSourcesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewScanningServiceClient.GetUnparentedDataSourcesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> Lists the data sources in the account that do not belong to any collection. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  id: string,
                  name: string,
                  kind: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI",
                  scans: [
                    {
                      id: string,
                      name: string,
                      kind: "AzureSubscriptionCredential" | "AzureSubscriptionMsi" | "AzureResourceGroupCredential" | "AzureResourceGroupMsi" | "AzureSynapseWorkspaceCredential" | "AzureSynapseWorkspaceMsi" | "AzureSynapseCredential" | "AzureSynapseMsi" | "AdlsGen1Credential" | "AdlsGen1Msi" | "AdlsGen2Credential" | "AdlsGen2Msi" | "AmazonAccountCredential" | "AmazonS3Credential" | "AmazonS3RoleARN" | "AmazonSqlCredential" | "AzureCosmosDbCredential" | "AzureDataExplorerCredential" | "AzureDataExplorerMsi" | "AzureFileServiceCredential" | "AzureSqlDatabaseCredential" | "AzureSqlDatabaseMsi" | "AmazonPostgreSqlCredential" | "AzurePostgreSqlCredential" | "SqlServerDatabaseCredential" | "AzureSqlDatabaseManagedInstanceCredential" | "AzureSqlDatabaseManagedInstanceMsi" | "AzureSqlDataWarehouseCredential" | "AzureSqlDataWarehouseMsi" | "AzureMySqlCredential" | "AzureStorageCredential" | "AzureStorageMsi" | "TeradataTeradataCredential" | "TeradataTeradataUserPass" | "TeradataUserPass" | "OracleOracleCredential" | "OracleOracleUserPass" | "SapS4HanaSapS4HanaCredential" | "SapS4HanaSapS4HanaUserPass" | "SapEccSapEccCredential" | "SapEccSapEccUserPass" | "PowerBIDelegated" | "PowerBIMsi",
                      scanResults: [
                        {
                          parentId: string,
                          id: string,
                          resourceId: string,
                          status: string,
                          assetsDiscovered: number,
                          assetsClassified: number,
                          diagnostics: {
                            notifications: [
                              {
                                message: string,
                                code: number
                              }
                            ],
                            exceptionCountMap: Dictionary&lt;string, number&gt;
                          },
                          startTime: string (ISO 8601 Format),
                          queuedTime: string (ISO 8601 Format),
                          pipelineStartTime: string (ISO 8601 Format),
                          endTime: string (ISO 8601 Format),
                          scanRulesetVersion: number,
                          scanRulesetType: "Custom" | "System",
                          scanLevelType: "Full" | "Incremental",
                          errorMessage: string,
                          error: {
                            code: string,
                            message: string,
                            target: string,
                            details: [
                              {
                                code: string,
                                message: string,
                                target: string,
                                details: [ErrorModel]
                              }
                            ]
                          },
                          runType: string,
                          dataSourceType: "None" | "Collection" | "AzureSubscription" | "AzureResourceGroup" | "AzureSynapseWorkspace" | "AzureSynapse" | "AdlsGen1" | "AdlsGen2" | "AmazonAccount" | "AmazonS3" | "AmazonSql" | "AzureCosmosDb" | "AzureDataExplorer" | "AzureFileService" | "AzureSqlDatabase" | "AmazonPostgreSql" | "AzurePostgreSql" | "SqlServerDatabase" | "AzureSqlDatabaseManagedInstance" | "AzureSqlDataWarehouse" | "AzureMySql" | "AzureStorage" | "Teradata" | "Oracle" | "SapS4Hana" | "SapEcc" | "PowerBI"
                        }
                      ]
                    }
                  ]
                }
              ],
              nextLink: string,
              count: number
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [
                  {
                    code: string,
                    message: string,
                    target: string,
                    details: [ErrorModel]
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Scanning.PurviewScanningServiceClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Scanning</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
