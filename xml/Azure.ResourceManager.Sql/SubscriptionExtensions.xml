<Type Name="SubscriptionExtensions" FullName="Azure.ResourceManager.Sql.SubscriptionExtensions">
  <TypeSignature Language="C#" Value="public static class SubscriptionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SubscriptionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.SubscriptionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SubscriptionExtensions" />
  <TypeSignature Language="F#" Value="type SubscriptionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Subscription. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckNameAvailabilityServer">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityServer (this Azure.ResourceManager.Resources.Subscription subscription, Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt; CheckNameAvailabilityServer(class Azure.ResourceManager.Resources.Subscription subscription, class Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.CheckNameAvailabilityServer(Azure.ResourceManager.Resources.Subscription,Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityServer (subscription As Subscription, parameters As CheckNameAvailabilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameAvailabilityResponse)" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityServer : Azure.ResourceManager.Resources.Subscription * Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.CheckNameAvailabilityServer (subscription, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="parameters"> The name availability request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Determines whether a resource can be created with the specified name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckNameAvailabilityServerAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityServerAsync (this Azure.ResourceManager.Resources.Subscription subscription, Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;&gt; CheckNameAvailabilityServerAsync(class Azure.ResourceManager.Resources.Subscription subscription, class Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.CheckNameAvailabilityServerAsync(Azure.ResourceManager.Resources.Subscription,Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckNameAvailabilityServerAsync (subscription As Subscription, parameters As CheckNameAvailabilityRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameAvailabilityResponse))" />
      <MemberSignature Language="F#" Value="static member CheckNameAvailabilityServerAsync : Azure.ResourceManager.Resources.Subscription * Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.CheckNameAvailabilityServerAsync (subscription, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.CheckNameAvailabilityResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.CheckNameAvailabilityRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="parameters"> The name availability request parameters. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Determines whether a resource can be created with the specified name. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByLocationCapability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt; GetByLocationCapability (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, Azure.ResourceManager.Sql.Models.CapabilityGroup? include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.LocationCapabilities&gt; GetByLocationCapability(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.CapabilityGroup&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetByLocationCapability(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.CapabilityGroup},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetByLocationCapability (subscription As Subscription, locationName As String, Optional include As Nullable(Of CapabilityGroup) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of LocationCapabilities)" />
      <MemberSignature Language="F#" Value="static member GetByLocationCapability : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;Azure.ResourceManager.Sql.Models.CapabilityGroup&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetByLocationCapability (subscription, locationName, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="include" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.CapabilityGroup&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location name whose capabilities are retrieved. </param>
        <param name="include"> If specified, restricts the response to only include the selected item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the subscription capabilities available for the specified location. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetByLocationCapabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;&gt; GetByLocationCapabilityAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, Azure.ResourceManager.Sql.Models.CapabilityGroup? include = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;&gt; GetByLocationCapabilityAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.CapabilityGroup&gt; include, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetByLocationCapabilityAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.CapabilityGroup},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetByLocationCapabilityAsync (subscription As Subscription, locationName As String, Optional include As Nullable(Of CapabilityGroup) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of LocationCapabilities))" />
      <MemberSignature Language="F#" Value="static member GetByLocationCapabilityAsync : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;Azure.ResourceManager.Sql.Models.CapabilityGroup&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetByLocationCapabilityAsync (subscription, locationName, include, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.LocationCapabilities&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="include" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.CapabilityGroup&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location name whose capabilities are retrieved. </param>
        <param name="include"> If specified, restricts the response to only include the selected item. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets the subscription capabilities available for the specified location. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServers">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.DeletedServerCollection GetDeletedServers (this Azure.ResourceManager.Resources.Subscription subscription, string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.DeletedServerCollection GetDeletedServers(class Azure.ResourceManager.Resources.Subscription subscription, string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServers(Azure.ResourceManager.Resources.Subscription,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServers (subscription As Subscription, locationName As String) As DeletedServerCollection" />
      <MemberSignature Language="F#" Value="static member GetDeletedServers : Azure.ResourceManager.Resources.Subscription * string -&gt; Azure.ResourceManager.Sql.DeletedServerCollection" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServers (subscription, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DeletedServerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary> Gets a collection of DeletedServers in the DeletedServer. </summary>
        <returns> An object representing collection of DeletedServers and their operations over a DeletedServer. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServers">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt; GetDeletedServers (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.DeletedServer&gt; GetDeletedServers(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServers(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServers (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DeletedServer)" />
      <MemberSignature Language="F#" Value="static member GetDeletedServers : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServers (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all deleted servers in a subscription. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.DeletedServer" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeletedServersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt; GetDeletedServersAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.DeletedServer&gt; GetDeletedServersAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServersAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDeletedServersAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DeletedServer)" />
      <MemberSignature Language="F#" Value="static member GetDeletedServersAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetDeletedServersAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.DeletedServer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all deleted servers in a subscription. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.DeletedServer" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePool&gt; GetInstancePools (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.InstancePool&gt; GetInstancePools(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetInstancePools(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePools (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of InstancePool)" />
      <MemberSignature Language="F#" Value="static member GetInstancePools : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePool&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetInstancePools (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.InstancePool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all instance pools in the subscription. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.InstancePool" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstancePoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePool&gt; GetInstancePoolsAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.InstancePool&gt; GetInstancePoolsAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetInstancePoolsAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInstancePoolsAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of InstancePool)" />
      <MemberSignature Language="F#" Value="static member GetInstancePoolsAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePool&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetInstancePoolsAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.InstancePool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all instance pools in the subscription. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.InstancePool" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByLocation (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByLocation(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByLocation(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByLocation (subscription As Subscription, locationName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByLocation : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByLocation (subscription, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given location. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByLocationAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByLocationAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByLocationAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByLocationAsync (subscription As Subscription, locationName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByLocationAsync : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByLocationAsync (subscription, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given location. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByServer">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByServer (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByServer(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByServer(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByServer (subscription As Subscription, locationName As String, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByServer : Azure.ResourceManager.Resources.Subscription * string * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByServer (subscription, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given server. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="longTermRetentionServerName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionBackupsByServerAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByServerAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt; GetLongTermRetentionBackupsByServerAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByServerAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionBackupsByServerAsync (subscription As Subscription, locationName As String, longTermRetentionServerName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionBackupsByServerAsync : Azure.ResourceManager.Resources.Subscription * string * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionBackupsByServerAsync (subscription, locationName, longTermRetentionServerName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given server. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="longTermRetentionServerName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="longTermRetentionServerName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByInstance">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByInstance (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByInstance(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByInstance(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByInstance (subscription As Subscription, locationName As String, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByInstance : Azure.ResourceManager.Resources.Subscription * string * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByInstance (subscription, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given managed instance. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="managedInstanceName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByInstanceAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByInstanceAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByInstanceAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (subscription As Subscription, locationName As String, managedInstanceName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByInstanceAsync : Azure.ResourceManager.Resources.Subscription * string * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByInstanceAsync (subscription, locationName, managedInstanceName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for a given managed instance. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> or <paramref name="managedInstanceName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> or <paramref name="managedInstanceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByLocation (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByLocation(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByLocation(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByLocation (subscription As Subscription, locationName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubscriptionLongTermRetentionManagedInstanceBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByLocation : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByLocation (subscription, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for managed databases in a given location. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLongTermRetentionManagedInstanceBackupsByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByLocationAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, bool? onlyLatestPerDatabase = default, Azure.ResourceManager.Sql.Models.DatabaseState? databaseState = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt; GetLongTermRetentionManagedInstanceBackupsByLocationAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Nullable`1&lt;bool&gt; onlyLatestPerDatabase, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.DatabaseState&gt; databaseState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByLocationAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Nullable{System.Boolean},System.Nullable{Azure.ResourceManager.Sql.Models.DatabaseState},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetLongTermRetentionManagedInstanceBackupsByLocationAsync (subscription As Subscription, locationName As String, Optional onlyLatestPerDatabase As Nullable(Of Boolean) = Nothing, Optional databaseState As Nullable(Of DatabaseState) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubscriptionLongTermRetentionManagedInstanceBackup)" />
      <MemberSignature Language="F#" Value="static member GetLongTermRetentionManagedInstanceBackupsByLocationAsync : Azure.ResourceManager.Resources.Subscription * string * Nullable&lt;bool&gt; * Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt; * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetLongTermRetentionManagedInstanceBackupsByLocationAsync (subscription, locationName, onlyLatestPerDatabase, databaseState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="onlyLatestPerDatabase" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="databaseState" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.DatabaseState&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="onlyLatestPerDatabase"> Whether or not to only get the latest backup for each database. </param>
        <param name="databaseState"> Whether to query against just live databases, just deleted databases, or all databases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Lists the long term retention backups for managed databases in a given location. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstances">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt; GetManagedInstances (this Azure.ResourceManager.Resources.Subscription subscription, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstance&gt; GetManagedInstances(class Azure.ResourceManager.Resources.Subscription subscription, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetManagedInstances(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstances (subscription As Subscription, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ManagedInstance)" />
      <MemberSignature Language="F#" Value="static member GetManagedInstances : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetManagedInstances (subscription, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all managed instances in the subscription. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstance" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedInstancesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt; GetManagedInstancesAsync (this Azure.ResourceManager.Resources.Subscription subscription, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.ManagedInstance&gt; GetManagedInstancesAsync(class Azure.ResourceManager.Resources.Subscription subscription, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetManagedInstancesAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetManagedInstancesAsync (subscription As Subscription, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ManagedInstance)" />
      <MemberSignature Language="F#" Value="static member GetManagedInstancesAsync : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetManagedInstancesAsync (subscription, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.ManagedInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all managed instances in the subscription. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.ManagedInstance" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsHealthsByLocation">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt; GetOperationsHealthsByLocation (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.OperationsHealth&gt; GetOperationsHealthsByLocation(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetOperationsHealthsByLocation(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationsHealthsByLocation (subscription As Subscription, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of OperationsHealth)" />
      <MemberSignature Language="F#" Value="static member GetOperationsHealthsByLocation : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetOperationsHealthsByLocation (subscription, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a service operation health status. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.Models.OperationsHealth" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOperationsHealthsByLocationAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt; GetOperationsHealthsByLocationAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.OperationsHealth&gt; GetOperationsHealthsByLocationAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetOperationsHealthsByLocationAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetOperationsHealthsByLocationAsync (subscription As Subscription, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of OperationsHealth)" />
      <MemberSignature Language="F#" Value="static member GetOperationsHealthsByLocationAsync : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetOperationsHealthsByLocationAsync (subscription, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.OperationsHealth&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a service operation health status. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.Models.OperationsHealth" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServers">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServer&gt; GetSqlServers (this Azure.ResourceManager.Resources.Subscription subscription, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.SqlServer&gt; GetSqlServers(class Azure.ResourceManager.Resources.Subscription subscription, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlServers(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServers (subscription As Subscription, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SqlServer)" />
      <MemberSignature Language="F#" Value="static member GetSqlServers : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServer&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlServers (subscription, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.SqlServer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all servers in the subscription. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.SqlServer" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlServersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServer&gt; GetSqlServersAsync (this Azure.ResourceManager.Resources.Subscription subscription, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.SqlServer&gt; GetSqlServersAsync(class Azure.ResourceManager.Resources.Subscription subscription, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlServersAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlServersAsync (subscription As Subscription, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SqlServer)" />
      <MemberSignature Language="F#" Value="static member GetSqlServersAsync : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServer&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlServersAsync (subscription, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.SqlServer&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="expand"> The child resources to include in the response. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all servers in the subscription. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.SqlServer" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSqlTimeZones">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SqlTimeZoneCollection GetSqlTimeZones (this Azure.ResourceManager.Resources.Subscription subscription, string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SqlTimeZoneCollection GetSqlTimeZones(class Azure.ResourceManager.Resources.Subscription subscription, string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlTimeZones(Azure.ResourceManager.Resources.Subscription,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSqlTimeZones (subscription As Subscription, locationName As String) As SqlTimeZoneCollection" />
      <MemberSignature Language="F#" Value="static member GetSqlTimeZones : Azure.ResourceManager.Resources.Subscription * string -&gt; Azure.ResourceManager.Sql.SqlTimeZoneCollection" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSqlTimeZones (subscription, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SqlTimeZoneCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The String to use. </param>
        <summary> Gets a collection of SqlTimeZones in the SqlTimeZone. </summary>
        <returns> An object representing collection of SqlTimeZones and their operations over a SqlTimeZone. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection GetSubscriptionLongTermRetentionBackups (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection GetSubscriptionLongTermRetentionBackups(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string longTermRetentionServerName, string longTermRetentionDatabaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionLongTermRetentionBackups(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionBackups (subscription As Subscription, locationName As String, longTermRetentionServerName As String, longTermRetentionDatabaseName As String) As SubscriptionLongTermRetentionBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionBackups : Azure.ResourceManager.Resources.Subscription * string * string * string -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionLongTermRetentionBackups (subscription, locationName, longTermRetentionServerName, longTermRetentionDatabaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="longTermRetentionServerName" Type="System.String" />
        <Parameter Name="longTermRetentionDatabaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="longTermRetentionServerName"> The name of the server. </param>
        <param name="longTermRetentionDatabaseName"> The name of the database. </param>
        <summary> Gets a collection of SubscriptionLongTermRetentionBackups in the SubscriptionLongTermRetentionBackup. </summary>
        <returns> An object representing collection of SubscriptionLongTermRetentionBackups and their operations over a SubscriptionLongTermRetentionBackup. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" />, <paramref name="longTermRetentionServerName" />, or <paramref name="longTermRetentionDatabaseName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" />, <paramref name="longTermRetentionServerName" />, or <paramref name="longTermRetentionDatabaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionLongTermRetentionManagedInstanceBackups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection GetSubscriptionLongTermRetentionManagedInstanceBackups (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, string databaseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection GetSubscriptionLongTermRetentionManagedInstanceBackups(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, string managedInstanceName, string databaseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackups(Azure.ResourceManager.Resources.Subscription,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionLongTermRetentionManagedInstanceBackups (subscription As Subscription, locationName As String, managedInstanceName As String, databaseName As String) As SubscriptionLongTermRetentionManagedInstanceBackupCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionLongTermRetentionManagedInstanceBackups : Azure.ResourceManager.Resources.Subscription * string * string * string -&gt; Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionLongTermRetentionManagedInstanceBackups (subscription, locationName, managedInstanceName, databaseName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionLongTermRetentionManagedInstanceBackupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="managedInstanceName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The location of the database. </param>
        <param name="managedInstanceName"> The name of the managed instance. </param>
        <param name="databaseName"> The name of the managed database. </param>
        <summary> Gets a collection of SubscriptionLongTermRetentionManagedInstanceBackups in the SubscriptionLongTermRetentionManagedInstanceBackup. </summary>
        <returns> An object representing collection of SubscriptionLongTermRetentionManagedInstanceBackups and their operations over a SubscriptionLongTermRetentionManagedInstanceBackup. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" />, <paramref name="managedInstanceName" />, or <paramref name="databaseName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" />, <paramref name="managedInstanceName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionUsages">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.Sql.SubscriptionUsageCollection GetSubscriptionUsages (this Azure.ResourceManager.Resources.Subscription subscription, string locationName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.Sql.SubscriptionUsageCollection GetSubscriptionUsages(class Azure.ResourceManager.Resources.Subscription subscription, string locationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionUsages(Azure.ResourceManager.Resources.Subscription,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSubscriptionUsages (subscription As Subscription, locationName As String) As SubscriptionUsageCollection" />
      <MemberSignature Language="F#" Value="static member GetSubscriptionUsages : Azure.ResourceManager.Resources.Subscription * string -&gt; Azure.ResourceManager.Sql.SubscriptionUsageCollection" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSubscriptionUsages (subscription, locationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.SubscriptionUsageCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <summary> Gets a collection of SubscriptionUsages in the SubscriptionUsage. </summary>
        <returns> An object representing collection of SubscriptionUsages and their operations over a SubscriptionUsage. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncDatabaseIdsSyncGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroups (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroups(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSyncDatabaseIdsSyncGroups(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncDatabaseIdsSyncGroups (subscription As Subscription, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="static member GetSyncDatabaseIdsSyncGroups : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSyncDatabaseIdsSyncGroups (subscription, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a collection of sync database ids. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSyncDatabaseIdsSyncGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroupsAsync (this Azure.ResourceManager.Resources.Subscription subscription, string locationName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.SubResource&gt; GetSyncDatabaseIdsSyncGroupsAsync(class Azure.ResourceManager.Resources.Subscription subscription, string locationName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetSyncDatabaseIdsSyncGroupsAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSyncDatabaseIdsSyncGroupsAsync (subscription As Subscription, locationName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SubResource)" />
      <MemberSignature Language="F#" Value="static member GetSyncDatabaseIdsSyncGroupsAsync : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetSyncDatabaseIdsSyncGroupsAsync (subscription, locationName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.SubResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="locationName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="locationName"> The name of the region where the resource is located. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a collection of sync database ids. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.Models.SubResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="locationName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="locationName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt; GetVirtualClusters (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.VirtualCluster&gt; GetVirtualClusters(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetVirtualClusters(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClusters (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualCluster)" />
      <MemberSignature Language="F#" Value="static member GetVirtualClusters : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetVirtualClusters (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all virtualClusters in the subscription. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Sql.VirtualCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt; GetVirtualClustersAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.VirtualCluster&gt; GetVirtualClustersAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.SubscriptionExtensions.GetVirtualClustersAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualClustersAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualCluster)" />
      <MemberSignature Language="F#" Value="static member GetVirtualClustersAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt;" Usage="Azure.ResourceManager.Sql.SubscriptionExtensions.GetVirtualClustersAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.VirtualCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of all virtualClusters in the subscription. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Sql.VirtualCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
