<Type Name="ServerDatabaseSchemaTableColumnSensitivityLabelCollection" FullName="Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection">
  <TypeSignature Language="C#" Value="public class ServerDatabaseSchemaTableColumnSensitivityLabelCollection : Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServerDatabaseSchemaTableColumnSensitivityLabelCollection extends Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ServerDatabaseSchemaTableColumnSensitivityLabelCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type ServerDatabaseSchemaTableColumnSensitivityLabelCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing collection of ServerDatabaseSchemaTableColumnSensitivityLabel and their operations over its parent. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServerDatabaseSchemaTableColumnSensitivityLabelCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; CreateOrUpdate (bool waitForCompletion, Azure.ResourceManager.Sql.SensitivityLabelData parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; CreateOrUpdate(bool waitForCompletion, class Azure.ResourceManager.Sql.SensitivityLabelData parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.CreateOrUpdate(System.Boolean,Azure.ResourceManager.Sql.SensitivityLabelData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitForCompletion As Boolean, parameters As SensitivityLabelData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of ServerDatabaseSchemaTableColumnSensitivityLabel)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : bool * Azure.ResourceManager.Sql.SensitivityLabelData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&#xA;override this.CreateOrUpdate : bool * Azure.ResourceManager.Sql.SensitivityLabelData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.CreateOrUpdate (waitForCompletion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.SensitivityLabelData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="parameters"> The column sensitivity label resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates the sensitivity label of a given column
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/current
            Operation Id: SensitivityLabels_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; CreateOrUpdateAsync (bool waitForCompletion, Azure.ResourceManager.Sql.SensitivityLabelData parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; CreateOrUpdateAsync(bool waitForCompletion, class Azure.ResourceManager.Sql.SensitivityLabelData parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.CreateOrUpdateAsync(System.Boolean,Azure.ResourceManager.Sql.SensitivityLabelData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitForCompletion As Boolean, parameters As SensitivityLabelData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of ServerDatabaseSchemaTableColumnSensitivityLabel))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : bool * Azure.ResourceManager.Sql.SensitivityLabelData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;&#xA;override this.CreateOrUpdateAsync : bool * Azure.ResourceManager.Sql.SensitivityLabelData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.CreateOrUpdateAsync (waitForCompletion, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.SensitivityLabelData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="parameters"> The column sensitivity label resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Creates or updates the sensitivity label of a given column
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/current
            Operation Id: SensitivityLabels_CreateOrUpdate
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.Exists(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.Exists (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.ExistsAsync(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.ExistsAsync (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks to see if the resource exists in azure.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; Get (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; Get(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.Get(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerDatabaseSchemaTableColumnSensitivityLabel)" />
      <MemberSignature Language="F#" Value="abstract member Get : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&#xA;override this.Get : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.Get (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sensitivity label of a given column
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; GetAsync (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; GetAsync(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.GetAsync(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerDatabaseSchemaTableColumnSensitivityLabel))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;&#xA;override this.GetAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.GetAsync (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the sensitivity label of a given column
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; GetIfExists (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt; GetIfExists(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.GetIfExists(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ServerDatabaseSchemaTableColumnSensitivityLabel)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&#xA;override this.GetIfExists : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.GetIfExists (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; GetIfExistsAsync (Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt; GetIfExistsAsync(valuetype Azure.ResourceManager.Sql.Models.SensitivityLabelSource sensitivityLabelSource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabelCollection.GetIfExistsAsync(Azure.ResourceManager.Sql.Models.SensitivityLabelSource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (sensitivityLabelSource As SensitivityLabelSource, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ServerDatabaseSchemaTableColumnSensitivityLabel))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;&#xA;override this.GetIfExistsAsync : Azure.ResourceManager.Sql.Models.SensitivityLabelSource * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;" Usage="serverDatabaseSchemaTableColumnSensitivityLabelCollection.GetIfExistsAsync (sensitivityLabelSource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.ServerDatabaseSchemaTableColumnSensitivityLabel&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sensitivityLabelSource" Type="Azure.ResourceManager.Sql.Models.SensitivityLabelSource" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="sensitivityLabelSource"> The source of the sensitivity label. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Tries to get details for this resource from the service.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}
            Operation Id: SensitivityLabels_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
