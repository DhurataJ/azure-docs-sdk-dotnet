<Type Name="DatabasesOperations" FullName="Azure.ResourceManager.Sql.DatabasesOperations">
  <TypeSignature Language="C#" Value="public class DatabasesOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DatabasesOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Sql.DatabasesOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class DatabasesOperations" />
  <TypeSignature Language="F#" Value="type DatabasesOperations = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Databases service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DatabasesOperations ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of DatabasesOperations for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt; Get (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt; Get(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.Get(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Database)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;&#xA;override this.Get : string * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;" Usage="databasesOperations.Get (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;&gt; GetAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt;&gt; GetAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.GetAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Database))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;&gt;&#xA;override this.GetAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;&gt;" Usage="databasesOperations.GetAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Sql.Models.Database&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListByElasticPool">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt; ListByElasticPool (string resourceGroupName, string serverName, string elasticPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt; ListByElasticPool(string resourceGroupName, string serverName, string elasticPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListByElasticPool(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByElasticPool (resourceGroupName As String, serverName As String, elasticPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Database)" />
      <MemberSignature Language="F#" Value="abstract member ListByElasticPool : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;&#xA;override this.ListByElasticPool : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;" Usage="databasesOperations.ListByElasticPool (resourceGroupName, serverName, elasticPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="elasticPoolName"> The name of the elastic pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of databases in an elastic pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="elasticPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListByElasticPoolAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt; ListByElasticPoolAsync (string resourceGroupName, string serverName, string elasticPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt; ListByElasticPoolAsync(string resourceGroupName, string serverName, string elasticPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListByElasticPoolAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByElasticPoolAsync (resourceGroupName As String, serverName As String, elasticPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Database)" />
      <MemberSignature Language="F#" Value="abstract member ListByElasticPoolAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;&#xA;override this.ListByElasticPoolAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;" Usage="databasesOperations.ListByElasticPoolAsync (resourceGroupName, serverName, elasticPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="elasticPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="elasticPoolName"> The name of the elastic pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of databases in an elastic pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="elasticPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListByServer">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt; ListByServer (string resourceGroupName, string serverName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt; ListByServer(string resourceGroupName, string serverName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListByServer(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByServer (resourceGroupName As String, serverName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Database)" />
      <MemberSignature Language="F#" Value="abstract member ListByServer : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;&#xA;override this.ListByServer : string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;" Usage="databasesOperations.ListByServer (resourceGroupName, serverName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of databases. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListByServerAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt; ListByServerAsync (string resourceGroupName, string serverName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.Database&gt; ListByServerAsync(string resourceGroupName, string serverName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListByServerAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListByServerAsync (resourceGroupName As String, serverName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Database)" />
      <MemberSignature Language="F#" Value="abstract member ListByServerAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;&#xA;override this.ListByServerAsync : string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;" Usage="databasesOperations.ListByServerAsync (resourceGroupName, serverName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Database&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Gets a list of databases. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" /> or <paramref name="serverName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListMetricDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt; ListMetricDefinitions (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.MetricDefinition&gt; ListMetricDefinitions(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListMetricDefinitions(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMetricDefinitions (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of MetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member ListMetricDefinitions : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;&#xA;override this.ListMetricDefinitions : string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;" Usage="databasesOperations.ListMetricDefinitions (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns database metric definitions. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListMetricDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt; ListMetricDefinitionsAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.MetricDefinition&gt; ListMetricDefinitionsAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListMetricDefinitionsAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMetricDefinitionsAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of MetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member ListMetricDefinitionsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;&#xA;override this.ListMetricDefinitionsAsync : string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;" Usage="databasesOperations.ListMetricDefinitionsAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.MetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns database metric definitions. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt; ListMetrics (string resourceGroupName, string serverName, string databaseName, string filter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Sql.Models.Metric&gt; ListMetrics(string resourceGroupName, string serverName, string databaseName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListMetrics(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMetrics (resourceGroupName As String, serverName As String, databaseName As String, filter As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Metric)" />
      <MemberSignature Language="F#" Value="abstract member ListMetrics : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;&#xA;override this.ListMetrics : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;" Usage="databasesOperations.ListMetrics (resourceGroupName, serverName, databaseName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="filter"> An OData filter expression that describes a subset of metrics to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns database metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt; ListMetricsAsync (string resourceGroupName, string serverName, string databaseName, string filter, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Sql.Models.Metric&gt; ListMetricsAsync(string resourceGroupName, string serverName, string databaseName, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.ListMetricsAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListMetricsAsync (resourceGroupName As String, serverName As String, databaseName As String, filter As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Metric)" />
      <MemberSignature Language="F#" Value="abstract member ListMetricsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;&#xA;override this.ListMetricsAsync : string * string * string * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;" Usage="databasesOperations.ListMetricsAsync (resourceGroupName, serverName, databaseName, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Sql.Models.Metric&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="filter"> An OData filter expression that describes a subset of metrics to return. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Returns database metrics. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="filter" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Rename (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ResourceMoveDefinition parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Rename(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.ResourceMoveDefinition parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.Rename(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ResourceMoveDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Rename (resourceGroupName As String, serverName As String, databaseName As String, parameters As ResourceMoveDefinition, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Rename : string * string * string * Azure.ResourceManager.Sql.Models.ResourceMoveDefinition * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.Rename : string * string * string * Azure.ResourceManager.Sql.Models.ResourceMoveDefinition * System.Threading.CancellationToken -&gt; Azure.Response" Usage="databasesOperations.Rename (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ResourceMoveDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to rename. </param>
        <param name="parameters"> The resource move definition for renaming this database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenameAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; RenameAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ResourceMoveDefinition parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; RenameAsync(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.ResourceMoveDefinition parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.RenameAsync(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ResourceMoveDefinition,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RenameAsync (resourceGroupName As String, serverName As String, databaseName As String, parameters As ResourceMoveDefinition, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member RenameAsync : string * string * string * Azure.ResourceManager.Sql.Models.ResourceMoveDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.RenameAsync : string * string * string * Azure.ResourceManager.Sql.Models.ResourceMoveDefinition * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="databasesOperations.RenameAsync (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ResourceMoveDefinition" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to rename. </param>
        <param name="parameters"> The resource move definition for renaming this database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Renames a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCreateImportOperation">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation StartCreateImportOperation (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ExtensionName extensionName, Azure.ResourceManager.Sql.Models.ImportExtensionRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation StartCreateImportOperation(string resourceGroupName, string serverName, string databaseName, valuetype Azure.ResourceManager.Sql.Models.ExtensionName extensionName, class Azure.ResourceManager.Sql.Models.ImportExtensionRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartCreateImportOperation(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ExtensionName,Azure.ResourceManager.Sql.Models.ImportExtensionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateImportOperation (resourceGroupName As String, serverName As String, databaseName As String, extensionName As ExtensionName, parameters As ImportExtensionRequest, Optional cancellationToken As CancellationToken = Nothing) As DatabasesCreateImportOperationOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateImportOperation : string * string * string * Azure.ResourceManager.Sql.Models.ExtensionName * Azure.ResourceManager.Sql.Models.ImportExtensionRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&#xA;override this.StartCreateImportOperation : string * string * string * Azure.ResourceManager.Sql.Models.ExtensionName * Azure.ResourceManager.Sql.Models.ImportExtensionRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation" Usage="databasesOperations.StartCreateImportOperation (resourceGroupName, serverName, databaseName, extensionName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="extensionName" Type="Azure.ResourceManager.Sql.Models.ExtensionName" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ImportExtensionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to import into. </param>
        <param name="extensionName"> The name of the operation to perform. </param>
        <param name="parameters"> The required parameters for importing a Bacpac into a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates an import operation that imports a bacpac into an existing database. The existing database must be empty. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateImportOperationAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&gt; StartCreateImportOperationAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ExtensionName extensionName, Azure.ResourceManager.Sql.Models.ImportExtensionRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&gt; StartCreateImportOperationAsync(string resourceGroupName, string serverName, string databaseName, valuetype Azure.ResourceManager.Sql.Models.ExtensionName extensionName, class Azure.ResourceManager.Sql.Models.ImportExtensionRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartCreateImportOperationAsync(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ExtensionName,Azure.ResourceManager.Sql.Models.ImportExtensionRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateImportOperationAsync (resourceGroupName As String, serverName As String, databaseName As String, extensionName As ExtensionName, parameters As ImportExtensionRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesCreateImportOperationOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateImportOperationAsync : string * string * string * Azure.ResourceManager.Sql.Models.ExtensionName * Azure.ResourceManager.Sql.Models.ImportExtensionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&gt;&#xA;override this.StartCreateImportOperationAsync : string * string * string * Azure.ResourceManager.Sql.Models.ExtensionName * Azure.ResourceManager.Sql.Models.ImportExtensionRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&gt;" Usage="databasesOperations.StartCreateImportOperationAsync (resourceGroupName, serverName, databaseName, extensionName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateImportOperationOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="extensionName" Type="Azure.ResourceManager.Sql.Models.ExtensionName" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ImportExtensionRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to import into. </param>
        <param name="extensionName"> The name of the operation to perform. </param>
        <param name="parameters"> The required parameters for importing a Bacpac into a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates an import operation that imports a bacpac into an existing database. The existing database must be empty. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation StartCreateOrUpdate (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.Database parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation StartCreateOrUpdate(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.Database parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartCreateOrUpdate(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.Database,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdate (resourceGroupName As String, serverName As String, databaseName As String, parameters As Database, Optional cancellationToken As CancellationToken = Nothing) As DatabasesCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdate : string * string * string * Azure.ResourceManager.Sql.Models.Database * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&#xA;override this.StartCreateOrUpdate : string * string * string * Azure.ResourceManager.Sql.Models.Database * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation" Usage="databasesOperations.StartCreateOrUpdate (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.Database" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="parameters"> The requested database resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new database or updates an existing database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartCreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.Database parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&gt; StartCreateOrUpdateAsync(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.Database parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartCreateOrUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.Database,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartCreateOrUpdateAsync (resourceGroupName As String, serverName As String, databaseName As String, parameters As Database, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartCreateOrUpdateAsync : string * string * string * Azure.ResourceManager.Sql.Models.Database * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&gt;&#xA;override this.StartCreateOrUpdateAsync : string * string * string * Azure.ResourceManager.Sql.Models.Database * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&gt;" Usage="databasesOperations.StartCreateOrUpdateAsync (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.Database" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="parameters"> The requested database resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Creates a new database or updates an existing database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDelete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesDeleteOperation StartDelete (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesDeleteOperation StartDelete(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartDelete(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDelete (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As DatabasesDeleteOperation" />
      <MemberSignature Language="F#" Value="abstract member StartDelete : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesDeleteOperation&#xA;override this.StartDelete : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesDeleteOperation" Usage="databasesOperations.StartDelete (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesDeleteOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes the database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartDeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesDeleteOperation&gt; StartDeleteAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesDeleteOperation&gt; StartDeleteAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartDeleteAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartDeleteAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesDeleteOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartDeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesDeleteOperation&gt;&#xA;override this.StartDeleteAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesDeleteOperation&gt;" Usage="databasesOperations.StartDeleteAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesDeleteOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Deletes the database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartExport">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesExportOperation StartExport (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ExportRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesExportOperation StartExport(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.ExportRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartExport(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ExportRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartExport (resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequest, Optional cancellationToken As CancellationToken = Nothing) As DatabasesExportOperation" />
      <MemberSignature Language="F#" Value="abstract member StartExport : string * string * string * Azure.ResourceManager.Sql.Models.ExportRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesExportOperation&#xA;override this.StartExport : string * string * string * Azure.ResourceManager.Sql.Models.ExportRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesExportOperation" Usage="databasesOperations.StartExport (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesExportOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ExportRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be exported. </param>
        <param name="parameters"> The required parameters for exporting a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports a database to a bacpac. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartExportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesExportOperation&gt; StartExportAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ExportRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesExportOperation&gt; StartExportAsync(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.ExportRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartExportAsync(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.ExportRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartExportAsync (resourceGroupName As String, serverName As String, databaseName As String, parameters As ExportRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesExportOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartExportAsync : string * string * string * Azure.ResourceManager.Sql.Models.ExportRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesExportOperation&gt;&#xA;override this.StartExportAsync : string * string * string * Azure.ResourceManager.Sql.Models.ExportRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesExportOperation&gt;" Usage="databasesOperations.StartExportAsync (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesExportOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ExportRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be exported. </param>
        <param name="parameters"> The required parameters for exporting a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Exports a database to a bacpac. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartFailover">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesFailoverOperation StartFailover (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesFailoverOperation StartFailover(string resourceGroupName, string serverName, string databaseName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartFailover(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartFailover (resourceGroupName As String, serverName As String, databaseName As String, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As DatabasesFailoverOperation" />
      <MemberSignature Language="F#" Value="abstract member StartFailover : string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesFailoverOperation&#xA;override this.StartFailover : string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesFailoverOperation" Usage="databasesOperations.StartFailover (resourceGroupName, serverName, databaseName, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesFailoverOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to failover. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Failovers a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartFailoverAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesFailoverOperation&gt; StartFailoverAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.ReplicaType? replicaType = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesFailoverOperation&gt; StartFailoverAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Sql.Models.ReplicaType&gt; replicaType, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartFailoverAsync(System.String,System.String,System.String,System.Nullable{Azure.ResourceManager.Sql.Models.ReplicaType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartFailoverAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional replicaType As Nullable(Of ReplicaType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesFailoverOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartFailoverAsync : string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesFailoverOperation&gt;&#xA;override this.StartFailoverAsync : string * string * string * Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesFailoverOperation&gt;" Usage="databasesOperations.StartFailoverAsync (resourceGroupName, serverName, databaseName, replicaType, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesFailoverOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="replicaType" Type="System.Nullable&lt;Azure.ResourceManager.Sql.Models.ReplicaType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to failover. </param>
        <param name="replicaType"> The type of replica to be failed over. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Failovers a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartImport">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesImportOperation StartImport (string resourceGroupName, string serverName, Azure.ResourceManager.Sql.Models.ImportRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesImportOperation StartImport(string resourceGroupName, string serverName, class Azure.ResourceManager.Sql.Models.ImportRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartImport(System.String,System.String,Azure.ResourceManager.Sql.Models.ImportRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartImport (resourceGroupName As String, serverName As String, parameters As ImportRequest, Optional cancellationToken As CancellationToken = Nothing) As DatabasesImportOperation" />
      <MemberSignature Language="F#" Value="abstract member StartImport : string * string * Azure.ResourceManager.Sql.Models.ImportRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesImportOperation&#xA;override this.StartImport : string * string * Azure.ResourceManager.Sql.Models.ImportRequest * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesImportOperation" Usage="databasesOperations.StartImport (resourceGroupName, serverName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesImportOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ImportRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="parameters"> The required parameters for importing a Bacpac into a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Imports a bacpac into a new database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartImportAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesImportOperation&gt; StartImportAsync (string resourceGroupName, string serverName, Azure.ResourceManager.Sql.Models.ImportRequest parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesImportOperation&gt; StartImportAsync(string resourceGroupName, string serverName, class Azure.ResourceManager.Sql.Models.ImportRequest parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartImportAsync(System.String,System.String,Azure.ResourceManager.Sql.Models.ImportRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartImportAsync (resourceGroupName As String, serverName As String, parameters As ImportRequest, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesImportOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartImportAsync : string * string * Azure.ResourceManager.Sql.Models.ImportRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesImportOperation&gt;&#xA;override this.StartImportAsync : string * string * Azure.ResourceManager.Sql.Models.ImportRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesImportOperation&gt;" Usage="databasesOperations.StartImportAsync (resourceGroupName, serverName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesImportOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.ImportRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="parameters"> The required parameters for importing a Bacpac into a database. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Imports a bacpac into a new database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartPause">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesPauseOperation StartPause (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesPauseOperation StartPause(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartPause(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPause (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As DatabasesPauseOperation" />
      <MemberSignature Language="F#" Value="abstract member StartPause : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesPauseOperation&#xA;override this.StartPause : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesPauseOperation" Usage="databasesOperations.StartPause (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesPauseOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be paused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Pauses a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartPauseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesPauseOperation&gt; StartPauseAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesPauseOperation&gt; StartPauseAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartPauseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartPauseAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesPauseOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartPauseAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesPauseOperation&gt;&#xA;override this.StartPauseAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesPauseOperation&gt;" Usage="databasesOperations.StartPauseAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesPauseOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be paused. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Pauses a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartResume">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesResumeOperation StartResume (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesResumeOperation StartResume(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartResume(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartResume (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As DatabasesResumeOperation" />
      <MemberSignature Language="F#" Value="abstract member StartResume : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesResumeOperation&#xA;override this.StartResume : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesResumeOperation" Usage="databasesOperations.StartResume (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesResumeOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be resumed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Resumes a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartResumeAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesResumeOperation&gt; StartResumeAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesResumeOperation&gt; StartResumeAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartResumeAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartResumeAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesResumeOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartResumeAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesResumeOperation&gt;&#xA;override this.StartResumeAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesResumeOperation&gt;" Usage="databasesOperations.StartResumeAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesResumeOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be resumed. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Resumes a database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesUpdateOperation StartUpdate (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.DatabaseUpdate parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesUpdateOperation StartUpdate(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.DatabaseUpdate parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartUpdate(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DatabaseUpdate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdate (resourceGroupName As String, serverName As String, databaseName As String, parameters As DatabaseUpdate, Optional cancellationToken As CancellationToken = Nothing) As DatabasesUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member StartUpdate : string * string * string * Azure.ResourceManager.Sql.Models.DatabaseUpdate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesUpdateOperation&#xA;override this.StartUpdate : string * string * string * Azure.ResourceManager.Sql.Models.DatabaseUpdate * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesUpdateOperation" Usage="databasesOperations.StartUpdate (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.DatabaseUpdate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="parameters"> The requested database resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates an existing database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpdateOperation&gt; StartUpdateAsync (string resourceGroupName, string serverName, string databaseName, Azure.ResourceManager.Sql.Models.DatabaseUpdate parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesUpdateOperation&gt; StartUpdateAsync(string resourceGroupName, string serverName, string databaseName, class Azure.ResourceManager.Sql.Models.DatabaseUpdate parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartUpdateAsync(System.String,System.String,System.String,Azure.ResourceManager.Sql.Models.DatabaseUpdate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpdateAsync (resourceGroupName As String, serverName As String, databaseName As String, parameters As DatabaseUpdate, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartUpdateAsync : string * string * string * Azure.ResourceManager.Sql.Models.DatabaseUpdate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpdateOperation&gt;&#xA;override this.StartUpdateAsync : string * string * string * Azure.ResourceManager.Sql.Models.DatabaseUpdate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpdateOperation&gt;" Usage="databasesOperations.StartUpdateAsync (resourceGroupName, serverName, databaseName, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.Sql.Models.DatabaseUpdate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database. </param>
        <param name="parameters"> The requested database resource state. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Updates an existing database. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, <paramref name="databaseName" />, or <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartUpgradeDataWarehouse">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation StartUpgradeDataWarehouse (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation StartUpgradeDataWarehouse(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartUpgradeDataWarehouse(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpgradeDataWarehouse (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As DatabasesUpgradeDataWarehouseOperation" />
      <MemberSignature Language="F#" Value="abstract member StartUpgradeDataWarehouse : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&#xA;override this.StartUpgradeDataWarehouse : string * string * string * System.Threading.CancellationToken -&gt; Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation" Usage="databasesOperations.StartUpgradeDataWarehouse (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be upgraded. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Upgrades a data warehouse. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="StartUpgradeDataWarehouseAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&gt; StartUpgradeDataWarehouseAsync (string resourceGroupName, string serverName, string databaseName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&gt; StartUpgradeDataWarehouseAsync(string resourceGroupName, string serverName, string databaseName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Sql.DatabasesOperations.StartUpgradeDataWarehouseAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUpgradeDataWarehouseAsync (resourceGroupName As String, serverName As String, databaseName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of DatabasesUpgradeDataWarehouseOperation)" />
      <MemberSignature Language="F#" Value="abstract member StartUpgradeDataWarehouseAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&gt;&#xA;override this.StartUpgradeDataWarehouseAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&gt;" Usage="databasesOperations.StartUpgradeDataWarehouseAsync (resourceGroupName, serverName, databaseName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Sql</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.Sql.DatabasesUpgradeDataWarehouseOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="serverName" Type="System.String" />
        <Parameter Name="databaseName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupName"> The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. </param>
        <param name="serverName"> The name of the server. </param>
        <param name="databaseName"> The name of the database to be upgraded. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Upgrades a data warehouse. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupName" />, <paramref name="serverName" />, or <paramref name="databaseName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
