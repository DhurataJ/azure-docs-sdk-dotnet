<Type Name="RoleAssignmentsClient" FullName="Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient">
  <TypeSignature Language="C#" Value="public class RoleAssignmentsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleAssignmentsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleAssignmentsClient" />
  <TypeSignature Language="F#" Value="type RoleAssignmentsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The RoleAssignments service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleAssignmentsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RoleAssignmentsClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleAssignmentsClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As AccessControlClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions -&gt; Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient" Usage="new Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of RoleAssignmentsClient. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrincipalAccess">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CheckPrincipalAccess (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CheckPrincipalAccess(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccess(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrincipalAccess (content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CheckPrincipalAccess : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CheckPrincipalAccess : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="roleAssignmentsClient.CheckPrincipalAccess (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Check if the given principalId has access to perform list of actions at a given scope. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              subject: {
                principalId: SubjectInfoPrincipalId (required),
                groupIds: [SubjectInfoGroupIdsItem]
              } (required),
              actions: [
                {
                  id: string (required),
                  isDataAction: boolean (required)
                }
              ] (required),
              scope: string (required)
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              accessDecisions: [
                {
                  accessDecision: string,
                  actionId: string,
                  roleAssignment: {
                    id: string,
                    roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
                    principalId: RoleAssignmentDetailsPrincipalId,
                    scope: string,
                    principalType: string
                  }
                }
              ]
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPrincipalAccessAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CheckPrincipalAccessAsync (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CheckPrincipalAccessAsync(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CheckPrincipalAccessAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckPrincipalAccessAsync (content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CheckPrincipalAccessAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CheckPrincipalAccessAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.CheckPrincipalAccessAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Check if the given principalId has access to perform list of actions at a given scope. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              subject: {
                principalId: SubjectInfoPrincipalId (required),
                groupIds: [SubjectInfoGroupIdsItem]
              } (required),
              actions: [
                {
                  id: string (required),
                  isDataAction: boolean (required)
                }
              ] (required),
              scope: string (required)
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              accessDecisions: [
                {
                  accessDecision: string,
                  actionId: string,
                  roleAssignment: {
                    id: string,
                    roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
                    principalId: RoleAssignmentDetailsPrincipalId,
                    scope: string,
                    principalType: string
                  }
                }
              ]
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleAssignment">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateRoleAssignment (string roleAssignmentId, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateRoleAssignment(string roleAssignmentId, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CreateRoleAssignment(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRoleAssignment (roleAssignmentId As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleAssignment : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.CreateRoleAssignment : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="roleAssignmentsClient.CreateRoleAssignment (roleAssignmentId, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Create role assignment. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              roleId: RoleAssignmentRequestRoleId (required),
              principalId: RoleAssignmentRequestPrincipalId (required),
              scope: string (required),
              principalType: string
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
              principalId: RoleAssignmentDetailsPrincipalId,
              scope: string,
              principalType: string
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRoleAssignmentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateRoleAssignmentAsync (string roleAssignmentId, Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateRoleAssignmentAsync(string roleAssignmentId, class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.CreateRoleAssignmentAsync(System.String,Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRoleAssignmentAsync (roleAssignmentId As String, content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateRoleAssignmentAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateRoleAssignmentAsync : string * Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.CreateRoleAssignmentAsync (roleAssignmentId, content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Create role assignment. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              roleId: RoleAssignmentRequestRoleId (required),
              principalId: RoleAssignmentRequestPrincipalId (required),
              scope: string (required),
              principalType: string
            }
            </code>
            
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
              principalId: RoleAssignmentDetailsPrincipalId,
              scope: string,
              principalType: string
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRoleAssignmentById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteRoleAssignmentById (string roleAssignmentId, string scope = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteRoleAssignmentById(string roleAssignmentId, string scope, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.DeleteRoleAssignmentById(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRoleAssignmentById (roleAssignmentId As String, Optional scope As String = Nothing, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteRoleAssignmentById : string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.DeleteRoleAssignmentById : string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="roleAssignmentsClient.DeleteRoleAssignmentById (roleAssignmentId, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="options"> The request options. </param>
        <summary> Delete role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteRoleAssignmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteRoleAssignmentByIdAsync (string roleAssignmentId, string scope = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteRoleAssignmentByIdAsync(string roleAssignmentId, string scope, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.DeleteRoleAssignmentByIdAsync(System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteRoleAssignmentByIdAsync (roleAssignmentId As String, Optional scope As String = Nothing, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteRoleAssignmentByIdAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteRoleAssignmentByIdAsync : string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.DeleteRoleAssignmentByIdAsync (roleAssignmentId, scope, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="options"> The request options. </param>
        <summary> Delete role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetRoleAssignmentById (string roleAssignmentId, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetRoleAssignmentById(string roleAssignmentId, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.GetRoleAssignmentById(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleAssignmentById (roleAssignmentId As String, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetRoleAssignmentById : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetRoleAssignmentById : string * Azure.RequestOptions -&gt; Azure.Response" Usage="roleAssignmentsClient.GetRoleAssignmentById (roleAssignmentId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="options"> The request options. </param>
        <summary> Get role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
              principalId: RoleAssignmentDetailsPrincipalId,
              scope: string,
              principalType: string
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoleAssignmentByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetRoleAssignmentByIdAsync (string roleAssignmentId, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetRoleAssignmentByIdAsync(string roleAssignmentId, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.GetRoleAssignmentByIdAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleAssignmentByIdAsync (roleAssignmentId As String, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetRoleAssignmentByIdAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetRoleAssignmentByIdAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.GetRoleAssignmentByIdAsync (roleAssignmentId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleAssignmentId" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleAssignmentId"> The ID of the role assignment. </param>
        <param name="options"> The request options. </param>
        <summary> Get role assignment by role assignment Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: string,
              roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
              principalId: RoleAssignmentDetailsPrincipalId,
              scope: string,
              principalType: string
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoleAssignments">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ListRoleAssignments (string roleId = default, string principalId = default, string scope = default, string continuationToken = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ListRoleAssignments(string roleId, string principalId, string scope, string continuationToken, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.ListRoleAssignments(System.String,System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleAssignments (Optional roleId As String = Nothing, Optional principalId As String = Nothing, Optional scope As String = Nothing, Optional continuationToken As String = Nothing, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ListRoleAssignments : string * string * string * string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.ListRoleAssignments : string * string * string * string * Azure.RequestOptions -&gt; Azure.Response" Usage="roleAssignmentsClient.ListRoleAssignments (roleId, principalId, scope, continuationToken, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleId" Type="System.String" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleId"> Synapse Built-In Role Id. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="continuationToken"> Continuation token. </param>
        <param name="options"> The request options. </param>
        <summary> List role assignments. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              count: number,
              value: [
                {
                  id: string,
                  roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
                  principalId: RoleAssignmentDetailsPrincipalId,
                  scope: string,
                  principalType: string
                }
              ]
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoleAssignmentsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListRoleAssignmentsAsync (string roleId = default, string principalId = default, string scope = default, string continuationToken = default, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListRoleAssignmentsAsync(string roleId, string principalId, string scope, string continuationToken, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.ListRoleAssignmentsAsync(System.String,System.String,System.String,System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleAssignmentsAsync (Optional roleId As String = Nothing, Optional principalId As String = Nothing, Optional scope As String = Nothing, Optional continuationToken As String = Nothing, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListRoleAssignmentsAsync : string * string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListRoleAssignmentsAsync : string * string * string * string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleAssignmentsClient.ListRoleAssignmentsAsync (roleId, principalId, scope, continuationToken, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleId" Type="System.String" />
        <Parameter Name="principalId" Type="System.String" />
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="continuationToken" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleId"> Synapse Built-In Role Id. </param>
        <param name="principalId"> Object ID of the AAD principal or security-group. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <param name="continuationToken"> Continuation token. </param>
        <param name="options"> The request options. </param>
        <summary> List role assignments. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              count: number,
              value: [
                {
                  id: string,
                  roleDefinitionId: RoleAssignmentDetailsRoleDefinitionId,
                  principalId: RoleAssignmentDetailsPrincipalId,
                  scope: string,
                  principalType: string
                }
              ]
            }
            </code>
            
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Synapse.AccessControl.RoleAssignmentsClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
