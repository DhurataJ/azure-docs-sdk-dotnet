<Type Name="RoleDefinitionsClient" FullName="Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient">
  <TypeSignature Language="C#" Value="public class RoleDefinitionsClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleDefinitionsClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleDefinitionsClient" />
  <TypeSignature Language="F#" Value="type RoleDefinitionsClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The RoleDefinitions service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleDefinitionsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of RoleDefinitionsClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleDefinitionsClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As AccessControlClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions -&gt; Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient" Usage="new Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Synapse.AccessControl.AccessControlClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The workspace development endpoint, for example https://myworkspace.dev.azuresynapse.net. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of RoleDefinitionsClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinitionById">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetRoleDefinitionById (string roleDefinitionId, Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetRoleDefinitionById(string roleDefinitionId, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.GetRoleDefinitionById(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleDefinitionById (roleDefinitionId As String, options As RequestOptions) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetRoleDefinitionById : string * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.GetRoleDefinitionById : string * Azure.RequestOptions -&gt; Azure.Response" Usage="roleDefinitionsClient.GetRoleDefinitionById (roleDefinitionId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleDefinitionId" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleDefinitionId"> Synapse Built-In Role Definition Id. </param>
        <param name="options"> The request options. </param>
        <summary> Get role definition by role definition Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: SynapseRoleDefinitionId,
              name: string,
              isBuiltIn: boolean,
              description: string,
              permissions: [
                {
                  actions: [string],
                  notActions: [string],
                  dataActions: [string],
                  notDataActions: [string]
                }
              ],
              scopes: [string],
              availabilityStatus: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleDefinitionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRoleDefinitionByIdAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetRoleDefinitionByIdAsync (string roleDefinitionId, Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetRoleDefinitionByIdAsync(string roleDefinitionId, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.GetRoleDefinitionByIdAsync(System.String,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRoleDefinitionByIdAsync (roleDefinitionId As String, options As RequestOptions) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetRoleDefinitionByIdAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetRoleDefinitionByIdAsync : string * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleDefinitionsClient.GetRoleDefinitionByIdAsync (roleDefinitionId, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleDefinitionId" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="roleDefinitionId"> Synapse Built-In Role Definition Id. </param>
        <param name="options"> The request options. </param>
        <summary> Get role definition by role definition Id. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: SynapseRoleDefinitionId,
              name: string,
              isBuiltIn: boolean,
              description: string,
              permissions: [
                {
                  actions: [string],
                  notActions: [string],
                  dataActions: [string],
                  notDataActions: [string]
                }
              ],
              scopes: [string],
              availabilityStatus: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleDefinitionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ListRoleDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ListRoleDefinitions (Azure.RequestOptions options, bool? isBuiltIn = default, string scope = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ListRoleDefinitions(class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; isBuiltIn, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.ListRoleDefinitions(Azure.RequestOptions,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleDefinitions (options As RequestOptions, Optional isBuiltIn As Nullable(Of Boolean) = Nothing, Optional scope As String = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member ListRoleDefinitions : Azure.RequestOptions * Nullable&lt;bool&gt; * string -&gt; Azure.Response&#xA;override this.ListRoleDefinitions : Azure.RequestOptions * Nullable&lt;bool&gt; * string -&gt; Azure.Response" Usage="roleDefinitionsClient.ListRoleDefinitions (options, isBuiltIn, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="isBuiltIn" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <param name="isBuiltIn"> Is a Synapse Built-In Role or not. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <summary> List role definitions. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: SynapseRoleDefinitionId,
              name: string,
              isBuiltIn: boolean,
              description: string,
              permissions: [
                {
                  actions: [string],
                  notActions: [string],
                  dataActions: [string],
                  notDataActions: [string]
                }
              ],
              scopes: [string],
              availabilityStatus: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListRoleDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListRoleDefinitionsAsync (Azure.RequestOptions options, bool? isBuiltIn = default, string scope = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListRoleDefinitionsAsync(class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; isBuiltIn, string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.ListRoleDefinitionsAsync(Azure.RequestOptions,System.Nullable{System.Boolean},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListRoleDefinitionsAsync (options As RequestOptions, Optional isBuiltIn As Nullable(Of Boolean) = Nothing, Optional scope As String = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListRoleDefinitionsAsync : Azure.RequestOptions * Nullable&lt;bool&gt; * string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListRoleDefinitionsAsync : Azure.RequestOptions * Nullable&lt;bool&gt; * string -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleDefinitionsClient.ListRoleDefinitionsAsync (options, isBuiltIn, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="isBuiltIn" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <param name="isBuiltIn"> Is a Synapse Built-In Role or not. </param>
        <param name="scope"> Scope of the Synapse Built-in Role. </param>
        <summary> List role definitions. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              id: SynapseRoleDefinitionId,
              name: string,
              isBuiltIn: boolean,
              description: string,
              permissions: [
                {
                  actions: [string],
                  notActions: [string],
                  dataActions: [string],
                  notDataActions: [string]
                }
              ],
              scopes: [string],
              availabilityStatus: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListScopes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response ListScopes (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response ListScopes(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.ListScopes(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListScopes (options As RequestOptions) As Response" />
      <MemberSignature Language="F#" Value="abstract member ListScopes : Azure.RequestOptions -&gt; Azure.Response&#xA;override this.ListScopes : Azure.RequestOptions -&gt; Azure.Response" Usage="roleDefinitionsClient.ListScopes options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List rbac scopes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="ListScopesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; ListScopesAsync (Azure.RequestOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; ListScopesAsync(class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.ListScopesAsync(Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListScopesAsync (options As RequestOptions) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member ListScopesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.ListScopesAsync : Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="roleDefinitionsClient.ListScopesAsync options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="options"> The request options. </param>
        <summary> List rbac scopes. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [ErrorResponse],
                additionalInfo: [
                  {
                    type: string,
                    info: AnyObject
                  }
                ]
              }
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Synapse.AccessControl.RoleDefinitionsClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Synapse.AccessControl</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
