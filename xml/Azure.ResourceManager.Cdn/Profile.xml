<Type Name="Profile" FullName="Azure.ResourceManager.Cdn.Profile">
  <TypeSignature Language="C#" Value="public class Profile : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Profile extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Cdn.Profile" />
  <TypeSignature Language="VB.NET" Value="Public Class Profile&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type Profile = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A Class representing a Profile along with the instance operations that can be performed on it. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Profile ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Cdn.Profile" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt; AddTag (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt; AddTag(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.AddTag(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTag (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Profile)" />
      <MemberSignature Language="F#" Value="abstract member AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&#xA;override this.AddTag : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;" Usage="profile.AddTag (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tag added. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AddTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt; AddTagAsync (string key, string value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt;&gt; AddTagAsync(string key, string value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.AddTagAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddTagAsync (key As String, value As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Profile))" />
      <MemberSignature Language="F#" Value="abstract member AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;&#xA;override this.AddTagAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;" Usage="profile.AddTagAsync (key, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="value"> The value for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Add a tag to the current resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tag added. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> or <paramref name="value" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string profileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string profileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, profileName As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.Cdn.Profile.CreateResourceIdentifier (subscriptionId, resourceGroupName, profileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="profileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="profileName">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.Cdn.Profile" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.ProfileData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Cdn.ProfileData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Cdn.Profile.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As ProfileData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Cdn.ProfileData" Usage="Azure.ResourceManager.Cdn.Profile.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.ProfileData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation Delete (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation Delete(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.Delete(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation" />
      <MemberSignature Language="F#" Value="abstract member Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&#xA;override this.Delete : Azure.WaitUntil * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation" Usage="profile.Delete (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil"> "F:Azure.WaitUntil.Completed" if the method should wait to return until the long-running operation has completed on the service; "F:Azure.WaitUntil.Started" if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt; DeleteAsync (Azure.WaitUntil waitUntil, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation&gt; DeleteAsync(valuetype Azure.WaitUntil waitUntil, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.DeleteAsync(Azure.WaitUntil,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (waitUntil As WaitUntil, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;&#xA;override this.DeleteAsync : Azure.WaitUntil * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;" Usage="profile.DeleteAsync (waitUntil, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil"> "F:Azure.WaitUntil.Completed" if the method should wait to return until the long-running operation has completed on the service; "F:Azure.WaitUntil.Started" if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Deletes an existing CDN profile with the specified parameters. Deleting a profile will result in the deletion of all of the sub-resources including endpoints, origins and custom domains.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Delete
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSsoUri">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt; GenerateSsoUri (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.SsoUri&gt; GenerateSsoUri(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GenerateSsoUri(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSsoUri (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SsoUri)" />
      <MemberSignature Language="F#" Value="abstract member GenerateSsoUri : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;&#xA;override this.GenerateSsoUri : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;" Usage="profile.GenerateSsoUri cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri
            Operation Id: Profiles_GenerateSsoUri
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSsoUriAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;&gt; GenerateSsoUriAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.SsoUri&gt;&gt; GenerateSsoUriAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GenerateSsoUriAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateSsoUriAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SsoUri))" />
      <MemberSignature Language="F#" Value="abstract member GenerateSsoUriAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;&gt;&#xA;override this.GenerateSsoUriAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;&gt;" Usage="profile.GenerateSsoUriAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SsoUri&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Generates a dynamic SSO URI used to sign in to the CDN supplemental portal. Supplemental portal is used to configure advanced feature capabilities that are not yet available in the Azure portal, such as core reports in a standard profile; rules engine, advanced HTTP reports, and real-time stats and alerts in a premium profile. The SSO URI changes approximately every 10 minutes.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/generateSsoUri
            Operation Id: Profiles_GenerateSsoUri
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of Profile)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;" Usage="profile.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a CDN profile with the specified profile name under the specified subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdCustomDomain">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt; GetAfdCustomDomain (string customDomainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdCustomDomain&gt; GetAfdCustomDomain(string customDomainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdCustomDomain(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdCustomDomain (customDomainName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdCustomDomain)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdCustomDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&#xA;override this.GetAfdCustomDomain : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;" Usage="profile.GetAfdCustomDomain (customDomainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDomainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customDomainName"> Name of the domain under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}
            Operation Id: AfdCustomDomains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="customDomainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customDomainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdCustomDomainAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&gt; GetAfdCustomDomainAsync (string customDomainName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&gt; GetAfdCustomDomainAsync(string customDomainName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdCustomDomainAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdCustomDomainAsync (customDomainName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdCustomDomain))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdCustomDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&gt;&#xA;override this.GetAfdCustomDomainAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&gt;" Usage="profile.GetAfdCustomDomainAsync (customDomainName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdCustomDomain&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customDomainName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="customDomainName"> Name of the domain under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor domain with the specified domain name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/customDomains/{customDomainName}
            Operation Id: AfdCustomDomains_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="customDomainName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="customDomainName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdCustomDomains">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdCustomDomainCollection GetAfdCustomDomains ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdCustomDomainCollection GetAfdCustomDomains() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdCustomDomains" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdCustomDomains () As AfdCustomDomainCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdCustomDomains : unit -&gt; Azure.ResourceManager.Cdn.AfdCustomDomainCollection&#xA;override this.GetAfdCustomDomains : unit -&gt; Azure.ResourceManager.Cdn.AfdCustomDomainCollection" Usage="profile.GetAfdCustomDomains " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdCustomDomainCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdCustomDomains in the AfdCustomDomain. </summary>
        <returns> An object representing collection of AfdCustomDomains and their operations over a AfdCustomDomain. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdEndpoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt; GetAfdEndpoint (string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdEndpoint&gt; GetAfdEndpoint(string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdEndpoint(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdEndpoint (endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdEndpoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;&#xA;override this.GetAfdEndpoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;" Usage="profile.GetAfdEndpoint (endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointName"> Name of the endpoint under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}
            Operation Id: AfdEndpoints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;&gt; GetAfdEndpointAsync (string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdEndpoint&gt;&gt; GetAfdEndpointAsync(string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdEndpointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdEndpointAsync (endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdEndpointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;&gt;&#xA;override this.GetAfdEndpointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;&gt;" Usage="profile.GetAfdEndpointAsync (endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointName"> Name of the endpoint under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor endpoint with the specified endpoint name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/afdEndpoints/{endpointName}
            Operation Id: AfdEndpoints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdEndpointCollection GetAfdEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdEndpointCollection GetAfdEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdEndpoints () As AfdEndpointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdEndpoints : unit -&gt; Azure.ResourceManager.Cdn.AfdEndpointCollection&#xA;override this.GetAfdEndpoints : unit -&gt; Azure.ResourceManager.Cdn.AfdEndpointCollection" Usage="profile.GetAfdEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdEndpoints in the AfdEndpoint. </summary>
        <returns> An object representing collection of AfdEndpoints and their operations over a AfdEndpoint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdOriginGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt; GetAfdOriginGroup (string originGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdOriginGroup&gt; GetAfdOriginGroup(string originGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdOriginGroup(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdOriginGroup (originGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdOriginGroup)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdOriginGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&#xA;override this.GetAfdOriginGroup : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;" Usage="profile.GetAfdOriginGroup (originGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="originGroupName"> Name of the origin group which is unique within the endpoint. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing origin group within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}
            Operation Id: AfdOriginGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="originGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="originGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdOriginGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&gt; GetAfdOriginGroupAsync (string originGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&gt; GetAfdOriginGroupAsync(string originGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdOriginGroupAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdOriginGroupAsync (originGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdOriginGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdOriginGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&gt;&#xA;override this.GetAfdOriginGroupAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&gt;" Usage="profile.GetAfdOriginGroupAsync (originGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdOriginGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="originGroupName"> Name of the origin group which is unique within the endpoint. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing origin group within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}
            Operation Id: AfdOriginGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="originGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="originGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdOriginGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdOriginGroupCollection GetAfdOriginGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdOriginGroupCollection GetAfdOriginGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdOriginGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdOriginGroups () As AfdOriginGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdOriginGroups : unit -&gt; Azure.ResourceManager.Cdn.AfdOriginGroupCollection&#xA;override this.GetAfdOriginGroups : unit -&gt; Azure.ResourceManager.Cdn.AfdOriginGroupCollection" Usage="profile.GetAfdOriginGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdOriginGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdOriginGroups in the AfdOriginGroup. </summary>
        <returns> An object representing collection of AfdOriginGroups and their operations over a AfdOriginGroup. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdRuleSet">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt; GetAfdRuleSet (string ruleSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdRuleSet&gt; GetAfdRuleSet(string ruleSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdRuleSet(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdRuleSet (ruleSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdRuleSet)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdRuleSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;&#xA;override this.GetAfdRuleSet : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;" Usage="profile.GetAfdRuleSet (ruleSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleSetName"> Name of the rule set under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}
            Operation Id: AfdRuleSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleSetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdRuleSetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;&gt; GetAfdRuleSetAsync (string ruleSetName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdRuleSet&gt;&gt; GetAfdRuleSetAsync(string ruleSetName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdRuleSetAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdRuleSetAsync (ruleSetName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdRuleSet))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdRuleSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;&gt;&#xA;override this.GetAfdRuleSetAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;&gt;" Usage="profile.GetAfdRuleSetAsync (ruleSetName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdRuleSet&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ruleSetName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="ruleSetName"> Name of the rule set under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing AzureFrontDoor rule set with the specified rule set name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}
            Operation Id: AfdRuleSets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleSetName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="ruleSetName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdRuleSets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdRuleSetCollection GetAfdRuleSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdRuleSetCollection GetAfdRuleSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdRuleSets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdRuleSets () As AfdRuleSetCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdRuleSets : unit -&gt; Azure.ResourceManager.Cdn.AfdRuleSetCollection&#xA;override this.GetAfdRuleSets : unit -&gt; Azure.ResourceManager.Cdn.AfdRuleSetCollection" Usage="profile.GetAfdRuleSets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdRuleSetCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdRuleSets in the AfdRuleSet. </summary>
        <returns> An object representing collection of AfdRuleSets and their operations over a AfdRuleSet. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecret">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt; GetAfdSecret (string secretName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdSecret&gt; GetAfdSecret(string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecret(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecret (secretName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdSecret)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;&#xA;override this.GetAfdSecret : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;" Usage="profile.GetAfdSecret (secretName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secretName"> Name of the Secret under the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing Secret within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}
            Operation Id: AfdSecrets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="secretName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secretName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecretAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;&gt; GetAfdSecretAsync (string secretName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdSecret&gt;&gt; GetAfdSecretAsync(string secretName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecretAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecretAsync (secretName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdSecret))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;&gt;&#xA;override this.GetAfdSecretAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;&gt;" Usage="profile.GetAfdSecretAsync (secretName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecret&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secretName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="secretName"> Name of the Secret under the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing Secret within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/secrets/{secretName}
            Operation Id: AfdSecrets_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="secretName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secretName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecrets">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdSecretCollection GetAfdSecrets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdSecretCollection GetAfdSecrets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecrets" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecrets () As AfdSecretCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecrets : unit -&gt; Azure.ResourceManager.Cdn.AfdSecretCollection&#xA;override this.GetAfdSecrets : unit -&gt; Azure.ResourceManager.Cdn.AfdSecretCollection" Usage="profile.GetAfdSecrets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdSecretCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdSecrets in the AfdSecret. </summary>
        <returns> An object representing collection of AfdSecrets and their operations over a AfdSecret. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecurityPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.AfdSecurityPolicyCollection GetAfdSecurityPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.AfdSecurityPolicyCollection GetAfdSecurityPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecurityPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecurityPolicies () As AfdSecurityPolicyCollection" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecurityPolicies : unit -&gt; Azure.ResourceManager.Cdn.AfdSecurityPolicyCollection&#xA;override this.GetAfdSecurityPolicies : unit -&gt; Azure.ResourceManager.Cdn.AfdSecurityPolicyCollection" Usage="profile.GetAfdSecurityPolicies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.AfdSecurityPolicyCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of AfdSecurityPolicies in the AfdSecurityPolicy. </summary>
        <returns> An object representing collection of AfdSecurityPolicies and their operations over a AfdSecurityPolicy. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecurityPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt; GetAfdSecurityPolicy (string securityPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt; GetAfdSecurityPolicy(string securityPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecurityPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecurityPolicy (securityPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of AfdSecurityPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecurityPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&#xA;override this.GetAfdSecurityPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;" Usage="profile.GetAfdSecurityPolicy (securityPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityPolicyName"> Name of the security policy under the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing security policy within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}
            Operation Id: AfdSecurityPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAfdSecurityPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&gt; GetAfdSecurityPolicyAsync (string securityPolicyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&gt; GetAfdSecurityPolicyAsync(string securityPolicyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAfdSecurityPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAfdSecurityPolicyAsync (securityPolicyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of AfdSecurityPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetAfdSecurityPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&gt;&#xA;override this.GetAfdSecurityPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&gt;" Usage="profile.GetAfdSecurityPolicyAsync (securityPolicyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.AfdSecurityPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityPolicyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="securityPolicyName"> Name of the security policy under the profile. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing security policy within a profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/securityPolicies/{securityPolicyName}
            Operation Id: AfdSecurityPolicies_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityPolicyName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityPolicyName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Profile))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;" Usage="profile.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a CDN profile with the specified profile name under the specified subscription and resource group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCdnEndpoint">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt; GetCdnEndpoint (string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt; GetCdnEndpoint(string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetCdnEndpoint(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnEndpoint (endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CdnEndpoint)" />
      <MemberSignature Language="F#" Value="abstract member GetCdnEndpoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&#xA;override this.GetCdnEndpoint : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;" Usage="profile.GetCdnEndpoint (endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointName"> Name of the endpoint under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}
            Operation Id: CdnEndpoints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnEndpointAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; GetCdnEndpointAsync (string endpointName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt; GetCdnEndpointAsync(string endpointName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetCdnEndpointAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnEndpointAsync (endpointName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CdnEndpoint))" />
      <MemberSignature Language="F#" Value="abstract member GetCdnEndpointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;&#xA;override this.GetCdnEndpointAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;" Usage="profile.GetCdnEndpointAsync (endpointName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.CdnEndpoint&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpointName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="endpointName"> Name of the endpoint under the profile which is unique globally. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}
            Operation Id: CdnEndpoints_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="endpointName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpointName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCdnEndpoints">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Cdn.CdnEndpointCollection GetCdnEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Cdn.CdnEndpointCollection GetCdnEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetCdnEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCdnEndpoints () As CdnEndpointCollection" />
      <MemberSignature Language="F#" Value="abstract member GetCdnEndpoints : unit -&gt; Azure.ResourceManager.Cdn.CdnEndpointCollection&#xA;override this.GetCdnEndpoints : unit -&gt; Azure.ResourceManager.Cdn.CdnEndpointCollection" Usage="profile.GetCdnEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Cdn.CdnEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of CdnEndpoints in the CdnEndpoint. </summary>
        <returns> An object representing collection of CdnEndpoints and their operations over a CdnEndpoint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsLocations">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt; GetLogAnalyticsLocations (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt; GetLogAnalyticsLocations(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsLocations(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsLocations (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ContinentsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsLocations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&#xA;override this.GetLogAnalyticsLocations : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;" Usage="profile.GetLogAnalyticsLocations cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all available location names for AFD log analytics report.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations
            Operation Id: LogAnalytics_GetLogAnalyticsLocations
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsLocationsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&gt; GetLogAnalyticsLocationsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&gt; GetLogAnalyticsLocationsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsLocationsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsLocationsAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ContinentsResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&gt;&#xA;override this.GetLogAnalyticsLocationsAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&gt;" Usage="profile.GetLogAnalyticsLocationsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ContinentsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all available location names for AFD log analytics report.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsLocations
            Operation Id: LogAnalytics_GetLogAnalyticsLocations
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt; GetLogAnalyticsMetrics (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, Azure.ResourceManager.Cdn.Models.LogMetricsGranularity granularity, System.Collections.Generic.IEnumerable&lt;string&gt; customDomains, System.Collections.Generic.IEnumerable&lt;string&gt; protocols, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; groupBy = default, System.Collections.Generic.IEnumerable&lt;string&gt; continents = default, System.Collections.Generic.IEnumerable&lt;string&gt; countryOrRegions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.MetricsResponse&gt; GetLogAnalyticsMetrics(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, valuetype Azure.ResourceManager.Cdn.Models.LogMetricsGranularity granularity, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customDomains, class System.Collections.Generic.IEnumerable`1&lt;string&gt; protocols, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; groupBy, class System.Collections.Generic.IEnumerable`1&lt;string&gt; continents, class System.Collections.Generic.IEnumerable`1&lt;string&gt; countryOrRegions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsMetrics(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogMetric},System.DateTimeOffset,System.DateTimeOffset,Azure.ResourceManager.Cdn.Models.LogMetricsGranularity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsMetrics (metrics As IEnumerable(Of LogMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, granularity As LogMetricsGranularity, customDomains As IEnumerable(Of String), protocols As IEnumerable(Of String), Optional groupBy As IEnumerable(Of LogMetricsGroupBy) = Nothing, Optional continents As IEnumerable(Of String) = Nothing, Optional countryOrRegions As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of MetricsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsMetrics : seq&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.LogMetricsGranularity * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; * seq&lt;string&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&#xA;override this.GetLogAnalyticsMetrics : seq&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.LogMetricsGranularity * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; * seq&lt;string&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;" Usage="profile.GetLogAnalyticsMetrics (metrics, dateTimeBegin, dateTimeEnd, granularity, customDomains, protocols, groupBy, continents, countryOrRegions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="granularity" Type="Azure.ResourceManager.Cdn.Models.LogMetricsGranularity" />
        <Parameter Name="customDomains" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="protocols" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="groupBy" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt;" />
        <Parameter Name="continents" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="countryOrRegions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfLogMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="granularity"> The LogMetricsGranularity to use. </param>
        <param name="customDomains"> The ArrayOfGet11ItemsItem to use. </param>
        <param name="protocols"> The ArrayOfGet12ItemsItem to use. </param>
        <param name="groupBy"> The ArrayOfLogMetricsGroupBy to use. </param>
        <param name="continents"> The ArrayOfGet9ItemsItem to use. </param>
        <param name="countryOrRegions"> The ArrayOfGet10ItemsItem to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get log report for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics
            Operation Id: LogAnalytics_GetLogAnalyticsMetrics
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" />, <paramref name="customDomains" /> or <paramref name="protocols" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&gt; GetLogAnalyticsMetricsAsync (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, Azure.ResourceManager.Cdn.Models.LogMetricsGranularity granularity, System.Collections.Generic.IEnumerable&lt;string&gt; customDomains, System.Collections.Generic.IEnumerable&lt;string&gt; protocols, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; groupBy = default, System.Collections.Generic.IEnumerable&lt;string&gt; continents = default, System.Collections.Generic.IEnumerable&lt;string&gt; countryOrRegions = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&gt; GetLogAnalyticsMetricsAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, valuetype Azure.ResourceManager.Cdn.Models.LogMetricsGranularity granularity, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customDomains, class System.Collections.Generic.IEnumerable`1&lt;string&gt; protocols, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; groupBy, class System.Collections.Generic.IEnumerable`1&lt;string&gt; continents, class System.Collections.Generic.IEnumerable`1&lt;string&gt; countryOrRegions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsMetricsAsync(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogMetric},System.DateTimeOffset,System.DateTimeOffset,Azure.ResourceManager.Cdn.Models.LogMetricsGranularity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsMetricsAsync (metrics As IEnumerable(Of LogMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, granularity As LogMetricsGranularity, customDomains As IEnumerable(Of String), protocols As IEnumerable(Of String), Optional groupBy As IEnumerable(Of LogMetricsGroupBy) = Nothing, Optional continents As IEnumerable(Of String) = Nothing, Optional countryOrRegions As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of MetricsResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsMetricsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.LogMetricsGranularity * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; * seq&lt;string&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&gt;&#xA;override this.GetLogAnalyticsMetricsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.LogMetricsGranularity * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt; * seq&lt;string&gt; * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&gt;" Usage="profile.GetLogAnalyticsMetricsAsync (metrics, dateTimeBegin, dateTimeEnd, granularity, customDomains, protocols, groupBy, continents, countryOrRegions, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.MetricsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="granularity" Type="Azure.ResourceManager.Cdn.Models.LogMetricsGranularity" />
        <Parameter Name="customDomains" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="protocols" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="groupBy" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogMetricsGroupBy&gt;" />
        <Parameter Name="continents" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="countryOrRegions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfLogMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="granularity"> The LogMetricsGranularity to use. </param>
        <param name="customDomains"> The ArrayOfGet11ItemsItem to use. </param>
        <param name="protocols"> The ArrayOfGet12ItemsItem to use. </param>
        <param name="groupBy"> The ArrayOfLogMetricsGroupBy to use. </param>
        <param name="continents"> The ArrayOfGet9ItemsItem to use. </param>
        <param name="countryOrRegions"> The ArrayOfGet10ItemsItem to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get log report for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsMetrics
            Operation Id: LogAnalytics_GetLogAnalyticsMetrics
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" />, <paramref name="customDomains" /> or <paramref name="protocols" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsRankings">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt; GetLogAnalyticsRankings (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; rankings, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; metrics, int maxRanking, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, System.Collections.Generic.IEnumerable&lt;string&gt; customDomains = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.RankingsResponse&gt; GetLogAnalyticsRankings(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogRanking&gt; rankings, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; metrics, int32 maxRanking, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customDomains, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsRankings(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogRanking},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogRankingMetric},System.Int32,System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsRankings (rankings As IEnumerable(Of LogRanking), metrics As IEnumerable(Of LogRankingMetric), maxRanking As Integer, dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, Optional customDomains As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of RankingsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsRankings : seq&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; * int * DateTimeOffset * DateTimeOffset * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&#xA;override this.GetLogAnalyticsRankings : seq&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; * int * DateTimeOffset * DateTimeOffset * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;" Usage="profile.GetLogAnalyticsRankings (rankings, metrics, maxRanking, dateTimeBegin, dateTimeEnd, customDomains, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rankings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt;" />
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt;" />
        <Parameter Name="maxRanking" Type="System.Int32" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="customDomains" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rankings"> The ArrayOfLogRanking to use. </param>
        <param name="metrics"> The ArrayOfLogRankingMetric to use. </param>
        <param name="maxRanking"> The Integer to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="customDomains"> The ArrayOfString to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get log analytics ranking report for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings
            Operation Id: LogAnalytics_GetLogAnalyticsRankings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rankings" /> or <paramref name="metrics" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsRankingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&gt; GetLogAnalyticsRankingsAsync (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; rankings, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; metrics, int maxRanking, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, System.Collections.Generic.IEnumerable&lt;string&gt; customDomains = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&gt; GetLogAnalyticsRankingsAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogRanking&gt; rankings, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; metrics, int32 maxRanking, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, class System.Collections.Generic.IEnumerable`1&lt;string&gt; customDomains, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsRankingsAsync(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogRanking},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.LogRankingMetric},System.Int32,System.DateTimeOffset,System.DateTimeOffset,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsRankingsAsync (rankings As IEnumerable(Of LogRanking), metrics As IEnumerable(Of LogRankingMetric), maxRanking As Integer, dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, Optional customDomains As IEnumerable(Of String) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of RankingsResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsRankingsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; * int * DateTimeOffset * DateTimeOffset * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&gt;&#xA;override this.GetLogAnalyticsRankingsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt; * int * DateTimeOffset * DateTimeOffset * seq&lt;string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&gt;" Usage="profile.GetLogAnalyticsRankingsAsync (rankings, metrics, maxRanking, dateTimeBegin, dateTimeEnd, customDomains, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.RankingsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rankings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRanking&gt;" />
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.LogRankingMetric&gt;" />
        <Parameter Name="maxRanking" Type="System.Int32" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="customDomains" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="rankings"> The ArrayOfLogRanking to use. </param>
        <param name="metrics"> The ArrayOfLogRankingMetric to use. </param>
        <param name="maxRanking"> The Integer to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="customDomains"> The ArrayOfString to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get log analytics ranking report for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsRankings
            Operation Id: LogAnalytics_GetLogAnalyticsRankings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="rankings" /> or <paramref name="metrics" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsResources">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt; GetLogAnalyticsResources (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt; GetLogAnalyticsResources(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsResources(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsResources (Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourcesResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsResources : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&#xA;override this.GetLogAnalyticsResources : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;" Usage="profile.GetLogAnalyticsResources cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all endpoints and custom domains available for AFD log report
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources
            Operation Id: LogAnalytics_GetLogAnalyticsResources
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogAnalyticsResourcesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&gt; GetLogAnalyticsResourcesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&gt; GetLogAnalyticsResourcesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetLogAnalyticsResourcesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLogAnalyticsResourcesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourcesResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetLogAnalyticsResourcesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&gt;&#xA;override this.GetLogAnalyticsResourcesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&gt;" Usage="profile.GetLogAnalyticsResourcesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.ResourcesResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get all endpoints and custom domains available for AFD log report
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getLogAnalyticsResources
            Operation Id: LogAnalytics_GetLogAnalyticsResources
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsage">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsage (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsage(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetResourceUsage(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsage (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsage : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;&#xA;override this.GetResourceUsage : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;" Usage="profile.GetResourceUsage cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the quota and actual usage of endpoints under the given CDN profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage
            Operation Id: Profiles_ListResourceUsage
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Cdn.Models.ResourceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAfdProfiles">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt; GetResourceUsageAfdProfiles (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Cdn.Models.CdnUsage&gt; GetResourceUsageAfdProfiles(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetResourceUsageAfdProfiles(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsageAfdProfiles (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of CdnUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAfdProfiles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;&#xA;override this.GetResourceUsageAfdProfiles : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;" Usage="profile.GetResourceUsageAfdProfiles cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the quota and actual usage of endpoints under the given CDN profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/usages
            Operation Id: AfdProfiles_ListResourceUsage
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Cdn.Models.CdnUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAfdProfilesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt; GetResourceUsageAfdProfilesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Cdn.Models.CdnUsage&gt; GetResourceUsageAfdProfilesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetResourceUsageAfdProfilesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsageAfdProfilesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of CdnUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAfdProfilesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;&#xA;override this.GetResourceUsageAfdProfilesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;" Usage="profile.GetResourceUsageAfdProfilesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.CdnUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the quota and actual usage of endpoints under the given CDN profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/usages
            Operation Id: AfdProfiles_ListResourceUsage
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Cdn.Models.CdnUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceUsageAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsageAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Cdn.Models.ResourceUsage&gt; GetResourceUsageAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetResourceUsageAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceUsageAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceUsage)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceUsageAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;&#xA;override this.GetResourceUsageAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;" Usage="profile.GetResourceUsageAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Cdn.Models.ResourceUsage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Checks the quota and actual usage of endpoints under the given CDN profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/checkResourceUsage
            Operation Id: Profiles_ListResourceUsage
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Cdn.Models.ResourceUsage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedOptimizationTypes">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt; GetSupportedOptimizationTypes (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt; GetSupportedOptimizationTypes(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetSupportedOptimizationTypes(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedOptimizationTypes (Optional cancellationToken As CancellationToken = Nothing) As Response(Of SupportedOptimizationTypesListResult)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedOptimizationTypes : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&#xA;override this.GetSupportedOptimizationTypes : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;" Usage="profile.GetSupportedOptimizationTypes cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes
            Operation Id: Profiles_ListSupportedOptimizationTypes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedOptimizationTypesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&gt; GetSupportedOptimizationTypesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&gt; GetSupportedOptimizationTypesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetSupportedOptimizationTypesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedOptimizationTypesAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SupportedOptimizationTypesListResult))" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedOptimizationTypesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&gt;&#xA;override this.GetSupportedOptimizationTypesAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&gt;" Usage="profile.GetSupportedOptimizationTypesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.SupportedOptimizationTypesListResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the supported optimization types for the current profile. A user can create an endpoint with an optimization type from the listed values.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getSupportedOptimizationTypes
            Operation Id: Profiles_ListSupportedOptimizationTypes
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWafLogAnalyticsMetrics">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt; GetWafLogAnalyticsMetrics (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, Azure.ResourceManager.Cdn.Models.WafGranularity granularity, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; actions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; groupBy = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt; GetWafLogAnalyticsMetrics(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, valuetype Azure.ResourceManager.Cdn.Models.WafGranularity granularity, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafAction&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; groupBy, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetWafLogAnalyticsMetrics(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafMetric},System.DateTimeOffset,System.DateTimeOffset,Azure.ResourceManager.Cdn.Models.WafGranularity,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafAction},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRankingGroupBy},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRuleType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWafLogAnalyticsMetrics (metrics As IEnumerable(Of WafMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, granularity As WafGranularity, Optional actions As IEnumerable(Of WafAction) = Nothing, Optional groupBy As IEnumerable(Of WafRankingGroupBy) = Nothing, Optional ruleTypes As IEnumerable(Of WafRuleType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WafMetricsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetWafLogAnalyticsMetrics : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.WafGranularity * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&#xA;override this.GetWafLogAnalyticsMetrics : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.WafGranularity * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;" Usage="profile.GetWafLogAnalyticsMetrics (metrics, dateTimeBegin, dateTimeEnd, granularity, actions, groupBy, ruleTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="granularity" Type="Azure.ResourceManager.Cdn.Models.WafGranularity" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt;" />
        <Parameter Name="groupBy" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt;" />
        <Parameter Name="ruleTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfWafMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="granularity"> The WafGranularity to use. </param>
        <param name="actions"> The ArrayOfWafAction to use. </param>
        <param name="groupBy"> The ArrayOfWafRankingGroupBy to use. </param>
        <param name="ruleTypes"> The ArrayOfWafRuleType to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Waf related log analytics report for AFD profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics
            Operation Id: LogAnalytics_GetWafLogAnalyticsMetrics
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWafLogAnalyticsMetricsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&gt; GetWafLogAnalyticsMetricsAsync (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, Azure.ResourceManager.Cdn.Models.WafGranularity granularity, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; actions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; groupBy = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&gt; GetWafLogAnalyticsMetricsAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, valuetype Azure.ResourceManager.Cdn.Models.WafGranularity granularity, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafAction&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; groupBy, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetWafLogAnalyticsMetricsAsync(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafMetric},System.DateTimeOffset,System.DateTimeOffset,Azure.ResourceManager.Cdn.Models.WafGranularity,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafAction},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRankingGroupBy},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRuleType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWafLogAnalyticsMetricsAsync (metrics As IEnumerable(Of WafMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, granularity As WafGranularity, Optional actions As IEnumerable(Of WafAction) = Nothing, Optional groupBy As IEnumerable(Of WafRankingGroupBy) = Nothing, Optional ruleTypes As IEnumerable(Of WafRuleType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WafMetricsResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetWafLogAnalyticsMetricsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.WafGranularity * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&gt;&#xA;override this.GetWafLogAnalyticsMetricsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * Azure.ResourceManager.Cdn.Models.WafGranularity * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&gt;" Usage="profile.GetWafLogAnalyticsMetricsAsync (metrics, dateTimeBegin, dateTimeEnd, granularity, actions, groupBy, ruleTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafMetricsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="granularity" Type="Azure.ResourceManager.Cdn.Models.WafGranularity" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt;" />
        <Parameter Name="groupBy" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingGroupBy&gt;" />
        <Parameter Name="ruleTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfWafMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="granularity"> The WafGranularity to use. </param>
        <param name="actions"> The ArrayOfWafAction to use. </param>
        <param name="groupBy"> The ArrayOfWafRankingGroupBy to use. </param>
        <param name="ruleTypes"> The ArrayOfWafRuleType to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Waf related log analytics report for AFD profile.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsMetrics
            Operation Id: LogAnalytics_GetWafLogAnalyticsMetrics
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWafLogAnalyticsRankings">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt; GetWafLogAnalyticsRankings (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, int maxRanking, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; rankings, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; actions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt; GetWafLogAnalyticsRankings(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, int32 maxRanking, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRankingType&gt; rankings, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafAction&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetWafLogAnalyticsRankings(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafMetric},System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRankingType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafAction},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRuleType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWafLogAnalyticsRankings (metrics As IEnumerable(Of WafMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, maxRanking As Integer, rankings As IEnumerable(Of WafRankingType), Optional actions As IEnumerable(Of WafAction) = Nothing, Optional ruleTypes As IEnumerable(Of WafRuleType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of WafRankingsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetWafLogAnalyticsRankings : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * int * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&#xA;override this.GetWafLogAnalyticsRankings : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * int * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;" Usage="profile.GetWafLogAnalyticsRankings (metrics, dateTimeBegin, dateTimeEnd, maxRanking, rankings, actions, ruleTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="maxRanking" Type="System.Int32" />
        <Parameter Name="rankings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt;" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt;" />
        <Parameter Name="ruleTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfWafMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="maxRanking"> The Integer to use. </param>
        <param name="rankings"> The ArrayOfWafRankingType to use. </param>
        <param name="actions"> The ArrayOfWafAction to use. </param>
        <param name="ruleTypes"> The ArrayOfWafRuleType to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get WAF log analytics charts for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings
            Operation Id: LogAnalytics_GetWafLogAnalyticsRankings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" /> or <paramref name="rankings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWafLogAnalyticsRankingsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&gt; GetWafLogAnalyticsRankingsAsync (System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, DateTimeOffset dateTimeBegin, DateTimeOffset dateTimeEnd, int maxRanking, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; rankings, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; actions = default, System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&gt; GetWafLogAnalyticsRankingsAsync(class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafMetric&gt; metrics, valuetype System.DateTimeOffset dateTimeBegin, valuetype System.DateTimeOffset dateTimeEnd, int32 maxRanking, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRankingType&gt; rankings, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafAction&gt; actions, class System.Collections.Generic.IEnumerable`1&lt;valuetype Azure.ResourceManager.Cdn.Models.WafRuleType&gt; ruleTypes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.GetWafLogAnalyticsRankingsAsync(System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafMetric},System.DateTimeOffset,System.DateTimeOffset,System.Int32,System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRankingType},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafAction},System.Collections.Generic.IEnumerable{Azure.ResourceManager.Cdn.Models.WafRuleType},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWafLogAnalyticsRankingsAsync (metrics As IEnumerable(Of WafMetric), dateTimeBegin As DateTimeOffset, dateTimeEnd As DateTimeOffset, maxRanking As Integer, rankings As IEnumerable(Of WafRankingType), Optional actions As IEnumerable(Of WafAction) = Nothing, Optional ruleTypes As IEnumerable(Of WafRuleType) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of WafRankingsResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetWafLogAnalyticsRankingsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * int * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&gt;&#xA;override this.GetWafLogAnalyticsRankingsAsync : seq&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt; * DateTimeOffset * DateTimeOffset * int * seq&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt; * seq&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&gt;" Usage="profile.GetWafLogAnalyticsRankingsAsync (metrics, dateTimeBegin, dateTimeEnd, maxRanking, rankings, actions, ruleTypes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Models.WafRankingsResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafMetric&gt;" />
        <Parameter Name="dateTimeBegin" Type="System.DateTimeOffset" />
        <Parameter Name="dateTimeEnd" Type="System.DateTimeOffset" />
        <Parameter Name="maxRanking" Type="System.Int32" />
        <Parameter Name="rankings" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRankingType&gt;" />
        <Parameter Name="actions" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafAction&gt;" />
        <Parameter Name="ruleTypes" Type="System.Collections.Generic.IEnumerable&lt;Azure.ResourceManager.Cdn.Models.WafRuleType&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="metrics"> The ArrayOfWafMetric to use. </param>
        <param name="dateTimeBegin"> The DateTime to use. </param>
        <param name="dateTimeEnd"> The DateTime to use. </param>
        <param name="maxRanking"> The Integer to use. </param>
        <param name="rankings"> The ArrayOfWafRankingType to use. </param>
        <param name="actions"> The ArrayOfWafAction to use. </param>
        <param name="ruleTypes"> The ArrayOfWafRuleType to use. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get WAF log analytics charts for AFD profile
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/getWafLogAnalyticsRankings
            Operation Id: LogAnalytics_GetWafLogAnalyticsRankings
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metrics" /> or <paramref name="rankings" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Cdn.Profile.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Cdn.Profile.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTag">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt; RemoveTag (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt; RemoveTag(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.RemoveTag(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTag (key As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Profile)" />
      <MemberSignature Language="F#" Value="abstract member RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&#xA;override this.RemoveTag : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;" Usage="profile.RemoveTag (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tag removed. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveTagAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt; RemoveTagAsync (string key, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt;&gt; RemoveTagAsync(string key, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.RemoveTagAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveTagAsync (key As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Profile))" />
      <MemberSignature Language="F#" Value="abstract member RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;&#xA;override this.RemoveTagAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;" Usage="profile.RemoveTagAsync (key, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="key"> The key for the tag. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Removes a tag by key from the resource.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tag removed. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Cdn.Profile.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Cdn.Profile.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTags">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt; SetTags (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt; SetTags(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.SetTags(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTags (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Response(Of Profile)" />
      <MemberSignature Language="F#" Value="abstract member SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&#xA;override this.SetTags : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;" Usage="profile.SetTags (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tags replaced. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SetTagsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt; SetTagsAsync (System.Collections.Generic.IDictionary&lt;string,string&gt; tags, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Cdn.Profile&gt;&gt; SetTagsAsync(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; tags, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Cdn.Profile.SetTagsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTagsAsync (tags As IDictionary(Of String, String), Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Profile))" />
      <MemberSignature Language="F#" Value="abstract member SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;&#xA;override this.SetTagsAsync : System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;" Usage="profile.SetTagsAsync (tags, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.Cdn</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Cdn.Profile&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tags" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="tags"> The set of tags to use as replacement. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Replace the tags on the resource with the given set.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}
            Operation Id: Profiles_Get
            </summary>
        <returns> The updated resource with the tags replaced. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="tags" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
