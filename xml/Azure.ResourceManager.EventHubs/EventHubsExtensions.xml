<Type Name="EventHubsExtensions" FullName="Azure.ResourceManager.EventHubs.EventHubsExtensions">
  <TypeSignature Language="C#" Value="public static class EventHubsExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EventHubsExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.EventHubs.EventHubsExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EventHubsExtensions" />
  <TypeSignature Language="F#" Value="type EventHubsExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.EventHubs. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckEventHubNameAvailability">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt; CheckEventHubNameAvailability (this Azure.ResourceManager.Resources.Subscription subscription, Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt; CheckEventHubNameAvailability(class Azure.ResourceManager.Resources.Subscription subscription, class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.CheckEventHubNameAvailability(Azure.ResourceManager.Resources.Subscription,Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckEventHubNameAvailability (subscription As Subscription, parameters As CheckNameAvailabilityOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of CheckNameAvailabilityResult)" />
      <MemberSignature Language="F#" Value="static member CheckEventHubNameAvailability : Azure.ResourceManager.Resources.Subscription * Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.CheckEventHubNameAvailability (subscription, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="parameters"> Parameters to check availability of the given Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the give Namespace name availability.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability
            Operation Id: Namespaces_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CheckEventHubNameAvailabilityAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt; CheckEventHubNameAvailabilityAsync (this Azure.ResourceManager.Resources.Subscription subscription, Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions parameters, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt; CheckEventHubNameAvailabilityAsync(class Azure.ResourceManager.Resources.Subscription subscription, class Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions parameters, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.CheckEventHubNameAvailabilityAsync(Azure.ResourceManager.Resources.Subscription,Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CheckEventHubNameAvailabilityAsync (subscription As Subscription, parameters As CheckNameAvailabilityOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of CheckNameAvailabilityResult))" />
      <MemberSignature Language="F#" Value="static member CheckEventHubNameAvailabilityAsync : Azure.ResourceManager.Resources.Subscription * Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.CheckEventHubNameAvailabilityAsync (subscription, parameters, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityResult&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="parameters" Type="Azure.ResourceManager.EventHubs.Models.CheckNameAvailabilityOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="parameters"> Parameters to check availability of the given Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Check the give Namespace name availability.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/checkNameAvailability
            Operation Id: Namespaces_CheckNameAvailability
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="parameters" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableClusterRegionClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt; GetAvailableClusterRegionClusters (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt; GetAvailableClusterRegionClusters(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetAvailableClusterRegionClusters(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailableClusterRegionClusters (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of AvailableCluster)" />
      <MemberSignature Language="F#" Value="static member GetAvailableClusterRegionClusters : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetAvailableClusterRegionClusters (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/availableClusterRegions
            Operation Id: Clusters_ListAvailableClusterRegion
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventHubs.Models.AvailableCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableClusterRegionClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt; GetAvailableClusterRegionClustersAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt; GetAvailableClusterRegionClustersAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetAvailableClusterRegionClustersAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetAvailableClusterRegionClustersAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of AvailableCluster)" />
      <MemberSignature Language="F#" Value="static member GetAvailableClusterRegionClustersAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetAvailableClusterRegionClustersAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.Models.AvailableCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List the quantity of available pre-provisioned Event Hubs Clusters, indexed by Azure region.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/availableClusterRegions
            Operation Id: Clusters_ListAvailableClusterRegion
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventHubs.Models.AvailableCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConsumerGroup">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.ConsumerGroup GetConsumerGroup (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.ConsumerGroup GetConsumerGroup(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetConsumerGroup(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetConsumerGroup (client As ArmClient, id As ResourceIdentifier) As ConsumerGroup" />
      <MemberSignature Language="F#" Value="static member GetConsumerGroup : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.ConsumerGroup" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetConsumerGroup (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.ConsumerGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a ConsumerGroup along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.ConsumerGroup" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisasterRecovery">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.DisasterRecovery GetDisasterRecovery (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.DisasterRecovery GetDisasterRecovery(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetDisasterRecovery(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDisasterRecovery (client As ArmClient, id As ResourceIdentifier) As DisasterRecovery" />
      <MemberSignature Language="F#" Value="static member GetDisasterRecovery : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.DisasterRecovery" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetDisasterRecovery (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.DisasterRecovery</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a DisasterRecovery along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.DisasterRecovery" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisasterRecoveryAuthorizationRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.DisasterRecoveryAuthorizationRule GetDisasterRecoveryAuthorizationRule (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.DisasterRecoveryAuthorizationRule GetDisasterRecoveryAuthorizationRule(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetDisasterRecoveryAuthorizationRule(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDisasterRecoveryAuthorizationRule (client As ArmClient, id As ResourceIdentifier) As DisasterRecoveryAuthorizationRule" />
      <MemberSignature Language="F#" Value="static member GetDisasterRecoveryAuthorizationRule : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.DisasterRecoveryAuthorizationRule" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetDisasterRecoveryAuthorizationRule (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.DisasterRecoveryAuthorizationRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a DisasterRecoveryAuthorizationRule along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.DisasterRecoveryAuthorizationRule" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHub">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHub GetEventHub (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHub GetEventHub(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHub(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHub (client As ArmClient, id As ResourceIdentifier) As EventHub" />
      <MemberSignature Language="F#" Value="static member GetEventHub : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHub" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHub (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHub</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a EventHub along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHub" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubAuthorizationRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHubAuthorizationRule GetEventHubAuthorizationRule (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHubAuthorizationRule GetEventHubAuthorizationRule(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubAuthorizationRule(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubAuthorizationRule (client As ArmClient, id As ResourceIdentifier) As EventHubAuthorizationRule" />
      <MemberSignature Language="F#" Value="static member GetEventHubAuthorizationRule : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubAuthorizationRule" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubAuthorizationRule (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubAuthorizationRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a EventHubAuthorizationRule along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubAuthorizationRule" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubCluster">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHubCluster GetEventHubCluster (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHubCluster GetEventHubCluster(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubCluster(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubCluster (client As ArmClient, id As ResourceIdentifier) As EventHubCluster" />
      <MemberSignature Language="F#" Value="static member GetEventHubCluster : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubCluster" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubCluster (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubCluster</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a EventHubCluster along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubCluster" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubCluster (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubCluster(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubCluster(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubCluster (resourceGroup As ResourceGroup, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventHubCluster)" />
      <MemberSignature Language="F#" Value="static member GetEventHubCluster : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubCluster (resourceGroup, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the resource description of the specified Event Hubs Cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;&gt; GetEventHubClusterAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubCluster&gt;&gt; GetEventHubClusterAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusterAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubClusterAsync (resourceGroup As ResourceGroup, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventHubCluster))" />
      <MemberSignature Language="F#" Value="static member GetEventHubClusterAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusterAsync (resourceGroup, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="clusterName"> The name of the Event Hubs Cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the resource description of the specified Event Hubs Cluster.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHubClusterCollection GetEventHubClusters (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHubClusterCollection GetEventHubClusters(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusters(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubClusters (resourceGroup As ResourceGroup) As EventHubClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetEventHubClusters : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.EventHubs.EventHubClusterCollection" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusters resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of EventHubClusters in the EventHubCluster. </summary>
        <returns> An object representing collection of EventHubClusters and their operations over a EventHubCluster. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubClusters">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubClusters (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubClusters(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusters(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubClusters (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventHubCluster)" />
      <MemberSignature Language="F#" Value="static member GetEventHubClusters : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClusters (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the available Event Hubs Clusters within an ARM resource group
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters
            Operation Id: Clusters_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventHubs.EventHubCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubClustersAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubClustersAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.EventHubCluster&gt; GetEventHubClustersAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClustersAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubClustersAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventHubCluster)" />
      <MemberSignature Language="F#" Value="static member GetEventHubClustersAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubClustersAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists the available Event Hubs Clusters within an ARM resource group
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/clusters
            Operation Id: Clusters_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventHubs.EventHubCluster" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespace">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHubNamespace GetEventHubNamespace (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHubNamespace GetEventHubNamespace(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespace(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespace (client As ArmClient, id As ResourceIdentifier) As EventHubNamespace" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespace : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.EventHubNamespace" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespace (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubNamespace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a EventHubNamespace along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.EventHubNamespace" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespace (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespace(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespace(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespace (resourceGroup As ResourceGroup, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EventHubNamespace)" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespace : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespace (resourceGroup, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the description of the specified namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
            Operation Id: Namespaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;&gt; GetEventHubNamespaceAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string namespaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.EventHubs.EventHubNamespace&gt;&gt; GetEventHubNamespaceAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string namespaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaceAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespaceAsync (resourceGroup As ResourceGroup, namespaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EventHubNamespace))" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespaceAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaceAsync (resourceGroup, namespaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="namespaceName"> The Namespace name. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the description of the specified namespace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}
            Operation Id: Namespaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.EventHubNamespaceCollection GetEventHubNamespaces (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.EventHubNamespaceCollection GetEventHubNamespaces(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaces(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespaces (resourceGroup As ResourceGroup) As EventHubNamespaceCollection" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespaces : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.EventHubs.EventHubNamespaceCollection" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaces resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.EventHubNamespaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of EventHubNamespaces in the EventHubNamespace. </summary>
        <returns> An object representing collection of EventHubNamespaces and their operations over a EventHubNamespace. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespaces (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespaces(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaces(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespaces (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EventHubNamespace)" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespaces : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespaces (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available Namespaces within a subscription, irrespective of the resource groups.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces
            Operation Id: Namespaces_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.EventHubs.EventHubNamespace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventHubNamespacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespacesAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.EventHubs.EventHubNamespace&gt; GetEventHubNamespacesAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespacesAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEventHubNamespacesAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EventHubNamespace)" />
      <MemberSignature Language="F#" Value="static member GetEventHubNamespacesAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetEventHubNamespacesAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.EventHubs.EventHubNamespace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists all the available Namespaces within a subscription, irrespective of the resource groups.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces
            Operation Id: Namespaces_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.EventHubs.EventHubNamespace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceAuthorizationRule">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.NamespaceAuthorizationRule GetNamespaceAuthorizationRule (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.NamespaceAuthorizationRule GetNamespaceAuthorizationRule(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetNamespaceAuthorizationRule(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNamespaceAuthorizationRule (client As ArmClient, id As ResourceIdentifier) As NamespaceAuthorizationRule" />
      <MemberSignature Language="F#" Value="static member GetNamespaceAuthorizationRule : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.NamespaceAuthorizationRule" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetNamespaceAuthorizationRule (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.NamespaceAuthorizationRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a NamespaceAuthorizationRule along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.NamespaceAuthorizationRule" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNetworkRuleSet">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.NetworkRuleSet GetNetworkRuleSet (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.NetworkRuleSet GetNetworkRuleSet(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetNetworkRuleSet(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetNetworkRuleSet (client As ArmClient, id As ResourceIdentifier) As NetworkRuleSet" />
      <MemberSignature Language="F#" Value="static member GetNetworkRuleSet : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.NetworkRuleSet" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetNetworkRuleSet (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.NetworkRuleSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a NetworkRuleSet along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.NetworkRuleSet" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrivateEndpointConnection">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.PrivateEndpointConnection GetPrivateEndpointConnection (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.PrivateEndpointConnection GetPrivateEndpointConnection(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetPrivateEndpointConnection(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetPrivateEndpointConnection (client As ArmClient, id As ResourceIdentifier) As PrivateEndpointConnection" />
      <MemberSignature Language="F#" Value="static member GetPrivateEndpointConnection : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.PrivateEndpointConnection" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetPrivateEndpointConnection (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.PrivateEndpointConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a PrivateEndpointConnection along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.PrivateEndpointConnection" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaGroup">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.EventHubs.SchemaGroup GetSchemaGroup (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.EventHubs.SchemaGroup GetSchemaGroup(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.EventHubs.EventHubsExtensions.GetSchemaGroup(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchemaGroup (client As ArmClient, id As ResourceIdentifier) As SchemaGroup" />
      <MemberSignature Language="F#" Value="static member GetSchemaGroup : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.EventHubs.SchemaGroup" Usage="Azure.ResourceManager.EventHubs.EventHubsExtensions.GetSchemaGroup (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.EventHubs</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.EventHubs.SchemaGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a SchemaGroup along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.EventHubs.SchemaGroup" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
