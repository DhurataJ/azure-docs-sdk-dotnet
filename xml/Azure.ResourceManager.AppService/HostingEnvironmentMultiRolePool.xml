<Type Name="HostingEnvironmentMultiRolePool" FullName="Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool">
  <TypeSignature Language="C#" Value="public class HostingEnvironmentMultiRolePool : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HostingEnvironmentMultiRolePool extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool" />
  <TypeSignature Language="VB.NET" Value="Public Class HostingEnvironmentMultiRolePool&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type HostingEnvironmentMultiRolePool = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A Class representing a HostingEnvironmentMultiRolePool along with the instance operations that can be performed on it. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HostingEnvironmentMultiRolePool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation CreateOrUpdate (bool waitForCompletion, Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation CreateOrUpdate(bool waitForCompletion, class Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.CreateOrUpdate(System.Boolean,Azure.ResourceManager.AppService.WorkerPoolResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitForCompletion As Boolean, multiRolePoolEnvelope As WorkerPoolResourceData, Optional cancellationToken As CancellationToken = Nothing) As HostingEnvironmentMultiRolePoolCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : bool * Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&#xA;override this.CreateOrUpdate : bool * Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation" Usage="hostingEnvironmentMultiRolePool.CreateOrUpdate (waitForCompletion, multiRolePoolEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="multiRolePoolEnvelope" Type="Azure.ResourceManager.AppService.WorkerPoolResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="multiRolePoolEnvelope"> Properties of the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Create or update a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="multiRolePoolEnvelope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&gt; CreateOrUpdateAsync (bool waitForCompletion, Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&gt; CreateOrUpdateAsync(bool waitForCompletion, class Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.CreateOrUpdateAsync(System.Boolean,Azure.ResourceManager.AppService.WorkerPoolResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitForCompletion As Boolean, multiRolePoolEnvelope As WorkerPoolResourceData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HostingEnvironmentMultiRolePoolCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : bool * Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&gt;&#xA;override this.CreateOrUpdateAsync : bool * Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&gt;" Usage="hostingEnvironmentMultiRolePool.CreateOrUpdateAsync (waitForCompletion, multiRolePoolEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.HostingEnvironmentMultiRolePoolCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="multiRolePoolEnvelope" Type="Azure.ResourceManager.AppService.WorkerPoolResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="multiRolePoolEnvelope"> Properties of the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Create or update a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="multiRolePoolEnvelope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateResourceIdentifier">
      <MemberSignature Language="C#" Value="public static Azure.Core.ResourceIdentifier CreateResourceIdentifier (string subscriptionId, string resourceGroupName, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Core.ResourceIdentifier CreateResourceIdentifier(string subscriptionId, string resourceGroupName, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.CreateResourceIdentifier(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateResourceIdentifier (subscriptionId As String, resourceGroupName As String, name As String) As ResourceIdentifier" />
      <MemberSignature Language="F#" Value="static member CreateResourceIdentifier : string * string * string -&gt; Azure.Core.ResourceIdentifier" Usage="Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.CreateResourceIdentifier (subscriptionId, resourceGroupName, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceIdentifier</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="resourceGroupName" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">To be added.</param>
        <param name="resourceGroupName">To be added.</param>
        <param name="name">To be added.</param>
        <summary> Generate the resource identifier of a <see cref="T:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool" /> instance. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.WorkerPoolResourceData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.AppService.WorkerPoolResourceData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As WorkerPoolResourceData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.AppService.WorkerPoolResourceData" Usage="Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.WorkerPoolResourceData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt; Get (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt; Get(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.Get(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostingEnvironmentMultiRolePool)" />
      <MemberSignature Language="F#" Value="abstract member Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&#xA;override this.Get : System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;" Usage="hostingEnvironmentMultiRolePool.Get cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get properties of a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt; GetAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt; GetAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostingEnvironmentMultiRolePool))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;&#xA;override this.GetAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;" Usage="hostingEnvironmentMultiRolePool.GetAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get properties of a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRoleMetricDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRoleMetricDefinitions (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRoleMetricDefinitions(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRoleMetricDefinitions(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRoleMetricDefinitions (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRoleMetricDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;&#xA;override this.GetMultiRoleMetricDefinitions : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRoleMetricDefinitions cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get metric definitions for a multi-role pool of an App Service Environment. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppService.Models.ResourceMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRoleMetricDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRoleMetricDefinitionsAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRoleMetricDefinitionsAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRoleMetricDefinitionsAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRoleMetricDefinitionsAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRoleMetricDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;&#xA;override this.GetMultiRoleMetricDefinitionsAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRoleMetricDefinitionsAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get metric definitions for a multi-role pool of an App Service Environment. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppService.Models.ResourceMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRolePoolInstanceMetricDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRolePoolInstanceMetricDefinitions (string instance, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRolePoolInstanceMetricDefinitions(string instance, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRolePoolInstanceMetricDefinitions(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRolePoolInstanceMetricDefinitions (instance As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ResourceMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRolePoolInstanceMetricDefinitions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;&#xA;override this.GetMultiRolePoolInstanceMetricDefinitions : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRolePoolInstanceMetricDefinitions (instance, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="instance"> Name of the instance in the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get metric definitions for a specific instance of a multi-role pool of an App Service Environment. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppService.Models.ResourceMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="instance" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRolePoolInstanceMetricDefinitionsAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRolePoolInstanceMetricDefinitionsAsync (string instance, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt; GetMultiRolePoolInstanceMetricDefinitionsAsync(string instance, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRolePoolInstanceMetricDefinitionsAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRolePoolInstanceMetricDefinitionsAsync (instance As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ResourceMetricDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRolePoolInstanceMetricDefinitionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;&#xA;override this.GetMultiRolePoolInstanceMetricDefinitionsAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRolePoolInstanceMetricDefinitionsAsync (instance, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.ResourceMetricDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="instance"> Name of the instance in the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get metric definitions for a specific instance of a multi-role pool of an App Service Environment. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppService.Models.ResourceMetricDefinition" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="instance" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRolePoolSkus">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt; GetMultiRolePoolSkus (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppService.Models.SkuInfo&gt; GetMultiRolePoolSkus(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRolePoolSkus(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRolePoolSkus (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of SkuInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRolePoolSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;&#xA;override this.GetMultiRolePoolSkus : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRolePoolSkus cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get available SKUs for scaling a multi-role pool. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppService.Models.SkuInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRolePoolSkusAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt; GetMultiRolePoolSkusAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppService.Models.SkuInfo&gt; GetMultiRolePoolSkusAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRolePoolSkusAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRolePoolSkusAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of SkuInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRolePoolSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;&#xA;override this.GetMultiRolePoolSkusAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRolePoolSkusAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.SkuInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get available SKUs for scaling a multi-role pool. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppService.Models.SkuInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRoleUsages">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt; GetMultiRoleUsages (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.AppService.Models.Usage&gt; GetMultiRoleUsages(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRoleUsages(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRoleUsages (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of Usage)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRoleUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;&#xA;override this.GetMultiRoleUsages : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRoleUsages cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get usage metrics for a multi-role pool of an App Service Environment. </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.AppService.Models.Usage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMultiRoleUsagesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt; GetMultiRoleUsagesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.AppService.Models.Usage&gt; GetMultiRoleUsagesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.GetMultiRoleUsagesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMultiRoleUsagesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of Usage)" />
      <MemberSignature Language="F#" Value="abstract member GetMultiRoleUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;&#xA;override this.GetMultiRoleUsagesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;" Usage="hostingEnvironmentMultiRolePool.GetMultiRoleUsagesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.AppService.Models.Usage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Get usage metrics for a multi-role pool of an App Service Environment. </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.AppService.Models.Usage" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt; Update (Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt; Update(class Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.Update(Azure.ResourceManager.AppService.WorkerPoolResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Update (multiRolePoolEnvelope As WorkerPoolResourceData, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostingEnvironmentMultiRolePool)" />
      <MemberSignature Language="F#" Value="abstract member Update : Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&#xA;override this.Update : Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;" Usage="hostingEnvironmentMultiRolePool.Update (multiRolePoolEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiRolePoolEnvelope" Type="Azure.ResourceManager.AppService.WorkerPoolResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="multiRolePoolEnvelope"> Properties of the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Create or update a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="multiRolePoolEnvelope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt; UpdateAsync (Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt; UpdateAsync(class Azure.ResourceManager.AppService.WorkerPoolResourceData multiRolePoolEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool.UpdateAsync(Azure.ResourceManager.AppService.WorkerPoolResourceData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateAsync (multiRolePoolEnvelope As WorkerPoolResourceData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostingEnvironmentMultiRolePool))" />
      <MemberSignature Language="F#" Value="abstract member UpdateAsync : Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;&#xA;override this.UpdateAsync : Azure.ResourceManager.AppService.WorkerPoolResourceData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;" Usage="hostingEnvironmentMultiRolePool.UpdateAsync (multiRolePoolEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.HostingEnvironmentMultiRolePool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multiRolePoolEnvelope" Type="Azure.ResourceManager.AppService.WorkerPoolResourceData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="multiRolePoolEnvelope"> Properties of the multi-role pool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Create or update a multi-role pool. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="multiRolePoolEnvelope" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
