<Type Name="SiteHybridConnectionNamespaceRelayCollection" FullName="Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection">
  <TypeSignature Language="C#" Value="public class SiteHybridConnectionNamespaceRelayCollection : Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SiteHybridConnectionNamespaceRelayCollection extends Azure.ResourceManager.Core.ArmCollection" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class SiteHybridConnectionNamespaceRelayCollection&#xA;Inherits ArmCollection" />
  <TypeSignature Language="F#" Value="type SiteHybridConnectionNamespaceRelayCollection = class&#xA;    inherit ArmCollection" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class representing collection of HybridConnection and their operations over its parent. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SiteHybridConnectionNamespaceRelayCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation CreateOrUpdate (bool waitForCompletion, string namespaceName, string relayName, Azure.ResourceManager.AppService.HybridConnectionData connectionEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation CreateOrUpdate(bool waitForCompletion, string namespaceName, string relayName, class Azure.ResourceManager.AppService.HybridConnectionData connectionEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.CreateOrUpdate(System.Boolean,System.String,System.String,Azure.ResourceManager.AppService.HybridConnectionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (waitForCompletion As Boolean, namespaceName As String, relayName As String, connectionEnvelope As HybridConnectionData, Optional cancellationToken As CancellationToken = Nothing) As SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : bool * string * string * Azure.ResourceManager.AppService.HybridConnectionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&#xA;override this.CreateOrUpdate : bool * string * string * Azure.ResourceManager.AppService.HybridConnectionData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation" Usage="siteHybridConnectionNamespaceRelayCollection.CreateOrUpdate (waitForCompletion, namespaceName, relayName, connectionEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="connectionEnvelope" Type="Azure.ResourceManager.AppService.HybridConnectionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="connectionEnvelope"> The details of the hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Creates a new Hybrid Connection using a Service Bus relay. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" />, <paramref name="relayName" />, or <paramref name="connectionEnvelope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&gt; CreateOrUpdateAsync (bool waitForCompletion, string namespaceName, string relayName, Azure.ResourceManager.AppService.HybridConnectionData connectionEnvelope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&gt; CreateOrUpdateAsync(bool waitForCompletion, string namespaceName, string relayName, class Azure.ResourceManager.AppService.HybridConnectionData connectionEnvelope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.CreateOrUpdateAsync(System.Boolean,System.String,System.String,Azure.ResourceManager.AppService.HybridConnectionData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (waitForCompletion As Boolean, namespaceName As String, relayName As String, connectionEnvelope As HybridConnectionData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : bool * string * string * Azure.ResourceManager.AppService.HybridConnectionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&gt;&#xA;override this.CreateOrUpdateAsync : bool * string * string * Azure.ResourceManager.AppService.HybridConnectionData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.CreateOrUpdateAsync (waitForCompletion, namespaceName, relayName, connectionEnvelope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.AppService.Models.SiteHybridConnectionNamespaceRelayCreateOrUpdateOperation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitForCompletion" Type="System.Boolean" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="connectionEnvelope" Type="Azure.ResourceManager.AppService.HybridConnectionData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitForCompletion"> Waits for the completion of the long running operations. </param>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="connectionEnvelope"> The details of the hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Creates a new Hybrid Connection using a Service Bus relay. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" />, <paramref name="relayName" />, or <paramref name="connectionEnvelope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;bool&gt; Exists (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;bool&gt; Exists(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.Exists(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Exists (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;&#xA;override this.Exists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;bool&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.Exists (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks to see if the resource exists in azure. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="ExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt; ExistsAsync (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;bool&gt;&gt; ExistsAsync(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.ExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ExistsAsync (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Boolean))" />
      <MemberSignature Language="F#" Value="abstract member ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;&#xA;override this.ExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;bool&gt;&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.ExistsAsync (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;System.Boolean&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Checks to see if the resource exists in azure. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt; Get (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt; Get(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.Get(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SiteHybridConnectionNamespaceRelay)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&#xA;override this.Get : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.Get (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt; GetAsync (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt; GetAsync(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.GetAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAsync (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SiteHybridConnectionNamespaceRelay))" />
      <MemberSignature Language="F#" Value="abstract member GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;&#xA;override this.GetAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.GetAsync (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Description for Retrieves a specific Service Bus Hybrid Connection used by this Web App. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExists">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt; GetIfExists (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt; GetIfExists(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.GetIfExists(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExists (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of SiteHybridConnectionNamespaceRelay)" />
      <MemberSignature Language="F#" Value="abstract member GetIfExists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&#xA;override this.GetIfExists : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.GetIfExists (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIfExistsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt; GetIfExistsAsync (string namespaceName, string relayName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt; GetIfExistsAsync(string namespaceName, string relayName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelayCollection.GetIfExistsAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIfExistsAsync (namespaceName As String, relayName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of SiteHybridConnectionNamespaceRelay))" />
      <MemberSignature Language="F#" Value="abstract member GetIfExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;&#xA;override this.GetIfExistsAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;" Usage="siteHybridConnectionNamespaceRelayCollection.GetIfExistsAsync (namespaceName, relayName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.AppService</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.AppService.SiteHybridConnectionNamespaceRelay&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="relayName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="namespaceName"> The namespace for this hybrid connection. </param>
        <param name="relayName"> The relay name for this hybrid connection. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary> Tries to get details for this resource from the service. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="namespaceName" /> or <paramref name="relayName" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
