<Type Name="PurviewCatalogClient" FullName="Azure.Analytics.Purview.Catalog.PurviewCatalogClient">
  <TypeSignature Language="C#" Value="public class PurviewCatalogClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PurviewCatalogClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Analytics.Purview.Catalog.PurviewCatalogClient" />
  <TypeSignature Language="VB.NET" Value="Public Class PurviewCatalogClient" />
  <TypeSignature Language="F#" Value="type PurviewCatalogClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The PurviewCatalog service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PurviewCatalogClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of PurviewCatalogClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PurviewCatalogClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Analytics.Purview.Catalog.PurviewCatalogClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Analytics.Purview.Catalog.PurviewCatalogClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Analytics.Purview.Catalog.PurviewCatalogClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As PurviewCatalogClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Analytics.Purview.Catalog.PurviewCatalogClient : Uri * Azure.Core.TokenCredential * Azure.Analytics.Purview.Catalog.PurviewCatalogClientOptions -&gt; Azure.Analytics.Purview.Catalog.PurviewCatalogClient" Usage="new Azure.Analytics.Purview.Catalog.PurviewCatalogClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Analytics.Purview.Catalog.PurviewCatalogClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The catalog endpoint of your Purview account. Example: https://{accountName}.catalog.purview.azure.com. </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of PurviewCatalogClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AutoComplete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response AutoComplete (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response AutoComplete(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.AutoComplete(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AutoComplete (content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member AutoComplete : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.AutoComplete : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCatalogClient.AutoComplete (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Get auto complete options. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              limit: number,
              filter: AnyObject
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [AutoCompleteResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="AutoCompleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; AutoCompleteAsync (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; AutoCompleteAsync(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.AutoCompleteAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AutoCompleteAsync (content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member AutoCompleteAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.AutoCompleteAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCatalogClient.AutoCompleteAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Get auto complete options. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              limit: number,
              filter: AnyObject
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [AutoCompleteResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Entities">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Catalog.PurviewEntities Entities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Purview.Catalog.PurviewEntities Entities" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Entities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entities As PurviewEntities" />
      <MemberSignature Language="F#" Value="member this.Entities : Azure.Analytics.Purview.Catalog.PurviewEntities" Usage="Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Entities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Catalog.PurviewEntities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to operations which interact with entities in the catalog.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineageGraph">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetLineageGraph (string guid, string direction, Azure.RequestOptions options, int? depth = default, int? width = default, bool? includeParent = default, bool? getDerivedLineage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetLineageGraph(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;int32&gt; depth, valuetype System.Nullable`1&lt;int32&gt; width, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.GetLineageGraph(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineageGraph (guid As String, direction As String, options As RequestOptions, Optional depth As Nullable(Of Integer) = Nothing, Optional width As Nullable(Of Integer) = Nothing, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetLineageGraph : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.Response&#xA;override this.GetLineageGraph : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; Azure.Response" Usage="purviewCatalogClient.GetLineageGraph (guid, direction, options, depth, width, includeParent, getDerivedLineage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="depth" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="width" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="depth"> The number of hops for lineage. </param>
        <param name="width"> The number of max expanding width in lineage. </param>
        <param name="includeParent"> True to include the parent chain in the response. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <summary> Get lineage info of the entity specified by GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLineageGraphAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetLineageGraphAsync (string guid, string direction, Azure.RequestOptions options, int? depth = default, int? width = default, bool? includeParent = default, bool? getDerivedLineage = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetLineageGraphAsync(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;int32&gt; depth, valuetype System.Nullable`1&lt;int32&gt; width, valuetype System.Nullable`1&lt;bool&gt; includeParent, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.GetLineageGraphAsync(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineageGraphAsync (guid As String, direction As String, options As RequestOptions, Optional depth As Nullable(Of Integer) = Nothing, Optional width As Nullable(Of Integer) = Nothing, Optional includeParent As Nullable(Of Boolean) = Nothing, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetLineageGraphAsync : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetLineageGraphAsync : string * string * Azure.RequestOptions * Nullable&lt;int&gt; * Nullable&lt;int&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCatalogClient.GetLineageGraphAsync (guid, direction, options, depth, width, includeParent, getDerivedLineage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="depth" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="width" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="includeParent" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="depth"> The number of hops for lineage. </param>
        <param name="width"> The number of max expanding width in lineage. </param>
        <param name="includeParent"> True to include the parent chain in the response. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <summary> Get lineage info of the entity specified by GUID. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Glossaries">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Catalog.PurviewGlossaries Glossaries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Purview.Catalog.PurviewGlossaries Glossaries" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Glossaries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Glossaries As PurviewGlossaries" />
      <MemberSignature Language="F#" Value="member this.Glossaries : Azure.Analytics.Purview.Catalog.PurviewGlossaries" Usage="Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Glossaries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Catalog.PurviewGlossaries</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to operations which interact with glossaries in the catalog.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextPageLineage">
      <MemberSignature Language="C#" Value="public virtual Azure.Response NextPageLineage (string guid, string direction, Azure.RequestOptions options, bool? getDerivedLineage = default, int? offset = default, int? limit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response NextPageLineage(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;int32&gt; limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.NextPageLineage(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextPageLineage (guid As String, direction As String, options As RequestOptions, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member NextPageLineage : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.Response&#xA;override this.NextPageLineage : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.Response" Usage="purviewCatalogClient.NextPageLineage (guid, direction, options, getDerivedLineage, offset, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <summary> Return immediate next page lineage info about entity with pagination. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="NextPageLineageAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; NextPageLineageAsync (string guid, string direction, Azure.RequestOptions options, bool? getDerivedLineage = default, int? offset = default, int? limit = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; NextPageLineageAsync(string guid, string direction, class Azure.RequestOptions options, valuetype System.Nullable`1&lt;bool&gt; getDerivedLineage, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;int32&gt; limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.NextPageLineageAsync(System.String,System.String,Azure.RequestOptions,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NextPageLineageAsync (guid As String, direction As String, options As RequestOptions, Optional getDerivedLineage As Nullable(Of Boolean) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional limit As Nullable(Of Integer) = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member NextPageLineageAsync : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.NextPageLineageAsync : string * string * Azure.RequestOptions * Nullable&lt;bool&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCatalogClient.NextPageLineageAsync (guid, direction, options, getDerivedLineage, offset, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="guid" Type="System.String" />
        <Parameter Name="direction" Type="System.String" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
        <Parameter Name="getDerivedLineage" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="limit" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="guid"> The globally unique identifier of the entity. </param>
        <param name="direction"> The direction of the lineage, which could be INPUT, OUTPUT or BOTH. Allowed values: "BOTH" | "INPUT" | "OUTPUT". </param>
        <param name="options"> The request options. </param>
        <param name="getDerivedLineage"> True to include derived lineage in the response. </param>
        <param name="offset"> The offset for pagination purpose. </param>
        <param name="limit"> The page size - by default there is no paging. </param>
        <summary> Return immediate next page lineage info about entity with pagination. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              baseEntityGuid: string,
              guidEntityMap: Dictionary&lt;string, AtlasEntityHeader&gt;,
              widthCounts: Dictionary&lt;string, Dictionary&lt;string, AnyObject&gt;&gt;,
              lineageDepth: number,
              lineageWidth: number,
              includeParent: boolean,
              childrenCount: number,
              lineageDirection: "INPUT" | "OUTPUT" | "BOTH",
              parentRelations: [
                {
                  childEntityId: string,
                  relationshipId: string,
                  parentEntityId: string
                }
              ],
              relations: [
                {
                  fromEntityId: string,
                  relationshipId: string,
                  toEntityId: string
                }
              ]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="guid" /> or <paramref name="direction" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Relationships">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Catalog.PurviewRelationships Relationships { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Purview.Catalog.PurviewRelationships Relationships" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Relationships" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Relationships As PurviewRelationships" />
      <MemberSignature Language="F#" Value="member this.Relationships : Azure.Analytics.Purview.Catalog.PurviewRelationships" Usage="Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Relationships" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Catalog.PurviewRelationships</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to operations which interact with glossaries in the catalog.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Search (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Search(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Search(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Search (content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Search : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Search : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCatalogClient.Search (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Gets data using search. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              offset: number,
              limit: number,
              filter: AnyObject,
              facets: [
                {
                  count: number,
                  facet: string,
                  sort: AnyObject
                }
              ],
              taxonomySetting: {
                assetTypes: [string],
                facet: SearchFacetItem
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              @search.count: number,
              @search.facets: {
                assetType: [
                  {
                    count: number,
                    value: string
                  }
                ],
                classification: [SearchFacetItemValue],
                classificationCategory: [SearchFacetItemValue],
                contactId: [SearchFacetItemValue],
                fileExtension: [SearchFacetItemValue],
                label: [SearchFacetItemValue],
                term: [SearchFacetItemValue]
              },
              value: [SearchResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SearchAsync (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SearchAsync(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.SearchAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchAsync (content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SearchAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SearchAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCatalogClient.SearchAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Gets data using search. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              offset: number,
              limit: number,
              filter: AnyObject,
              facets: [
                {
                  count: number,
                  facet: string,
                  sort: AnyObject
                }
              ],
              taxonomySetting: {
                assetTypes: [string],
                facet: SearchFacetItem
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              @search.count: number,
              @search.facets: {
                assetType: [
                  {
                    count: number,
                    value: string
                  }
                ],
                classification: [SearchFacetItemValue],
                classificationCategory: [SearchFacetItemValue],
                contactId: [SearchFacetItemValue],
                fileExtension: [SearchFacetItemValue],
                label: [SearchFacetItemValue],
                term: [SearchFacetItemValue]
              },
              value: [SearchResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Suggest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Suggest (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Suggest(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Suggest(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Suggest (content As RequestContent, Optional options As RequestOptions = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Suggest : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response&#xA;override this.Suggest : Azure.Core.RequestContent * Azure.RequestOptions -&gt; Azure.Response" Usage="purviewCatalogClient.Suggest (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Get search suggestions by query criteria. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              limit: number,
              filter: AnyObject
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [SuggestResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="SuggestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; SuggestAsync (Azure.Core.RequestContent content, Azure.RequestOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; SuggestAsync(class Azure.Core.RequestContent content, class Azure.RequestOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.SuggestAsync(Azure.Core.RequestContent,Azure.RequestOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SuggestAsync (content As RequestContent, Optional options As RequestOptions = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member SuggestAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.SuggestAsync : Azure.Core.RequestContent * Azure.RequestOptions -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="purviewCatalogClient.SuggestAsync (content, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="options" Type="Azure.RequestOptions" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="options"> The request options. </param>
        <summary> Get search suggestions by query criteria. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              keywords: string,
              limit: number,
              filter: AnyObject
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [SuggestResultValue]
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="content" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="C#" Value="public Azure.Analytics.Purview.Catalog.PurviewTypes Types { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Analytics.Purview.Catalog.PurviewTypes Types" />
      <MemberSignature Language="DocId" Value="P:Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Types" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Types As PurviewTypes" />
      <MemberSignature Language="F#" Value="member this.Types : Azure.Analytics.Purview.Catalog.PurviewTypes" Usage="Azure.Analytics.Purview.Catalog.PurviewCatalogClient.Types" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Analytics.Purview.Catalog</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Analytics.Purview.Catalog.PurviewTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides access to operations which interact with types in the catalog.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
