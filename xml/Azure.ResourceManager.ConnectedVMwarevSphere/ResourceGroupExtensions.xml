<Type Name="ResourceGroupExtensions" FullName="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions">
  <TypeSignature Language="C#" Value="public static class ResourceGroupExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResourceGroupExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResourceGroupExtensions" />
  <TypeSignature Language="F#" Value="type ResourceGroupExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroup. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetResourcePool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt; GetResourcePool (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt; GetResourcePool(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePool(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourcePool (resourceGroup As ResourceGroup, resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourcePool)" />
      <MemberSignature Language="F#" Value="static member GetResourcePool : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePool (resourceGroup, resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}
            Operation Id: ResourcePools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourcePoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;&gt; GetResourcePoolAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string resourcePoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;&gt; GetResourcePoolAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string resourcePoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePoolAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourcePoolAsync (resourceGroup As ResourceGroup, resourcePoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourcePool))" />
      <MemberSignature Language="F#" Value="static member GetResourcePoolAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePoolAsync (resourceGroup, resourcePoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="resourcePoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="resourcePoolName"> Name of the resourcePool. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements resourcePool GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/resourcePools/{resourcePoolName}
            Operation Id: ResourcePools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourcePoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourcePoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourcePools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection GetResourcePools (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection GetResourcePools(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePools(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetResourcePools (resourceGroup As ResourceGroup) As ResourcePoolCollection" />
      <MemberSignature Language="F#" Value="static member GetResourcePools : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetResourcePools resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.ResourcePoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of ResourcePools in the ResourcePool. </summary>
        <returns> An object representing collection of ResourcePools and their operations over a ResourcePool. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVCenter">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt; GetVCenter (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt; GetVCenter(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenter(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVCenter (resourceGroup As ResourceGroup, vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VCenter)" />
      <MemberSignature Language="F#" Value="static member GetVCenter : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenter (resourceGroup, vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}
            Operation Id: VCenters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVCenterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;&gt; GetVCenterAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string vcenterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;&gt; GetVCenterAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string vcenterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenterAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVCenterAsync (resourceGroup As ResourceGroup, vcenterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VCenter))" />
      <MemberSignature Language="F#" Value="static member GetVCenterAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenterAsync (resourceGroup, vcenterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VCenter&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="vcenterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="vcenterName"> Name of the vCenter. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements vCenter GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/vcenters/{vcenterName}
            Operation Id: VCenters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="vcenterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="vcenterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVCenters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection GetVCenters (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection GetVCenters(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenters(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVCenters (resourceGroup As ResourceGroup) As VCenterCollection" />
      <MemberSignature Language="F#" Value="static member GetVCenters : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVCenters resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VCenterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VCenters in the VCenter. </summary>
        <returns> An object representing collection of VCenters and their operations over a VCenter. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachine">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt; GetVirtualMachine (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt; GetVirtualMachine(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachine(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachine (resourceGroup As ResourceGroup, virtualMachineName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualMachine)" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachine : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachine (resourceGroup, virtualMachineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualMachineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualMachineName"> Name of the virtual machine resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}
            Operation Id: VirtualMachines_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;&gt; GetVirtualMachineAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;&gt; GetVirtualMachineAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineAsync (resourceGroup As ResourceGroup, virtualMachineName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualMachine))" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineAsync (resourceGroup, virtualMachineName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachine&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualMachineName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualMachineName"> Name of the virtual machine resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachines/{virtualMachineName}
            Operation Id: VirtualMachines_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachines">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection GetVirtualMachines (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection GetVirtualMachines(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachines(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachines (resourceGroup As ResourceGroup) As VirtualMachineCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachines : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachines resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualMachines in the VirtualMachine. </summary>
        <returns> An object representing collection of VirtualMachines and their operations over a VirtualMachine. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplate">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt; GetVirtualMachineTemplate (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt; GetVirtualMachineTemplate(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplate(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineTemplate (resourceGroup As ResourceGroup, virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualMachineTemplate)" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineTemplate : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplate (resourceGroup, virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}
            Operation Id: VirtualMachineTemplates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplateAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;&gt; GetVirtualMachineTemplateAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineTemplateName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;&gt; GetVirtualMachineTemplateAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualMachineTemplateName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplateAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineTemplateAsync (resourceGroup As ResourceGroup, virtualMachineTemplateName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualMachineTemplate))" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineTemplateAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplateAsync (resourceGroup, virtualMachineTemplateName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplate&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualMachineTemplateName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualMachineTemplateName"> Name of the virtual machine template resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual machine template GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates/{virtualMachineTemplateName}
            Operation Id: VirtualMachineTemplates_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualMachineTemplateName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualMachineTemplateName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualMachineTemplates">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection GetVirtualMachineTemplates (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection GetVirtualMachineTemplates(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplates(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualMachineTemplates (resourceGroup As ResourceGroup) As VirtualMachineTemplateCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualMachineTemplates : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualMachineTemplates resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualMachineTemplateCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualMachineTemplates in the VirtualMachineTemplate. </summary>
        <returns> An object representing collection of VirtualMachineTemplates and their operations over a VirtualMachineTemplate. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetwork">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt; GetVirtualNetwork (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt; GetVirtualNetwork(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetwork(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualNetwork (resourceGroup As ResourceGroup, virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualNetwork)" />
      <MemberSignature Language="F#" Value="static member GetVirtualNetwork : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetwork (resourceGroup, virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}
            Operation Id: VirtualNetworks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworkAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;&gt; GetVirtualNetworkAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualNetworkName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;&gt; GetVirtualNetworkAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string virtualNetworkName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetworkAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualNetworkAsync (resourceGroup As ResourceGroup, virtualNetworkName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualNetwork))" />
      <MemberSignature Language="F#" Value="static member GetVirtualNetworkAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetworkAsync (resourceGroup, virtualNetworkName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetwork&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="virtualNetworkName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="virtualNetworkName"> Name of the virtual network resource. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements virtual network GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/virtualNetworks/{virtualNetworkName}
            Operation Id: VirtualNetworks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualNetworkName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="virtualNetworkName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualNetworks">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection GetVirtualNetworks (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection GetVirtualNetworks(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetworks(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualNetworks (resourceGroup As ResourceGroup) As VirtualNetworkCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualNetworks : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVirtualNetworks resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VirtualNetworkCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualNetworks in the VirtualNetwork. </summary>
        <returns> An object representing collection of VirtualNetworks and their operations over a VirtualNetwork. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareCluster">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt; GetVMwareCluster (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt; GetVMwareCluster(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareCluster(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareCluster (resourceGroup As ResourceGroup, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareCluster)" />
      <MemberSignature Language="F#" Value="static member GetVMwareCluster : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareCluster (resourceGroup, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusterAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;&gt; GetVMwareClusterAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;&gt; GetVMwareClusterAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string clusterName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareClusterAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusterAsync (resourceGroup As ResourceGroup, clusterName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareCluster))" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusterAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareClusterAsync (resourceGroup, clusterName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareCluster&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="clusterName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="clusterName"> Name of the cluster. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements cluster GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/clusters/{clusterName}
            Operation Id: Clusters_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="clusterName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="clusterName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareClusters">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection GetVMwareClusters(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareClusters(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareClusters (resourceGroup As ResourceGroup) As VMwareClusterCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareClusters : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareClusters resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareClusterCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VMwareClusters in the VMwareCluster. </summary>
        <returns> An object representing collection of VMwareClusters and their operations over a VMwareCluster. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastore">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt; GetVMwareDatastore (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt; GetVMwareDatastore(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastore(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastore (resourceGroup As ResourceGroup, datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareDatastore)" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastore : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastore (resourceGroup, datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}
            Operation Id: Datastores_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastoreAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;&gt; GetVMwareDatastoreAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string datastoreName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;&gt; GetVMwareDatastoreAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string datastoreName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastoreAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastoreAsync (resourceGroup As ResourceGroup, datastoreName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareDatastore))" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastoreAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastoreAsync (resourceGroup, datastoreName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastore&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="datastoreName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="datastoreName"> Name of the datastore. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements datastore GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/datastores/{datastoreName}
            Operation Id: Datastores_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="datastoreName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="datastoreName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareDatastores">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection GetVMwareDatastores(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastores(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareDatastores (resourceGroup As ResourceGroup) As VMwareDatastoreCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareDatastores : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareDatastores resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareDatastoreCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VMwareDatastores in the VMwareDatastore. </summary>
        <returns> An object representing collection of VMwareDatastores and their operations over a VMwareDatastore. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHost">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt; GetVMwareHost (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt; GetVMwareHost(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHost(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHost (resourceGroup As ResourceGroup, hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VMwareHost)" />
      <MemberSignature Language="F#" Value="static member GetVMwareHost : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHost (resourceGroup, hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}
            Operation Id: Hosts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHostAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;&gt; GetVMwareHostAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;&gt; GetVMwareHostAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHostAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHostAsync (resourceGroup As ResourceGroup, hostName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VMwareHost))" />
      <MemberSignature Language="F#" Value="static member GetVMwareHostAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;&gt;" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHostAsync (resourceGroup, hostName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHost&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostName"> Name of the host. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Implements host GET method.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ConnectedVMwarevSphere/hosts/{hostName}
            Operation Id: Hosts_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVMwareHosts">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection GetVMwareHosts(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHosts(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVMwareHosts (resourceGroup As ResourceGroup) As VMwareHostCollection" />
      <MemberSignature Language="F#" Value="static member GetVMwareHosts : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection" Usage="Azure.ResourceManager.ConnectedVMwarevSphere.ResourceGroupExtensions.GetVMwareHosts resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ConnectedVMwarevSphere</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ConnectedVMwarevSphere.VMwareHostCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VMwareHosts in the VMwareHost. </summary>
        <returns> An object representing collection of VMwareHosts and their operations over a VMwareHost. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
