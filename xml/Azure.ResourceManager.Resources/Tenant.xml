<Type Name="Tenant" FullName="Azure.ResourceManager.Resources.Tenant">
  <TypeSignature Language="C#" Value="public class Tenant : Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Tenant extends Azure.ResourceManager.Core.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.Resources.Tenant" />
  <TypeSignature Language="VB.NET" Value="Public Class Tenant&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type Tenant = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.Core.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A class representing the operations that can be performed over a specific subscription.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Tenant ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.Resources.Tenant" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TenantData Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.ResourceManager.Resources.TenantData Data" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Tenant.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Data As TenantData" />
      <MemberSignature Language="F#" Value="member this.Data : Azure.ResourceManager.Resources.TenantData" Usage="Azure.ResourceManager.Resources.Tenant.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TenantData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the data representing this Feature. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"> Throws if there is no data loaded in the current instance. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPolicyManifest">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt; GetDataPolicyManifest (string policyMode, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DataPolicyManifest&gt; GetDataPolicyManifest(string policyMode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetDataPolicyManifest(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPolicyManifest (policyMode As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DataPolicyManifest)" />
      <MemberSignature Language="F#" Value="abstract member GetDataPolicyManifest : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;&#xA;override this.GetDataPolicyManifest : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;" Usage="tenant.GetDataPolicyManifest (policyMode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyMode" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyMode"> The policy mode of the data policy manifest to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the data policy manifest with the given policy mode.
            Request Path: /providers/Microsoft.Authorization/dataPolicyManifests/{policyMode}
            Operation Id: DataPolicyManifests_GetByPolicyMode
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyMode" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyMode" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPolicyManifestAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;&gt; GetDataPolicyManifestAsync (string policyMode, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.DataPolicyManifest&gt;&gt; GetDataPolicyManifestAsync(string policyMode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetDataPolicyManifestAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPolicyManifestAsync (policyMode As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DataPolicyManifest))" />
      <MemberSignature Language="F#" Value="abstract member GetDataPolicyManifestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;&gt;&#xA;override this.GetDataPolicyManifestAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;&gt;" Usage="tenant.GetDataPolicyManifestAsync (policyMode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.DataPolicyManifest&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyMode" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyMode"> The policy mode of the data policy manifest to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the data policy manifest with the given policy mode.
            Request Path: /providers/Microsoft.Authorization/dataPolicyManifests/{policyMode}
            Operation Id: DataPolicyManifests_GetByPolicyMode
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyMode" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyMode" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPolicyManifests">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.DataPolicyManifestCollection GetDataPolicyManifests ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.DataPolicyManifestCollection GetDataPolicyManifests() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetDataPolicyManifests" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDataPolicyManifests () As DataPolicyManifestCollection" />
      <MemberSignature Language="F#" Value="abstract member GetDataPolicyManifests : unit -&gt; Azure.ResourceManager.Resources.DataPolicyManifestCollection&#xA;override this.GetDataPolicyManifests : unit -&gt; Azure.ResourceManager.Resources.DataPolicyManifestCollection" Usage="tenant.GetDataPolicyManifests " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.DataPolicyManifestCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of DataPolicyManifests in the DataPolicyManifest. </summary>
        <returns> An object representing collection of DataPolicyManifests and their operations over a DataPolicyManifest. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGenericResource">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt; GetGenericResource (Azure.Core.ResourceIdentifier resourceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.GenericResource&gt; GetGenericResource(class Azure.Core.ResourceIdentifier resourceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetGenericResource(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGenericResource (resourceId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Response(Of GenericResource)" />
      <MemberSignature Language="F#" Value="abstract member GetGenericResource : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;&#xA;override this.GetGenericResource : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;" Usage="tenant.GetGenericResource (resourceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource by ID.
            Request Path: /{resourceId}
            Operation Id: Resources_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericResourceAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;&gt; GetGenericResourceAsync (Azure.Core.ResourceIdentifier resourceId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.GenericResource&gt;&gt; GetGenericResourceAsync(class Azure.Core.ResourceIdentifier resourceId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetGenericResourceAsync(Azure.Core.ResourceIdentifier,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGenericResourceAsync (resourceId As ResourceIdentifier, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of GenericResource))" />
      <MemberSignature Language="F#" Value="abstract member GetGenericResourceAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;&gt;&#xA;override this.GetGenericResourceAsync : Azure.Core.ResourceIdentifier * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;&gt;" Usage="tenant.GetGenericResourceAsync (resourceId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.GenericResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceId" Type="Azure.Core.ResourceIdentifier" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceId"> The fully qualified ID of the resource, including the resource name and resource type. Use the format, /subscriptions/{guid}/resourceGroups/{resource-group-name}/{resource-provider-namespace}/{resource-type}/{resource-name}. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource by ID.
            Request Path: /{resourceId}
            Operation Id: Resources_GetById
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericResources">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.GenericResourceCollection GetGenericResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.GenericResourceCollection GetGenericResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetGenericResources" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGenericResources () As GenericResourceCollection" />
      <MemberSignature Language="F#" Value="abstract member GetGenericResources : unit -&gt; Azure.ResourceManager.Resources.GenericResourceCollection&#xA;override this.GetGenericResources : unit -&gt; Azure.ResourceManager.Resources.GenericResourceCollection" Usage="tenant.GetGenericResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.GenericResourceCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of GenericResources in the GenericResource. </summary>
        <returns> An object representing collection of GenericResources and their operations over a GenericResource. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagementGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt; GetManagementGroup (string groupId, Azure.ResourceManager.Management.Models.ManagementGroupExpandType? expand = default, bool? recurse = default, string filter = default, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt; GetManagementGroup(string groupId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; expand, valuetype System.Nullable`1&lt;bool&gt; recurse, string filter, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetManagementGroup(System.String,System.Nullable{Azure.ResourceManager.Management.Models.ManagementGroupExpandType},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementGroup (groupId As String, Optional expand As Nullable(Of ManagementGroupExpandType) = Nothing, Optional recurse As Nullable(Of Boolean) = Nothing, Optional filter As String = Nothing, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ManagementGroup)" />
      <MemberSignature Language="F#" Value="abstract member GetManagementGroup : string * Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&#xA;override this.GetManagementGroup : string * Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;" Usage="tenant.GetManagementGroup (groupId, expand, recurse, filter, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt;" />
        <Parameter Name="recurse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> Management Group ID. </param>
        <param name="expand"> The $expand=children query string parameter allows clients to request inclusion of children in the response payload.  $expand=path includes the path from the root group to the current group.  $expand=ancestors includes the ancestor Ids of the current group. </param>
        <param name="recurse"> The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. Note that  $expand=children must be passed up if $recurse is set to true. </param>
        <param name="filter"> A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription'). </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the management group.
            
            Request Path: /providers/Microsoft.Management/managementGroups/{groupId}
            Operation Id: ManagementGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagementGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt; GetManagementGroupAsync (string groupId, Azure.ResourceManager.Management.Models.ManagementGroupExpandType? expand = default, bool? recurse = default, string filter = default, string cacheControl = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Management.ManagementGroup&gt;&gt; GetManagementGroupAsync(string groupId, valuetype System.Nullable`1&lt;valuetype Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; expand, valuetype System.Nullable`1&lt;bool&gt; recurse, string filter, string cacheControl, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetManagementGroupAsync(System.String,System.Nullable{Azure.ResourceManager.Management.Models.ManagementGroupExpandType},System.Nullable{System.Boolean},System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementGroupAsync (groupId As String, Optional expand As Nullable(Of ManagementGroupExpandType) = Nothing, Optional recurse As Nullable(Of Boolean) = Nothing, Optional filter As String = Nothing, Optional cacheControl As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ManagementGroup))" />
      <MemberSignature Language="F#" Value="abstract member GetManagementGroupAsync : string * Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;&#xA;override this.GetManagementGroupAsync : string * Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt; * Nullable&lt;bool&gt; * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;" Usage="tenant.GetManagementGroupAsync (groupId, expand, recurse, filter, cacheControl, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Management.ManagementGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.String" />
        <Parameter Name="expand" Type="System.Nullable&lt;Azure.ResourceManager.Management.Models.ManagementGroupExpandType&gt;" />
        <Parameter Name="recurse" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cacheControl" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="groupId"> Management Group ID. </param>
        <param name="expand"> The $expand=children query string parameter allows clients to request inclusion of children in the response payload.  $expand=path includes the path from the root group to the current group.  $expand=ancestors includes the ancestor Ids of the current group. </param>
        <param name="recurse"> The $recurse=true query string parameter allows clients to request inclusion of entire hierarchy in the response payload. Note that  $expand=children must be passed up if $recurse is set to true. </param>
        <param name="filter"> A filter which allows the exclusion of subscriptions from results (i.e. '$filter=children.childType ne Subscription'). </param>
        <param name="cacheControl"> Indicates whether the request should utilize any caches. Populate the header with 'no-cache' value to bypass existing caches. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get the details of the management group.
            
            Request Path: /providers/Microsoft.Management/managementGroups/{groupId}
            Operation Id: ManagementGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groupId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetManagementGroups">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Management.ManagementGroupCollection GetManagementGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Management.ManagementGroupCollection GetManagementGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetManagementGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagementGroups () As ManagementGroupCollection" />
      <MemberSignature Language="F#" Value="abstract member GetManagementGroups : unit -&gt; Azure.ResourceManager.Management.ManagementGroupCollection&#xA;override this.GetManagementGroups : unit -&gt; Azure.ResourceManager.Management.ManagementGroupCollection" Usage="tenant.GetManagementGroups " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Management.ManagementGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of ManagementGroups in the ManagementGroup. </summary>
        <returns> An object representing collection of ManagementGroups and their operations over a ManagementGroup. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResourceLink">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt; GetResourceLink (string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt; GetResourceLink(string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetResourceLink(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceLink (scope As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ResourceLink)" />
      <MemberSignature Language="F#" Value="abstract member GetResourceLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&#xA;override this.GetResourceLink : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;" Usage="tenant.GetResourceLink (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource link with the specified ID.
            Request Path: /{linkId}
            Operation Id: ResourceLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceLinkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetResourceLinkAsync (string scope, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.ResourceLink&gt;&gt; GetResourceLinkAsync(string scope, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetResourceLinkAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceLinkAsync (scope As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ResourceLink))" />
      <MemberSignature Language="F#" Value="abstract member GetResourceLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;&#xA;override this.GetResourceLinkAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;" Usage="tenant.GetResourceLinkAsync (scope, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.ResourceLink&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="scope"> The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets a resource link with the specified ID.
            Request Path: /{linkId}
            Operation Id: ResourceLinks_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetResourceLinks">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.ResourceLinkCollection GetResourceLinks (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.ResourceLinkCollection GetResourceLinks(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetResourceLinks(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResourceLinks (scope As String) As ResourceLinkCollection" />
      <MemberSignature Language="F#" Value="abstract member GetResourceLinks : string -&gt; Azure.ResourceManager.Resources.ResourceLinkCollection&#xA;override this.GetResourceLinks : string -&gt; Azure.ResourceManager.Resources.ResourceLinkCollection" Usage="tenant.GetResourceLinks scope" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.ResourceLinkCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope"> The fully qualified ID of the scope for getting the resource links. For example, to list resource links at and under a resource group, set the scope to /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup. </param>
        <summary> Gets a collection of ResourceLinks in the ResourceLink. </summary>
        <returns> An object representing collection of ResourceLinks and their operations over a ResourceLink. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scope" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscription">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt; GetSubscription (string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Subscription&gt; GetSubscription(string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetSubscription(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscription (subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of Subscription)" />
      <MemberSignature Language="F#" Value="abstract member GetSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;&#xA;override this.GetSubscription : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;" Usage="tenant.GetSubscription (subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The ID of the target subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about a specified subscription.
            Request Path: /subscriptions/{subscriptionId}
            Operation Id: Subscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;&gt; GetSubscriptionAsync (string subscriptionId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Subscription&gt;&gt; GetSubscriptionAsync(string subscriptionId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetSubscriptionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptionAsync (subscriptionId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of Subscription))" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;&gt;&#xA;override this.GetSubscriptionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;&gt;" Usage="tenant.GetSubscriptionAsync (subscriptionId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Subscription&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionId"> The ID of the target subscription. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets details about a specified subscription.
            Request Path: /subscriptions/{subscriptionId}
            Operation Id: Subscriptions_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="subscriptionId" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSubscriptions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.SubscriptionCollection GetSubscriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.SubscriptionCollection GetSubscriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetSubscriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSubscriptions () As SubscriptionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetSubscriptions : unit -&gt; Azure.ResourceManager.Resources.SubscriptionCollection&#xA;override this.GetSubscriptions : unit -&gt; Azure.ResourceManager.Resources.SubscriptionCollection" Usage="tenant.GetSubscriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.SubscriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of Subscriptions in the Subscription. </summary>
        <returns> An object representing collection of Subscriptions and their operations over a Subscription. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicyDefinition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt; GetTenantPolicyDefinition (string policyDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TenantPolicyDefinition&gt; GetTenantPolicyDefinition(string policyDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicyDefinition(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicyDefinition (policyDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantPolicyDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicyDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&#xA;override this.GetTenantPolicyDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;" Usage="tenant.GetTenantPolicyDefinition (policyDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyDefinitionName"> The name of the built-in policy definition to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the built-in policy definition with the given name.
            Request Path: /providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
            Operation Id: PolicyDefinitions_GetBuiltIn
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyDefinitionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicyDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&gt; GetTenantPolicyDefinitionAsync (string policyDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&gt; GetTenantPolicyDefinitionAsync(string policyDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicyDefinitionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicyDefinitionAsync (policyDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantPolicyDefinition))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicyDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&gt;&#xA;override this.GetTenantPolicyDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&gt;" Usage="tenant.GetTenantPolicyDefinitionAsync (policyDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicyDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policyDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policyDefinitionName"> The name of the built-in policy definition to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the built-in policy definition with the given name.
            Request Path: /providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
            Operation Id: PolicyDefinitions_GetBuiltIn
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policyDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policyDefinitionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicyDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TenantPolicyDefinitionCollection GetTenantPolicyDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TenantPolicyDefinitionCollection GetTenantPolicyDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicyDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicyDefinitions () As TenantPolicyDefinitionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicyDefinitions : unit -&gt; Azure.ResourceManager.Resources.TenantPolicyDefinitionCollection&#xA;override this.GetTenantPolicyDefinitions : unit -&gt; Azure.ResourceManager.Resources.TenantPolicyDefinitionCollection" Usage="tenant.GetTenantPolicyDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TenantPolicyDefinitionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantPolicyDefinitions in the TenantPolicyDefinition. </summary>
        <returns> An object representing collection of TenantPolicyDefinitions and their operations over a TenantPolicyDefinition. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicySetDefinition">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt; GetTenantPolicySetDefinition (string policySetDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt; GetTenantPolicySetDefinition(string policySetDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicySetDefinition(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicySetDefinition (policySetDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of TenantPolicySetDefinition)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicySetDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&#xA;override this.GetTenantPolicySetDefinition : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;" Usage="tenant.GetTenantPolicySetDefinition (policySetDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policySetDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policySetDefinitionName"> The name of the policy set definition to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the built-in policy set definition with the given name.
            Request Path: /providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}
            Operation Id: PolicySetDefinitions_GetBuiltIn
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policySetDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policySetDefinitionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicySetDefinitionAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&gt; GetTenantPolicySetDefinitionAsync (string policySetDefinitionName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&gt; GetTenantPolicySetDefinitionAsync(string policySetDefinitionName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicySetDefinitionAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicySetDefinitionAsync (policySetDefinitionName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of TenantPolicySetDefinition))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicySetDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&gt;&#xA;override this.GetTenantPolicySetDefinitionAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&gt;" Usage="tenant.GetTenantPolicySetDefinitionAsync (policySetDefinitionName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.TenantPolicySetDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policySetDefinitionName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="policySetDefinitionName"> The name of the policy set definition to get. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            This operation retrieves the built-in policy set definition with the given name.
            Request Path: /providers/Microsoft.Authorization/policySetDefinitions/{policySetDefinitionName}
            Operation Id: PolicySetDefinitions_GetBuiltIn
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="policySetDefinitionName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="policySetDefinitionName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantPolicySetDefinitions">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.Resources.TenantPolicySetDefinitionCollection GetTenantPolicySetDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.Resources.TenantPolicySetDefinitionCollection GetTenantPolicySetDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantPolicySetDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantPolicySetDefinitions () As TenantPolicySetDefinitionCollection" />
      <MemberSignature Language="F#" Value="abstract member GetTenantPolicySetDefinitions : unit -&gt; Azure.ResourceManager.Resources.TenantPolicySetDefinitionCollection&#xA;override this.GetTenantPolicySetDefinitions : unit -&gt; Azure.ResourceManager.Resources.TenantPolicySetDefinitionCollection" Usage="tenant.GetTenantPolicySetDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.Resources.TenantPolicySetDefinitionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> Gets a collection of TenantPolicySetDefinitions in the TenantPolicySetDefinition. </summary>
        <returns> An object representing collection of TenantPolicySetDefinitions and their operations over a TenantPolicySetDefinition. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantProvider">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProvider (string resourceProviderNamespace, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProvider(string resourceProviderNamespace, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantProvider(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantProvider (resourceProviderNamespace As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ProviderInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantProvider : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&#xA;override this.GetTenantProvider : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;" Usage="tenant.GetTenantProvider (resourceProviderNamespace, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="expand"> The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified resource provider at the tenant level.
            Request Path: /providers/{resourceProviderNamespace}
            Operation Id: Providers_GetAtTenantScope
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantProviderAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&gt; GetTenantProviderAsync (string resourceProviderNamespace, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&gt; GetTenantProviderAsync(string resourceProviderNamespace, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantProviderAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantProviderAsync (resourceProviderNamespace As String, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ProviderInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetTenantProviderAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&gt;&#xA;override this.GetTenantProviderAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&gt;" Usage="tenant.GetTenantProviderAsync (resourceProviderNamespace, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceProviderNamespace" Type="System.String" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceProviderNamespace"> The namespace of the resource provider. </param>
        <param name="expand"> The $expand query parameter. For example, to include property aliases in response, use $expand=resourceTypes/aliases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets the specified resource provider at the tenant level.
            Request Path: /providers/{resourceProviderNamespace}
            Operation Id: Providers_GetAtTenantScope
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="resourceProviderNamespace" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceProviderNamespace" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTenantProviders">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProviders (int? top = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProviders(valuetype System.Nullable`1&lt;int32&gt; top, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantProviders(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantProviders (Optional top As Nullable(Of Integer) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ProviderInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantProviders : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&#xA;override this.GetTenantProviders : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;" Usage="tenant.GetTenantProviders (top, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The number of results to return. If null is passed returns all providers. </param>
        <param name="expand"> The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all resource providers for the tenant.
            Request Path: /providers
            Operation Id: Providers_ListAtTenantScope
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.Resources.Models.ProviderInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTenantProvidersAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProvidersAsync (int? top = default, string expand = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.Resources.Models.ProviderInfo&gt; GetTenantProvidersAsync(valuetype System.Nullable`1&lt;int32&gt; top, string expand, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.Resources.Tenant.GetTenantProvidersAsync(System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTenantProvidersAsync (Optional top As Nullable(Of Integer) = Nothing, Optional expand As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ProviderInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetTenantProvidersAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;&#xA;override this.GetTenantProvidersAsync : Nullable&lt;int&gt; * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;" Usage="tenant.GetTenantProvidersAsync (top, expand, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.Resources.Models.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="expand" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="top"> The number of results to return. If null is passed returns all providers. </param>
        <param name="expand"> The properties to include in the results. For example, use &amp;$expand=metadata in the query string to retrieve resource provider metadata. To include property aliases in response, use $expand=resourceTypes/aliases. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Gets all resource providers for the tenant.
            Request Path: /providers
            Operation Id: Providers_ListAtTenantScope
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.Resources.Models.ProviderInfo" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasData">
      <MemberSignature Language="C#" Value="public virtual bool HasData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasData" />
      <MemberSignature Language="DocId" Value="P:Azure.ResourceManager.Resources.Tenant.HasData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasData As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasData : bool" Usage="Azure.ResourceManager.Resources.Tenant.HasData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets whether or not the current instance has data. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceType">
      <MemberSignature Language="C#" Value="public static readonly Azure.Core.ResourceType ResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype Azure.Core.ResourceType ResourceType" />
      <MemberSignature Language="DocId" Value="F:Azure.ResourceManager.Resources.Tenant.ResourceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResourceType As ResourceType " />
      <MemberSignature Language="F#" Value=" staticval mutable ResourceType : Azure.Core.ResourceType" Usage="Azure.ResourceManager.Resources.Tenant.ResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.ResourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> Gets the resource type for the operations. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
