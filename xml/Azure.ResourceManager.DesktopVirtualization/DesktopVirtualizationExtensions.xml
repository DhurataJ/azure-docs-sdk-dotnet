<Type Name="DesktopVirtualizationExtensions" FullName="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions">
  <TypeSignature Language="C#" Value="public static class DesktopVirtualizationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DesktopVirtualizationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DesktopVirtualizationExtensions" />
  <TypeSignature Language="F#" Value="type DesktopVirtualizationExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.DesktopVirtualization. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHostPool">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPool GetHostPool (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPool GetHostPool(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPool (client As ArmClient, id As ResourceIdentifier) As HostPool" />
      <MemberSignature Language="F#" Value="static member GetHostPool : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.HostPool" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPool</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a HostPool along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPool" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPool (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPool(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPool (resourceGroup As ResourceGroup, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostPool)" />
      <MemberSignature Language="F#" Value="static member GetHostPool : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPool (resourceGroup, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt; GetHostPoolAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt; GetHostPoolAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolAsync (resourceGroup As ResourceGroup, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostPool))" />
      <MemberSignature Language="F#" Value="static member GetHostPoolAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolAsync (resourceGroup, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPools (resourceGroup As ResourceGroup) As HostPoolCollection" />
      <MemberSignature Language="F#" Value="static member GetHostPools : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of HostPools in the HostPool. </summary>
        <returns> An object representing collection of HostPools and their operations over a HostPool. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPools (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPools(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPools (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of HostPool)" />
      <MemberSignature Language="F#" Value="static member GetHostPools : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPools (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools
            Operation Id: HostPools_List
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPool" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPoolsAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPoolsAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolsAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolsAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of HostPool)" />
      <MemberSignature Language="F#" Value="static member GetHostPoolsAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetHostPoolsAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List hostPools in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/hostPools
            Operation Id: HostPools_List
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.HostPool" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMsixPackage">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.MsixPackage GetMsixPackage (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.MsixPackage GetMsixPackage(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetMsixPackage(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMsixPackage (client As ArmClient, id As ResourceIdentifier) As MsixPackage" />
      <MemberSignature Language="F#" Value="static member GetMsixPackage : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.MsixPackage" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetMsixPackage (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.MsixPackage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a MsixPackage along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.MsixPackage" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlan">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlan GetScalingPlan (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlan GetScalingPlan(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlan (client As ArmClient, id As ResourceIdentifier) As ScalingPlan" />
      <MemberSignature Language="F#" Value="static member GetScalingPlan : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlan" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a ScalingPlan along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlan" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlan">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlan (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlan(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlan (resourceGroup As ResourceGroup, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScalingPlan)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlan : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlan (resourceGroup, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt; GetScalingPlanAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt; GetScalingPlanAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlanAsync (resourceGroup As ResourceGroup, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScalingPlan))" />
      <MemberSignature Language="F#" Value="static member GetScalingPlanAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlanAsync (resourceGroup, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlans (resourceGroup As ResourceGroup) As ScalingPlanCollection" />
      <MemberSignature Language="F#" Value="static member GetScalingPlans : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of ScalingPlans in the ScalingPlan. </summary>
        <returns> An object representing collection of ScalingPlans and their operations over a ScalingPlan. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlans (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlans(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlans (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ScalingPlan)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlans : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlans (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans
            Operation Id: ScalingPlans_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlan" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlansAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlansAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlansAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlansAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlansAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ScalingPlan)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlansAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetScalingPlansAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List scaling plans in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/scalingPlans
            Operation Id: ScalingPlans_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.ScalingPlan" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSessionHost">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.SessionHost GetSessionHost (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.SessionHost GetSessionHost(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetSessionHost(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSessionHost (client As ArmClient, id As ResourceIdentifier) As SessionHost" />
      <MemberSignature Language="F#" Value="static member GetSessionHost : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.SessionHost" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetSessionHost (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.SessionHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a SessionHost along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.SessionHost" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserSession">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.UserSession GetUserSession (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.UserSession GetUserSession(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetUserSession(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetUserSession (client As ArmClient, id As ResourceIdentifier) As UserSession" />
      <MemberSignature Language="F#" Value="static member GetUserSession : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.UserSession" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetUserSession (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.UserSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a UserSession along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.UserSession" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplication">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplication GetVirtualApplication (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplication GetVirtualApplication(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplication(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplication (client As ArmClient, id As ResourceIdentifier) As VirtualApplication" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplication : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplication" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplication (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplication</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a VirtualApplication along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplication" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroup">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup GetVirtualApplicationGroup (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup GetVirtualApplicationGroup(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroup (client As ArmClient, id As ResourceIdentifier) As VirtualApplicationGroup" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroup : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a VirtualApplicationGroup along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroup (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroup(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroup (resourceGroup As ResourceGroup, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualApplicationGroup)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroup : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroup (resourceGroup, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt; GetVirtualApplicationGroupAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt; GetVirtualApplicationGroupAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupAsync (resourceGroup As ResourceGroup, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualApplicationGroup))" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupAsync (resourceGroup, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroups (resourceGroup As ResourceGroup) As VirtualApplicationGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroups : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualApplicationGroups in the VirtualApplicationGroup. </summary>
        <returns> An object representing collection of VirtualApplicationGroups and their operations over a VirtualApplicationGroup. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroups (this Azure.ResourceManager.Resources.Subscription subscription, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroups(class Azure.ResourceManager.Resources.Subscription subscription, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroups (subscription As Subscription, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualApplicationGroup)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroups : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroups (subscription, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups
            Operation Id: ApplicationGroups_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupsAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroupsAsync (this Azure.ResourceManager.Resources.Subscription subscription, string filter = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroupsAsync(class Azure.ResourceManager.Resources.Subscription subscription, string filter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupsAsync(Azure.ResourceManager.Resources.Subscription,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupsAsync (subscription As Subscription, Optional filter As String = Nothing, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualApplicationGroup)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupsAsync : Azure.ResourceManager.Resources.Subscription * string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualApplicationGroupsAsync (subscription, filter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="filter"> OData filter expression. Valid properties for filtering are applicationGroupType. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List applicationGroups in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/applicationGroups
            Operation Id: ApplicationGroups_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualDesktop">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualDesktop GetVirtualDesktop (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualDesktop GetVirtualDesktop(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualDesktop(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualDesktop (client As ArmClient, id As ResourceIdentifier) As VirtualDesktop" />
      <MemberSignature Language="F#" Value="static member GetVirtualDesktop : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualDesktop" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualDesktop (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualDesktop</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a VirtualDesktop along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualDesktop" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspace">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace GetVirtualWorkspace (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace GetVirtualWorkspace(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspace (client As ArmClient, id As ResourceIdentifier) As VirtualWorkspace" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspace : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary> Gets an object representing a VirtualWorkspace along with the instance operations that can be performed on it but with no data. </summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace" /> object. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspace (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspace(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspace (resourceGroup As ResourceGroup, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualWorkspace)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspace : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspace (resourceGroup, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt; GetVirtualWorkspaceAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt; GetVirtualWorkspaceAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaceAsync (resourceGroup As ResourceGroup, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualWorkspace))" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaceAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaceAsync (resourceGroup, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaces (resourceGroup As ResourceGroup) As VirtualWorkspaceCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaces : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualWorkspaces in the VirtualWorkspace. </summary>
        <returns> An object representing collection of VirtualWorkspaces and their operations over a VirtualWorkspace. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspaces (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspaces(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaces (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of VirtualWorkspace)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaces : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspaces (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces
            Operation Id: Workspaces_ListBySubscription
            </summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspacesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspacesAsync (this Azure.ResourceManager.Resources.Subscription subscription, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspacesAsync(class Azure.ResourceManager.Resources.Subscription subscription, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspacesAsync(Azure.ResourceManager.Resources.Subscription,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspacesAsync (subscription As Subscription, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of VirtualWorkspace)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspacesAsync : Azure.ResourceManager.Resources.Subscription * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.DesktopVirtualizationExtensions.GetVirtualWorkspacesAsync (subscription, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscription" Type="Azure.ResourceManager.Resources.Subscription" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscription"> The <see cref="T:Azure.ResourceManager.Resources.Subscription" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            List workspaces in subscription.
            Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.DesktopVirtualization/workspaces
            Operation Id: Workspaces_ListBySubscription
            </summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
