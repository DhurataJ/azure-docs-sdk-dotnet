<Type Name="ResourceGroupExtensions" FullName="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions">
  <TypeSignature Language="C#" Value="public static class ResourceGroupExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ResourceGroupExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ResourceGroupExtensions" />
  <TypeSignature Language="F#" Value="type ResourceGroupExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to ResourceGroup. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHostPool">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPool (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt; GetHostPool(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPool(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPool (resourceGroup As ResourceGroup, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of HostPool)" />
      <MemberSignature Language="F#" Value="static member GetHostPool : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPool (resourceGroup, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPoolAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt; GetHostPoolAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt; GetHostPoolAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string hostPoolName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPoolAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPoolAsync (resourceGroup As ResourceGroup, hostPoolName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of HostPool))" />
      <MemberSignature Language="F#" Value="static member GetHostPoolAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPoolAsync (resourceGroup, hostPoolName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.HostPool&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="hostPoolName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="hostPoolName"> The name of the host pool within the specified resource group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a host pool.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/hostPools/{hostPoolName}
            Operation Id: HostPools_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="hostPoolName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="hostPoolName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHostPools">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.HostPoolCollection GetHostPools(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPools(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetHostPools (resourceGroup As ResourceGroup) As HostPoolCollection" />
      <MemberSignature Language="F#" Value="static member GetHostPools : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.HostPoolCollection" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetHostPools resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.HostPoolCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of HostPools in the HostPool. </summary>
        <returns> An object representing collection of HostPools and their operations over a HostPool. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlan">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlan (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt; GetScalingPlan(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlan(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlan (resourceGroup As ResourceGroup, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ScalingPlan)" />
      <MemberSignature Language="F#" Value="static member GetScalingPlan : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlan (resourceGroup, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlanAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt; GetScalingPlanAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt; GetScalingPlanAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string scalingPlanName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlanAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlanAsync (resourceGroup As ResourceGroup, scalingPlanName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ScalingPlan))" />
      <MemberSignature Language="F#" Value="static member GetScalingPlanAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlanAsync (resourceGroup, scalingPlanName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.ScalingPlan&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="scalingPlanName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="scalingPlanName"> The name of the scaling plan. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a scaling plan.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/scalingPlans/{scalingPlanName}
            Operation Id: ScalingPlans_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="scalingPlanName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="scalingPlanName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetScalingPlans">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection GetScalingPlans(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlans(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetScalingPlans (resourceGroup As ResourceGroup) As ScalingPlanCollection" />
      <MemberSignature Language="F#" Value="static member GetScalingPlans : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetScalingPlans resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.ScalingPlanCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of ScalingPlans in the ScalingPlan. </summary>
        <returns> An object representing collection of ScalingPlans and their operations over a ScalingPlan. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroup">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroup (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt; GetVirtualApplicationGroup(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroup(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroup (resourceGroup As ResourceGroup, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualApplicationGroup)" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroup : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroup (resourceGroup, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroupAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt; GetVirtualApplicationGroupAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt; GetVirtualApplicationGroupAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string applicationGroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroupAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroupAsync (resourceGroup As ResourceGroup, applicationGroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualApplicationGroup))" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroupAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroupAsync (resourceGroup, applicationGroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroup&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="applicationGroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="applicationGroupName"> The name of the application group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get an application group.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/applicationGroups/{applicationGroupName}
            Operation Id: ApplicationGroups_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="applicationGroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="applicationGroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualApplicationGroups">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection GetVirtualApplicationGroups(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroups(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualApplicationGroups (resourceGroup As ResourceGroup) As VirtualApplicationGroupCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualApplicationGroups : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualApplicationGroups resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualApplicationGroupCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualApplicationGroups in the VirtualApplicationGroup. </summary>
        <returns> An object representing collection of VirtualApplicationGroups and their operations over a VirtualApplicationGroup. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspace">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspace (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt; GetVirtualWorkspace(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspace(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspace (resourceGroup As ResourceGroup, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of VirtualWorkspace)" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspace : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspace (resourceGroup, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt; GetVirtualWorkspaceAsync (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt; GetVirtualWorkspaceAsync(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup, string workspaceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspaceAsync(Azure.ResourceManager.Resources.ResourceGroup,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaceAsync (resourceGroup As ResourceGroup, workspaceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of VirtualWorkspace))" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaceAsync : Azure.ResourceManager.Resources.ResourceGroup * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt;" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspaceAsync (resourceGroup, workspaceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.DesktopVirtualization.VirtualWorkspace&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
        <Parameter Name="workspaceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <param name="workspaceName"> The name of the workspace. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get a workspace.
            Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DesktopVirtualization/workspaces/{workspaceName}
            Operation Id: Workspaces_Get
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="workspaceName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="workspaceName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualWorkspaces">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces (this Azure.ResourceManager.Resources.ResourceGroup resourceGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection GetVirtualWorkspaces(class Azure.ResourceManager.Resources.ResourceGroup resourceGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspaces(Azure.ResourceManager.Resources.ResourceGroup)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetVirtualWorkspaces (resourceGroup As ResourceGroup) As VirtualWorkspaceCollection" />
      <MemberSignature Language="F#" Value="static member GetVirtualWorkspaces : Azure.ResourceManager.Resources.ResourceGroup -&gt; Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection" Usage="Azure.ResourceManager.DesktopVirtualization.ResourceGroupExtensions.GetVirtualWorkspaces resourceGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.DesktopVirtualization</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.DesktopVirtualization.VirtualWorkspaceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroup" Type="Azure.ResourceManager.Resources.ResourceGroup" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroup"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroup" /> instance the method will execute against. </param>
        <summary> Gets a collection of VirtualWorkspaces in the VirtualWorkspace. </summary>
        <returns> An object representing collection of VirtualWorkspaces and their operations over a VirtualWorkspace. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
