<Type Name="ConversationsModelFactory" FullName="Azure.AI.Language.Conversations.Models.ConversationsModelFactory">
  <TypeSignature Language="C#" Value="public static class ConversationsModelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ConversationsModelFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.AI.Language.Conversations.Models.ConversationsModelFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class ConversationsModelFactory" />
  <TypeSignature Language="F#" Value="type ConversationsModelFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> Model factory for read-only models. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AnalyzeConversationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.AnalyzeConversationResult AnalyzeConversationResult (string query = default, string detectedLanguage = default, Azure.AI.Language.Conversations.Models.BasePrediction prediction = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.AnalyzeConversationResult AnalyzeConversationResult(string query, string detectedLanguage, class Azure.AI.Language.Conversations.Models.BasePrediction prediction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.AnalyzeConversationResult(System.String,System.String,Azure.AI.Language.Conversations.Models.BasePrediction)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnalyzeConversationResult (Optional query As String = Nothing, Optional detectedLanguage As String = Nothing, Optional prediction As BasePrediction = Nothing) As AnalyzeConversationResult" />
      <MemberSignature Language="F#" Value="static member AnalyzeConversationResult : string * string * Azure.AI.Language.Conversations.Models.BasePrediction -&gt; Azure.AI.Language.Conversations.Models.AnalyzeConversationResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.AnalyzeConversationResult (query, detectedLanguage, prediction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.AnalyzeConversationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="detectedLanguage" Type="System.String" />
        <Parameter Name="prediction" Type="Azure.AI.Language.Conversations.Models.BasePrediction" />
      </Parameters>
      <Docs>
        <param name="query"> The conversation utterance given by the caller. </param>
        <param name="detectedLanguage"> The system detected language for the query. </param>
        <param name="prediction"> The prediction result of a conversation project. </param>
        <summary> Initializes a new instance of AnalyzeConversationResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.AnalyzeConversationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnswerSpan">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.AnswerSpan AnswerSpan (string text = default, double? confidenceScore = default, int? offset = default, int? length = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.AnswerSpan AnswerSpan(string text, valuetype System.Nullable`1&lt;float64&gt; confidenceScore, valuetype System.Nullable`1&lt;int32&gt; offset, valuetype System.Nullable`1&lt;int32&gt; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.AnswerSpan(System.String,System.Nullable{System.Double},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AnswerSpan (Optional text As String = Nothing, Optional confidenceScore As Nullable(Of Double) = Nothing, Optional offset As Nullable(Of Integer) = Nothing, Optional length As Nullable(Of Integer) = Nothing) As AnswerSpan" />
      <MemberSignature Language="F#" Value="static member AnswerSpan : string * Nullable&lt;double&gt; * Nullable&lt;int&gt; * Nullable&lt;int&gt; -&gt; Azure.AI.Language.Conversations.Models.AnswerSpan" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.AnswerSpan (text, confidenceScore, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.AnswerSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="offset" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="length" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="text"> Predicted text of answer span. </param>
        <param name="confidenceScore"> Predicted score of answer span, value ranges from 0 to 1. </param>
        <param name="offset"> The answer span offset from the start of answer. </param>
        <param name="length"> The length of the answer span. </param>
        <summary> Initializes a new instance of AnswerSpan. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.AnswerSpan" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BasePrediction">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.BasePrediction BasePrediction (Azure.AI.Language.Conversations.Models.ProjectKind projectKind = default, string topIntent = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.BasePrediction BasePrediction(valuetype Azure.AI.Language.Conversations.Models.ProjectKind projectKind, string topIntent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.BasePrediction(Azure.AI.Language.Conversations.Models.ProjectKind,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BasePrediction (Optional projectKind As ProjectKind = Nothing, Optional topIntent As String = Nothing) As BasePrediction" />
      <MemberSignature Language="F#" Value="static member BasePrediction : Azure.AI.Language.Conversations.Models.ProjectKind * string -&gt; Azure.AI.Language.Conversations.Models.BasePrediction" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.BasePrediction (projectKind, topIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.BasePrediction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectKind" Type="Azure.AI.Language.Conversations.Models.ProjectKind" />
        <Parameter Name="topIntent" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectKind"> The type of the project. </param>
        <param name="topIntent"> The intent with the highest score. </param>
        <summary> Initializes a new instance of BasePrediction. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.BasePrediction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationEntity">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.ConversationEntity ConversationEntity (string category = default, string text = default, int offset = 0, int length = 0, float confidenceScore = 0, System.Collections.Generic.IEnumerable&lt;string&gt; listKeys = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.ConversationEntity ConversationEntity(string category, string text, int32 offset, int32 length, float32 confidenceScore, class System.Collections.Generic.IEnumerable`1&lt;string&gt; listKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationEntity(System.String,System.String,System.Int32,System.Int32,System.Single,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConversationEntity (Optional category As String = Nothing, Optional text As String = Nothing, Optional offset As Integer = 0, Optional length As Integer = 0, Optional confidenceScore As Single = 0, Optional listKeys As IEnumerable(Of String) = Nothing) As ConversationEntity" />
      <MemberSignature Language="F#" Value="static member ConversationEntity : string * string * int * int * single * seq&lt;string&gt; -&gt; Azure.AI.Language.Conversations.Models.ConversationEntity" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationEntity (category, text, offset, length, confidenceScore, listKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="confidenceScore" Type="System.Single" />
        <Parameter Name="listKeys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="category"> The entity category. </param>
        <param name="text"> The predicted entity text. </param>
        <param name="offset"> The starting index of this entity in the query. </param>
        <param name="length"> The length of the text. </param>
        <param name="confidenceScore"> The entity confidence score. </param>
        <param name="listKeys"> List of keys. </param>
        <summary> Initializes a new instance of ConversationEntity. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.ConversationEntity" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationIntent">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.ConversationIntent ConversationIntent (string category = default, float confidenceScore = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.ConversationIntent ConversationIntent(string category, float32 confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationIntent(System.String,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConversationIntent (Optional category As String = Nothing, Optional confidenceScore As Single = 0) As ConversationIntent" />
      <MemberSignature Language="F#" Value="static member ConversationIntent : string * single -&gt; Azure.AI.Language.Conversations.Models.ConversationIntent" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationIntent (category, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationIntent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="category"> A predicted class. </param>
        <param name="confidenceScore"> The confidence score of the class from 0.0 to 1.0. </param>
        <summary> Initializes a new instance of ConversationIntent. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.ConversationIntent" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationPrediction">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.ConversationPrediction ConversationPrediction (Azure.AI.Language.Conversations.Models.ProjectKind projectKind = default, string topIntent = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.ConversationIntent&gt; intents = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.ConversationEntity&gt; entities = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.ConversationPrediction ConversationPrediction(valuetype Azure.AI.Language.Conversations.Models.ProjectKind projectKind, string topIntent, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Conversations.Models.ConversationIntent&gt; intents, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Conversations.Models.ConversationEntity&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationPrediction(Azure.AI.Language.Conversations.Models.ProjectKind,System.String,System.Collections.Generic.IEnumerable{Azure.AI.Language.Conversations.Models.ConversationIntent},System.Collections.Generic.IEnumerable{Azure.AI.Language.Conversations.Models.ConversationEntity})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConversationPrediction (Optional projectKind As ProjectKind = Nothing, Optional topIntent As String = Nothing, Optional intents As IEnumerable(Of ConversationIntent) = Nothing, Optional entities As IEnumerable(Of ConversationEntity) = Nothing) As ConversationPrediction" />
      <MemberSignature Language="F#" Value="static member ConversationPrediction : Azure.AI.Language.Conversations.Models.ProjectKind * string * seq&lt;Azure.AI.Language.Conversations.Models.ConversationIntent&gt; * seq&lt;Azure.AI.Language.Conversations.Models.ConversationEntity&gt; -&gt; Azure.AI.Language.Conversations.Models.ConversationPrediction" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationPrediction (projectKind, topIntent, intents, entities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationPrediction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectKind" Type="Azure.AI.Language.Conversations.Models.ProjectKind" />
        <Parameter Name="topIntent" Type="System.String" />
        <Parameter Name="intents" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.ConversationIntent&gt;" />
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.ConversationEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="projectKind"> The type of the project. </param>
        <param name="topIntent"> The intent with the highest score. </param>
        <param name="intents"> The intent classification results. </param>
        <param name="entities"> The entity extraction results. </param>
        <summary> Initializes a new instance of ConversationPrediction. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.ConversationPrediction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.ConversationResult ConversationResult (string query = default, string detectedLanguage = default, Azure.AI.Language.Conversations.Models.ConversationPrediction prediction = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.ConversationResult ConversationResult(string query, string detectedLanguage, class Azure.AI.Language.Conversations.Models.ConversationPrediction prediction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationResult(System.String,System.String,Azure.AI.Language.Conversations.Models.ConversationPrediction)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConversationResult (Optional query As String = Nothing, Optional detectedLanguage As String = Nothing, Optional prediction As ConversationPrediction = Nothing) As ConversationResult" />
      <MemberSignature Language="F#" Value="static member ConversationResult : string * string * Azure.AI.Language.Conversations.Models.ConversationPrediction -&gt; Azure.AI.Language.Conversations.Models.ConversationResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationResult (query, detectedLanguage, prediction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.String" />
        <Parameter Name="detectedLanguage" Type="System.String" />
        <Parameter Name="prediction" Type="Azure.AI.Language.Conversations.Models.ConversationPrediction" />
      </Parameters>
      <Docs>
        <param name="query"> The same query given in request. </param>
        <param name="detectedLanguage"> The detected language from the query. </param>
        <param name="prediction"> The predicted result for the query. </param>
        <summary> Initializes a new instance of ConversationResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.ConversationResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConversationTargetIntentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.ConversationTargetIntentResult ConversationTargetIntentResult (Azure.AI.Language.Conversations.Models.TargetKind targetKind = default, string apiVersion = default, double confidenceScore = 0, Azure.AI.Language.Conversations.Models.ConversationResult result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.ConversationTargetIntentResult ConversationTargetIntentResult(valuetype Azure.AI.Language.Conversations.Models.TargetKind targetKind, string apiVersion, float64 confidenceScore, class Azure.AI.Language.Conversations.Models.ConversationResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationTargetIntentResult(Azure.AI.Language.Conversations.Models.TargetKind,System.String,System.Double,Azure.AI.Language.Conversations.Models.ConversationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConversationTargetIntentResult (Optional targetKind As TargetKind = Nothing, Optional apiVersion As String = Nothing, Optional confidenceScore As Double = 0, Optional result As ConversationResult = Nothing) As ConversationTargetIntentResult" />
      <MemberSignature Language="F#" Value="static member ConversationTargetIntentResult : Azure.AI.Language.Conversations.Models.TargetKind * string * double * Azure.AI.Language.Conversations.Models.ConversationResult -&gt; Azure.AI.Language.Conversations.Models.ConversationTargetIntentResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.ConversationTargetIntentResult (targetKind, apiVersion, confidenceScore, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.ConversationTargetIntentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetKind" Type="Azure.AI.Language.Conversations.Models.TargetKind" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="result" Type="Azure.AI.Language.Conversations.Models.ConversationResult" />
      </Parameters>
      <Docs>
        <param name="targetKind"> This discriminator property specifies the type of the target project that returns the response. </param>
        <param name="apiVersion"> The API version used to call a target service. </param>
        <param name="confidenceScore"> The prediction score and it ranges from 0.0 to 1.0. </param>
        <param name="result"> The actual response from a Conversation project. </param>
        <summary> Initializes a new instance of ConversationTargetIntentResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.ConversationTargetIntentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnowledgeBaseAnswer">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer KnowledgeBaseAnswer (System.Collections.Generic.IEnumerable&lt;string&gt; questions = default, string answer = default, double? confidenceScore = default, int? id = default, string source = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; metadata = default, Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog dialog = default, Azure.AI.Language.Conversations.Models.AnswerSpan answerSpan = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer KnowledgeBaseAnswer(class System.Collections.Generic.IEnumerable`1&lt;string&gt; questions, string answer, valuetype System.Nullable`1&lt;float64&gt; confidenceScore, valuetype System.Nullable`1&lt;int32&gt; id, string source, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; metadata, class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog dialog, class Azure.AI.Language.Conversations.Models.AnswerSpan answerSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswer(System.Collections.Generic.IEnumerable{System.String},System.String,System.Nullable{System.Double},System.Nullable{System.Int32},System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.String},Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog,Azure.AI.Language.Conversations.Models.AnswerSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KnowledgeBaseAnswer (Optional questions As IEnumerable(Of String) = Nothing, Optional answer As String = Nothing, Optional confidenceScore As Nullable(Of Double) = Nothing, Optional id As Nullable(Of Integer) = Nothing, Optional source As String = Nothing, Optional metadata As IReadOnlyDictionary(Of String, String) = Nothing, Optional dialog As KnowledgeBaseAnswerDialog = Nothing, Optional answerSpan As AnswerSpan = Nothing) As KnowledgeBaseAnswer" />
      <MemberSignature Language="F#" Value="static member KnowledgeBaseAnswer : seq&lt;string&gt; * string * Nullable&lt;double&gt; * Nullable&lt;int&gt; * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt; * Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog * Azure.AI.Language.Conversations.Models.AnswerSpan -&gt; Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswer (questions, answer, confidenceScore, id, source, metadata, dialog, answerSpan)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="questions" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="answer" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="id" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="dialog" Type="Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog" />
        <Parameter Name="answerSpan" Type="Azure.AI.Language.Conversations.Models.AnswerSpan" />
      </Parameters>
      <Docs>
        <param name="questions"> List of questions associated with the answer. </param>
        <param name="answer"> Answer text. </param>
        <param name="confidenceScore"> Answer confidence score, value ranges from 0 to 1. </param>
        <param name="id"> ID of the QnA result. </param>
        <param name="source"> Source of QnA result. </param>
        <param name="metadata"> Metadata associated with the answer, useful to categorize or filter question answers. </param>
        <param name="dialog"> Dialog associated with Answer. </param>
        <param name="answerSpan"> Answer span object of QnA with respect to user's question. </param>
        <summary> Initializes a new instance of KnowledgeBaseAnswer. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnowledgeBaseAnswerDialog">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog KnowledgeBaseAnswerDialog (bool? isContextOnly = default, System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt&gt; prompts = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog KnowledgeBaseAnswerDialog(valuetype System.Nullable`1&lt;bool&gt; isContextOnly, class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt&gt; prompts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswerDialog(System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KnowledgeBaseAnswerDialog (Optional isContextOnly As Nullable(Of Boolean) = Nothing, Optional prompts As IEnumerable(Of KnowledgeBaseAnswerPrompt) = Nothing) As KnowledgeBaseAnswerDialog" />
      <MemberSignature Language="F#" Value="static member KnowledgeBaseAnswerDialog : Nullable&lt;bool&gt; * seq&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt&gt; -&gt; Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswerDialog (isContextOnly, prompts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isContextOnly" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="prompts" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt&gt;" />
      </Parameters>
      <Docs>
        <param name="isContextOnly"> To mark if a prompt is relevant only with a previous question or not. If true, do not include this QnA as search result for queries without context; otherwise, if false, ignores context and includes this QnA in search result. </param>
        <param name="prompts"> List of prompts associated with the answer. </param>
        <summary> Initializes a new instance of KnowledgeBaseAnswerDialog. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerDialog" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnowledgeBaseAnswerPrompt">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt KnowledgeBaseAnswerPrompt (int? displayOrder = default, int? qnaId = default, string displayText = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt KnowledgeBaseAnswerPrompt(valuetype System.Nullable`1&lt;int32&gt; displayOrder, valuetype System.Nullable`1&lt;int32&gt; qnaId, string displayText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswerPrompt(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KnowledgeBaseAnswerPrompt (Optional displayOrder As Nullable(Of Integer) = Nothing, Optional qnaId As Nullable(Of Integer) = Nothing, Optional displayText As String = Nothing) As KnowledgeBaseAnswerPrompt" />
      <MemberSignature Language="F#" Value="static member KnowledgeBaseAnswerPrompt : Nullable&lt;int&gt; * Nullable&lt;int&gt; * string -&gt; Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswerPrompt (displayOrder, qnaId, displayText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="displayOrder" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="qnaId" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="displayText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="displayOrder"> Index of the prompt - used in ordering of the prompts. </param>
        <param name="qnaId"> QnA ID corresponding to the prompt. </param>
        <param name="displayText"> Text displayed to represent a follow up question prompt. </param>
        <summary> Initializes a new instance of KnowledgeBaseAnswerPrompt. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswerPrompt" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KnowledgeBaseAnswers">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers KnowledgeBaseAnswers (System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer&gt; answers = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers KnowledgeBaseAnswers(class System.Collections.Generic.IEnumerable`1&lt;class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer&gt; answers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswers(System.Collections.Generic.IEnumerable{Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function KnowledgeBaseAnswers (Optional answers As IEnumerable(Of KnowledgeBaseAnswer) = Nothing) As KnowledgeBaseAnswers" />
      <MemberSignature Language="F#" Value="static member KnowledgeBaseAnswers : seq&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer&gt; -&gt; Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.KnowledgeBaseAnswers answers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="answers" Type="System.Collections.Generic.IEnumerable&lt;Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswer&gt;" />
      </Parameters>
      <Docs>
        <param name="answers"> Represents Answer Result list. </param>
        <summary> Initializes a new instance of KnowledgeBaseAnswers. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LuisTargetIntentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.LuisTargetIntentResult LuisTargetIntentResult (Azure.AI.Language.Conversations.Models.TargetKind targetKind = default, string apiVersion = default, double confidenceScore = 0, object result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.LuisTargetIntentResult LuisTargetIntentResult(valuetype Azure.AI.Language.Conversations.Models.TargetKind targetKind, string apiVersion, float64 confidenceScore, object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.LuisTargetIntentResult(Azure.AI.Language.Conversations.Models.TargetKind,System.String,System.Double,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LuisTargetIntentResult (Optional targetKind As TargetKind = Nothing, Optional apiVersion As String = Nothing, Optional confidenceScore As Double = 0, Optional result As Object = Nothing) As LuisTargetIntentResult" />
      <MemberSignature Language="F#" Value="static member LuisTargetIntentResult : Azure.AI.Language.Conversations.Models.TargetKind * string * double * obj -&gt; Azure.AI.Language.Conversations.Models.LuisTargetIntentResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.LuisTargetIntentResult (targetKind, apiVersion, confidenceScore, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.LuisTargetIntentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetKind" Type="Azure.AI.Language.Conversations.Models.TargetKind" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="targetKind"> This discriminator property specifies the type of the target project that returns the response. </param>
        <param name="apiVersion"> The API version used to call a target service. </param>
        <param name="confidenceScore"> The prediction score and it ranges from 0.0 to 1.0. </param>
        <param name="result"> The actual response from a LUIS Generally Available application. </param>
        <summary> Initializes a new instance of LuisTargetIntentResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.LuisTargetIntentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoneLinkedTargetIntentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.NoneLinkedTargetIntentResult NoneLinkedTargetIntentResult (Azure.AI.Language.Conversations.Models.TargetKind targetKind = default, string apiVersion = default, double confidenceScore = 0, Azure.AI.Language.Conversations.Models.ConversationResult result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.NoneLinkedTargetIntentResult NoneLinkedTargetIntentResult(valuetype Azure.AI.Language.Conversations.Models.TargetKind targetKind, string apiVersion, float64 confidenceScore, class Azure.AI.Language.Conversations.Models.ConversationResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.NoneLinkedTargetIntentResult(Azure.AI.Language.Conversations.Models.TargetKind,System.String,System.Double,Azure.AI.Language.Conversations.Models.ConversationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NoneLinkedTargetIntentResult (Optional targetKind As TargetKind = Nothing, Optional apiVersion As String = Nothing, Optional confidenceScore As Double = 0, Optional result As ConversationResult = Nothing) As NoneLinkedTargetIntentResult" />
      <MemberSignature Language="F#" Value="static member NoneLinkedTargetIntentResult : Azure.AI.Language.Conversations.Models.TargetKind * string * double * Azure.AI.Language.Conversations.Models.ConversationResult -&gt; Azure.AI.Language.Conversations.Models.NoneLinkedTargetIntentResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.NoneLinkedTargetIntentResult (targetKind, apiVersion, confidenceScore, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.NoneLinkedTargetIntentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetKind" Type="Azure.AI.Language.Conversations.Models.TargetKind" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="result" Type="Azure.AI.Language.Conversations.Models.ConversationResult" />
      </Parameters>
      <Docs>
        <param name="targetKind"> This discriminator property specifies the type of the target project that returns the response. </param>
        <param name="apiVersion"> The API version used to call a target service. </param>
        <param name="confidenceScore"> The prediction score and it ranges from 0.0 to 1.0. </param>
        <param name="result"> The actual response from a Conversation project. </param>
        <summary> Initializes a new instance of NoneLinkedTargetIntentResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.NoneLinkedTargetIntentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrchestratorPrediction">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.OrchestratorPrediction OrchestratorPrediction (Azure.AI.Language.Conversations.Models.ProjectKind projectKind = default, string topIntent = default, System.Collections.Generic.IReadOnlyDictionary&lt;string,Azure.AI.Language.Conversations.Models.TargetIntentResult&gt; intents = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.OrchestratorPrediction OrchestratorPrediction(valuetype Azure.AI.Language.Conversations.Models.ProjectKind projectKind, string topIntent, class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, class Azure.AI.Language.Conversations.Models.TargetIntentResult&gt; intents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.OrchestratorPrediction(Azure.AI.Language.Conversations.Models.ProjectKind,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,Azure.AI.Language.Conversations.Models.TargetIntentResult})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OrchestratorPrediction (Optional projectKind As ProjectKind = Nothing, Optional topIntent As String = Nothing, Optional intents As IReadOnlyDictionary(Of String, TargetIntentResult) = Nothing) As OrchestratorPrediction" />
      <MemberSignature Language="F#" Value="static member OrchestratorPrediction : Azure.AI.Language.Conversations.Models.ProjectKind * string * System.Collections.Generic.IReadOnlyDictionary&lt;string, Azure.AI.Language.Conversations.Models.TargetIntentResult&gt; -&gt; Azure.AI.Language.Conversations.Models.OrchestratorPrediction" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.OrchestratorPrediction (projectKind, topIntent, intents)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.OrchestratorPrediction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectKind" Type="Azure.AI.Language.Conversations.Models.ProjectKind" />
        <Parameter Name="topIntent" Type="System.String" />
        <Parameter Name="intents" Type="System.Collections.Generic.IReadOnlyDictionary&lt;System.String,Azure.AI.Language.Conversations.Models.TargetIntentResult&gt;" />
      </Parameters>
      <Docs>
        <param name="projectKind"> The type of the project. </param>
        <param name="topIntent"> The intent with the highest score. </param>
        <param name="intents"> A dictionary that contains all intents. A key is an intent name and a value is its confidence score and target type. The top intent's value also contains the actual response from the target project. </param>
        <summary> Initializes a new instance of OrchestratorPrediction. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.OrchestratorPrediction" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionAnsweringTargetIntentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.QuestionAnsweringTargetIntentResult QuestionAnsweringTargetIntentResult (Azure.AI.Language.Conversations.Models.TargetKind targetKind = default, string apiVersion = default, double confidenceScore = 0, Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers result = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.QuestionAnsweringTargetIntentResult QuestionAnsweringTargetIntentResult(valuetype Azure.AI.Language.Conversations.Models.TargetKind targetKind, string apiVersion, float64 confidenceScore, class Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.QuestionAnsweringTargetIntentResult(Azure.AI.Language.Conversations.Models.TargetKind,System.String,System.Double,Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QuestionAnsweringTargetIntentResult (Optional targetKind As TargetKind = Nothing, Optional apiVersion As String = Nothing, Optional confidenceScore As Double = 0, Optional result As KnowledgeBaseAnswers = Nothing) As QuestionAnsweringTargetIntentResult" />
      <MemberSignature Language="F#" Value="static member QuestionAnsweringTargetIntentResult : Azure.AI.Language.Conversations.Models.TargetKind * string * double * Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers -&gt; Azure.AI.Language.Conversations.Models.QuestionAnsweringTargetIntentResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.QuestionAnsweringTargetIntentResult (targetKind, apiVersion, confidenceScore, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.QuestionAnsweringTargetIntentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetKind" Type="Azure.AI.Language.Conversations.Models.TargetKind" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
        <Parameter Name="result" Type="Azure.AI.Language.Conversations.Models.KnowledgeBaseAnswers" />
      </Parameters>
      <Docs>
        <param name="targetKind"> This discriminator property specifies the type of the target project that returns the response. </param>
        <param name="apiVersion"> The API version used to call a target service. </param>
        <param name="confidenceScore"> The prediction score and it ranges from 0.0 to 1.0. </param>
        <param name="result"> The generated answer by a Question Answering KB. </param>
        <summary> Initializes a new instance of QuestionAnsweringTargetIntentResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.QuestionAnsweringTargetIntentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetIntentResult">
      <MemberSignature Language="C#" Value="public static Azure.AI.Language.Conversations.Models.TargetIntentResult TargetIntentResult (Azure.AI.Language.Conversations.Models.TargetKind targetKind = default, string apiVersion = default, double confidenceScore = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AI.Language.Conversations.Models.TargetIntentResult TargetIntentResult(valuetype Azure.AI.Language.Conversations.Models.TargetKind targetKind, string apiVersion, float64 confidenceScore) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.AI.Language.Conversations.Models.ConversationsModelFactory.TargetIntentResult(Azure.AI.Language.Conversations.Models.TargetKind,System.String,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TargetIntentResult (Optional targetKind As TargetKind = Nothing, Optional apiVersion As String = Nothing, Optional confidenceScore As Double = 0) As TargetIntentResult" />
      <MemberSignature Language="F#" Value="static member TargetIntentResult : Azure.AI.Language.Conversations.Models.TargetKind * string * double -&gt; Azure.AI.Language.Conversations.Models.TargetIntentResult" Usage="Azure.AI.Language.Conversations.Models.ConversationsModelFactory.TargetIntentResult (targetKind, apiVersion, confidenceScore)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.AI.Language.Conversations</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AI.Language.Conversations.Models.TargetIntentResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetKind" Type="Azure.AI.Language.Conversations.Models.TargetKind" />
        <Parameter Name="apiVersion" Type="System.String" />
        <Parameter Name="confidenceScore" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="targetKind"> This discriminator property specifies the type of the target project that returns the response. </param>
        <param name="apiVersion"> The API version used to call a target service. </param>
        <param name="confidenceScore"> The prediction score and it ranges from 0.0 to 1.0. </param>
        <summary> Initializes a new instance of TargetIntentResult. </summary>
        <returns> A new <see cref="T:Azure.AI.Language.Conversations.Models.TargetIntentResult" /> instance for mocking. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
